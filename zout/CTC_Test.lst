   1:				.include "addresses.s"
**** functions/addresses.s ****
   1:     -	0000          	IO_CTC0_C0  equ 0x00
   2:     -	0001          	IO_CTC0_C1  equ 0x01
   3:     -	0002          	IO_CTC0_C2  equ 0x02
   4:     -	0003          	IO_CTC0_C3  equ 0x03
   5:				
   6:     -	0012          	IO_SIO0A_C  equ 00010010b
   7:     -	0010          	IO_SIO0A_D  equ 00010000b
   8:     -	0013          	IO_SIO0B_C  equ 00010011b
   9:     -	0011          	IO_SIO0B_D  equ 00010001b
  10:				
  11:     -	0000          	START_ROM   equ 0x0000
  12:     -	0020          	IO_REG0     equ 0x20
  13:				
  14:     -	0100          	PROG_ROM_START equ 0x0100
**** CTC_Test.asm ****
   2:     -	4000          	PROG_MEM_START equ 04000h
   3:				
   4:     -	4000          	MEM_CURSOR_STATE equ 0x4000  ; 1 byte var
   5:     -	4001          	MEM_LAST_CHAR equ 0x4001  ; 1 byte var
   6:     -	4003          	MEM_PROMPT_SIZE equ 0x4003
   7:     -	4005          	MEM_PROMPT_START equ 0x4005
   8:				
   9:				
  10:     -	E000          	CMD_CRS_SPEED equ 0xE000
  11:				
  12:				
  13:				; Include Kernel Libs at 0x0800
  14:     -	0820          	    org 0x0820
  15:				.include "conversions.s"
**** functions/conversions.s ****
   1:				
   2:				; Kernel Conversion Functions
   3:				
   4:				
   5:				
   6:				;*****************
   7:				; Convert Byte to Hex Char (ASCII)
   8:				;*****************
   9:				;Description: the StrLength function inline
  10:				;
  11:				;Inputs: A contains input byte
  12:				;
  13:				;Outputs: BC contains 2 Bytes of ASCII (HEX)
  14:				;
  15:				;Destroys: A, BC,
  16:     -	0820          	STRCONV_BYTES_TO_HEX:
  17:    0+11	0820  F5      	    PUSH AF;Backup A Register
  18:   11+4	0821  1F      	    RRA
  19:   15+4	0822  1F      	    RRA
  20:   19+4	0823  1F      	    RRA
  21:   23+4	0824  1F      	    RRA
  22:   27+17	0825  CD2F08  	    CALL STRCONV_BYTES_TO_HEX_1
  23:				    ;LD A,D
  24:   44+4	0828  47      	    LD B,A  
  25:   48+10	0829  F1      	    POP AF ; Reload first Byte
  26:   58+17	082A  CD2F08  	    CALL STRCONV_BYTES_TO_HEX_1
  27:				    ;LD A,D
  28:   75+4	082D  4F      	    LD C,A
  29:   79+10	082E  C9      	    RET
  30:				
  31:     -	082F          	STRCONV_BYTES_TO_HEX_1:
  32:   89+7	082F  E60F    	    AND 0x0F
  33:   96+7	0831  C630    	    ADD 48
  34:  103+7	0833  FE3A    	    CP 58 ; Check if less than 58 (less than ASCII 9)
  35:  110+7+5	0835  3802    	    JR C, STRCONV_BYTES_TO_HEX_2
  36:  117+7	0837  C607    	    ADD 7 ; A-F
  37:     -	0839          	STRCONV_BYTES_TO_HEX_2:
  38:				    ;LD D,A
  39:  124+10	0839  C9      	    RET
  40:				
  41:				
  42:				
**** CTC_Test.asm ****
  16:				.include "console.s"
**** functions/console.s ****
   1:				; Kernel Konsole Functions
   2:				
   3:     -	0010          	VAR_CONSOLE_BAUD equ 16d ; BAUD 14400 @ 3.686441MHz & CPUCLK/2
   4:				
   5:				;*****************
   6:				; CONSOLE_PRINTSTR
   7:				;*****************
   8:				;Description: Sends null-terminated String via Serial Port
   9:				;
  10:				;Inputs: BC contains start address of stringg
  11:				;
  12:				;Outputs: Output to IO_SIO0B_D
  13:				;
  14:				;Destroys: none
  15:     -	083A          	CONSOLE_PRINTSTR:
  16:				    ; BC contains String offset
  17:				    ; Prints null terminated string
  18:  134+11	083A  F5      	    PUSH AF
  19:  145+11	083B  C5      	    PUSH BC
  20:     -	083C          	CONSOLE_PRINTSTR_LOOP:
  21:  156+7	083C  0A      	    LD A,(BC)
  22:				
  23:				    ; Return if nullbyte
  24:  163+7	083D  F600    	    OR 0
  25:  170+7+5	083F  2809    	    JR Z, CONSOLE_PRINTSTR_EXIT
  26:				    ; Print Char
  27:  177+11	0841  D311    	    out (IO_SIO0B_D),A
  28:  188+17	0843  CD5808  	    call TX_EMP
  29:				
  30:				    ; INC BC and JP start of loop
  31:  205+6	0846  03      	    INC BC
  32:  211+10	0847  C33C08  	    jp CONSOLE_PRINTSTR_LOOP
  33:     -	084A          	CONSOLE_PRINTSTR_EXIT:
  34:  221+10	084A  C1      	    POP BC
  35:  231+10	084B  F1      	    POP AF
  36:  241+10	084C  C9      	    RET
  37:				
  38:				;*****************
  39:				; CONSOLE_READ_CHAR
  40:				;*****************
  41:				;Description: Gets a single byte from console port
  42:				;
  43:				;Inputs: BC contains start address of stringg
  44:				;
  45:				;Outputs: Output to IO_SIO0B_D
  46:				;
  47:				;Destroys: A
  48:				
  49:     -	084D          	CONSOLE_READ_CHAR:
  50:  251+4	084D  AF      	    XOR	A
  51:  255+11	084E  D313    	    OUT (IO_SIO0B_C), A
  52:  266+11	0850  DB13    	    IN A, (IO_SIO0B_C)
  53:  277+7	0852  E601    	    AND	1
  54:  284+5+6	0854  C8      	    RET	Z	
  55:  289+11	0855  DB11    	    IN A, (IO_SIO0B_D)
  56:				    ;LD D,A
  57:  300+10	0857  C9      	    RET
  58:				
  59:				;*****************
  60:				; CONSOLE_TX_WAIT/TX_EMP
  61:				;*****************
  62:				;Description: Waits until byte is sent
  63:				;
  64:				;Inputs: none
  65:				;
  66:				;Outputs: none
  67:				;
  68:				;Destroys: A
  69:     -	0858          	TX_EMP: ; DONT USE!!! DEPRECATED
  70:  310+10	0858  C35B08  	    jp CONSOLE_TX_WAIT
  71:     -	085B          	CONSOLE_TX_WAIT:
  72:				    ; check for TX buffer empty
  73:  320+4	085B  97      	    sub a ;clear a, write into WR0: select RR0
  74:  324+4	085C  3C      	    inc a ;select RR1
  75:  328+11	085D  D313    	    out (IO_SIO0B_C),A
  76:  339+11	085F  DB13    	    in A,(IO_SIO0B_C) ;read RRx
  77:  350+8	0861  CB47    	    bit 0,A
  78:  358+10	0863  CA5B08  	    jp z,CONSOLE_TX_WAIT
  79:  368+10	0866  C9      	    ret
  80:				
  81:				;*****************
  82:				; CONSOLE_INIT
  83:				;*****************
  84:				;Description: Initializes CTC & SIO on Port B
  85:				;
  86:				;Inputs: none 
  87:				;
  88:				;Outputs: none
  89:				;
  90:				;Destroys: A
  91:     -	0867          	CONSOLE_INIT:
  92:				    ; Setup CTC
  93:				    ; Init Ch1 (SIO0B)
  94:				    ; For 4MHz CPU CLK 00000111b
  95:				    ; For EXT CLK
  96:  378+7	0867  3E0F    	    LD A,00001111b
  97:  385+11	0869  D301    	    OUT (IO_CTC0_C1),A
  98:				
  99:  396+7	086B  3E10    	    LD A,VAR_CONSOLE_BAUD
 100:  403+11	086D  D301    	    OUT (IO_CTC0_C1),A
 101:				
 102:				    ; Setup SIO
 103:				     ;set up TX and RX:W
 104:  414+7	086F  3E30    	    ld a,00110000b ;write into WR0: error reset, select WR0
 105:  421+11	0871  D313    	    out (IO_SIO0B_C),A
 106:  432+7	0873  3E18    	    ld a,018h ;write into WR0: channel reset
 107:  439+11	0875  D313    	    out (IO_SIO0B_C),A
 108:				
 109:  450+7	0877  3E04    	    ld a,004h ;write into WR0: select WR4
 110:  457+11	0879  D313    	    out (IO_SIO0B_C),A
 111:				    ;ld a,44h ;44h write into WR4: clkx16,1 stop bit, no parity
 112:  468+7	087B  3E04    	    ld a,04h ;44h write into WR4: clkx1,1 stop bit, no parity
 113:  475+11	087D  D313    	    out (IO_SIO0B_C),A
 114:				
 115:  486+7	087F  3E05    	    ld a,005h ;write into WR0: select WR5
 116:  493+11	0881  D313    	    out (IO_SIO0B_C),A
 117:				    ;ld a,0E8h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
 118:  504+7	0883  3E68    	    ld a,068h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
 119:  511+11	0885  D313    	    out (IO_SIO0B_C),A
 120:				
 121:  522+7	0887  3E01    	    ld a,01h ;write into WR0: select WR1
 122:  529+11	0889  D313    	    out (IO_SIO0B_C),A
 123:  540+7	088B  3E04    	    ld a,00000100b ;no interrupt in CH B, special RX condition affects vect
 124:  547+11	088D  D313    	    out (IO_SIO0B_C),A
 125:				
 126:  558+7	088F  3E02    	    ld a,02h ;write into WR0: select WR2
 127:  565+11	0891  D313    	    out (IO_SIO0B_C),A
 128:  576+7	0893  3E00    	    ld a,0h ;write into WR2: cmd line int vect (see int vec table)
 129:				    ;bits D3,D2,D1 are changed according to RX condition
 130:  583+11	0895  D313    	    out (IO_SIO0B_C),A
 131:				
 132:				    ;ld a,01h ;write into WR0: select WR1
 133:				    ;out (IO_SIO0B_C),A
 134:				    ;ld a,00011000b ;interrupt on all RX characters, parity is not a spec RX condition
 135:				    ;buffer overrun is a spec RX condition
 136:				    ;out (IO_SIO0B_C),A
 137:				
 138:				    ;enable SIO channel A RX
 139:  594+7	0897  3E03    	    ld a,003h ;write into WR0: select WR3
 140:  601+11	0899  D313    	    out (IO_SIO0B_C),A
 141:  612+7	089B  3EC1    	    ld a,0C1h ;RX 8bit, auto enable off, RX on
 142:  619+11	089D  D313    	    out (IO_SIO0B_C),A
 143:				    ;Channel A RX active
 144:				
 145:  630+7	089F  3E25    	    LD A,'%'
 146:  637+11	08A1  D311    	    out (IO_SIO0B_D),A
 147:  648+17	08A3  CD5B08  	    call CONSOLE_TX_WAIT
 148:				
 149:  665+10	08A6  C9      	    RET
 150:				
 151:				
 152:				
 153:				;;
**** CTC_Test.asm ****
  17:				
  18:				;Strings
  19:     -	08A7          	STRINGS:
  20:     -	0600          	    org 0x0600
  21:     -	0600          	MSG_SYS_VER:
  22:     -	0600  1B5B324A	    db 27, '[2J', 27, '[H'
	              1B5B48
  23:     -	0607  5A384320	    db 'Z8C Mk IV - A Z80 Homebrew Computer',13,10
	              4D6B2049
	              56202D20
	              41205A38
	              3020486F
	              6D656272
	              65772043
	              6F6D7075
	              7465720D
	              0A
  24:     -	062C  4D6F6E69	    db 'Monitor ROM Ver. 1.0 by Dennis Gunia (2022)',13,10
	              746F7220
	              524F4D20
	              5665722E
	              20312E30
	              20627920
	              44656E6E
	              69732047
	              756E6961
	              20283230
	              3232290D
	              0A
  25:     -	0659  34386B20	    db '48k RAM - 4MHz Z80 CPU - Stack $',0
	              52414D20
	              2D20344D
	              487A205A
	              38302043
	              5055202D
	              20537461
	              636B2024
	              00
  26:				
  27:     -	067A          	MSG_CMD_HELP:
  28:     -	067A  0D0A    	    db 13,10
  29:     -	067C  68642024	    db "hd $<addr>  mget $<addr>  mset $<addr> <val>",13,10
	              3C616464
	              723E2020
	              6D676574
	              20243C61
	              6464723E
	              20206D73
	              65742024
	              3C616464
	              723E203C
	              76616C3E
	              0D0A
  30:     -	06AA  696F6765	    db "ioget $<addr>  ioset $<addr> <val>",13,10
	              7420243C
	              61646472
	              3E202069
	              6F736574
	              20243C61
	              6464723E
	              203C7661
	              6C3E0D0A
  31:     -	06CE  3F202065	    db "?  exec $<addr>  clr  ver"
	              78656320
	              243C6164
	              64723E20
	              20636C72
	              20207665
	              72
  32:     -	06E7  00      	    db 0
  33:				
  34:     -	06E8          	MSG_CMD_VER:
  35:     -	06E8  0D0A    	    db 13,10
  36:     -	06EA  5A384320	    db "Z8C Monitor Programm",13,10
	              4D6F6E69
	              746F7220
	              50726F67
	              72616D6D
	              0D0A
  37:     -	0700  524F4D20	    db "ROM Version 1.0 - Written by Dennis Gunia, 2022",13,10
	              56657273
	              696F6E20
	              312E3020
	              2D205772
	              69747465
	              6E206279
	              2044656E
	              6E697320
	              47756E69
	              612C2032
	              3032320D
	              0A
  38:     -	0731  332E3638	    db "3.686411MHz CPU, 48K RAM System, John 3,16",13,10
	              36343131
	              4D487A20
	              4350552C
	              2034384B
	              2052414D
	              20537973
	              74656D2C
	              204A6F68
	              6E20332C
	              31360D0A
  39:     -	075D  7777772E	    db "www.dennisgunia.de",13,10
	              64656E6E
	              69736775
	              6E69612E
	              64650D0A
  40:     -	0771  00      	    db 0
  41:				
  42:				
  43:     -	0772          	MSG_CMD_UNKNOWN:
  44:     -	0772  0D0A496E	    db 13,10,'Invalid operation',0,13
	              76616C69
	              64206F70
	              65726174
	              696F6E00
	              0D
  45:				
  46:     -	0787          	MSG_HEXDUMP_HEADER:
  47:     -	0787  0D0A4241	    db 13,10,'BASE   0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F',0
	              53452020
	              20302020
	              31202032
	              20203320
	              20342020
	              35202036
	              20203720
	              20382020
	              39202041
	              20204220
	              20432020
	              44202045
	              20204600
  48:				
  49:     -	07BF          	MSG_CLEAR:
  50:     -	07BF  1B5B324A	    db 27, '[2J', 27, '[H',0
	              1B5B4800
  51:				
  52:     -	07C7  68642024	CMD_PS_HD   db 'hd $',0
	              00
  53:     -	07CC  70742024	CMD_PS_PT   db 'pt $',0
	              00
  54:     -	07D1  65786563	CMD_PS_EXEC db 'exec $',0
	              202400
  55:     -	07D8  6D676574	CMD_PS_MGET db 'mget $',0
	              202400
  56:     -	07DF  6D736574	CMD_PS_MSET db 'mset $',0
	              202400
  57:     -	07E6  3F00    	CMD_PS_HELP db '?',0
  58:     -	07E8  636C7200	CMD_PS_CLEAR db 'clr',0
  59:     -	07EC  76657200	CMD_PS_VER db 'ver',0
  60:				
  61:     -	07F0  696F6765	CMD_PS_IOGET db 'ioget $',0
	              74202400
  62:     -	07F8  696F7365	CMD_PS_IOSET db 'ioset $',0
	              74202400
  63:				
  64:     -	0800          	INT_VEC:
  65:     -	000C          	    org 0Ch
  66:     -	000C  4D01    	    DEFW RX_CHA_AVAILABLE
  67:     -	000E          	    org 0Eh
  68:     -	000E  6301    	    DEFW SPEC_RX_CONDITON
  69:				    
  70:     -	0010          	init:
  71:     -	0000          	    org 0x0000
  72:  675+10	0000  C30001  	    jp PROG_ROM_START
  73:				
  74:     -	0003          	init_led:
  75:     -	0100          	    org PROG_ROM_START
  76:  685+7	0100  3E00    	    LD A,0x00
  77:  692+11	0102  D320    	    OUT (IO_REG0),A
  78:				
  79:     -	0104          	init_console:
  80:  703+17	0104  CD6708  	    CALL CONSOLE_INIT
  81:				
  82:				;INT_INI:
  83:				;    ld A,0
  84:				;    ld I,A  ;load I reg with zero
  85:				;    im 2    ;set int mode 2
  86:				;    ei      ;enable interupt
  87:				
  88:  720+7	0107  3E00    	    LD A,0x00
  89:  727+11	0109  D311    	    OUT (IO_SIO0B_D),A
  90:  738+17	010B  CD5808  	    CALL TX_EMP
  91:				
  92:  755+17	010E  CD4401  	    call A_RTS_ON
  93:				
  94:				    ; PRINT BANNER
  95:  772+10	0111  010006  	    LD BC, [MSG_SYS_VER]
  96:  782+17	0114  CD3A08  	    CALL CONSOLE_PRINTSTR
  97:				
  98:  799+10	0117  31FF7F  	    LD SP,07FFFh
  99:				    ; Print SP Location
 100:  809+20	011A  ED730040	    LD (0x4000),SP
 101:  829+13	011E  3A0140  	    LD A,(0x4001)
 102:  842+17	0121  CD5702  	    CALL PRINT_A_HEX
 103:  859+13	0124  3A0040  	    LD A,(0x4000)
 104:  872+17	0127  CD5702  	    CALL PRINT_A_HEX
 105:				
 106:  889+7	012A  3E0D    	    LD A,13
 107:  896+11	012C  D311    	    out (IO_SIO0B_D),A
 108:  907+17	012E  CD5808  	    call TX_EMP
 109:  924+7	0131  3E0A    	    LD A,10
 110:  931+11	0133  D311    	    out (IO_SIO0B_D),A
 111:  942+17	0135  CD5808  	    call TX_EMP
 112:				
 113:  959+10	0138  C37801  	    JP CONSOLE_PROMPT
 114:				
 115:				
 116:				; Serial Util Functions
 117:     -	013B          	A_RTS_OFF:
 118:  969+7	013B  3E05    	    ld a,005h ;write into WR0: select WR5
 119:  976+11	013D  D313    	    out (IO_SIO0B_C),A
 120:  987+7	013F  3EE8    	    ld a,0E8h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
 121:  994+11	0141  D313    	    out (IO_SIO0B_C),A
 122: 1005+10	0143  C9      	    ret
 123:     -	0144          	A_RTS_ON:
 124: 1015+7	0144  3E05    	    ld a,005h ;write into WR0: select WR5
 125: 1022+11	0146  D313    	    out (IO_SIO0B_C),A
 126: 1033+7	0148  3EEA    	    ld a,0EAh ;DTR active, TX 8bit, BREAK off, TX on, RTS active
 127: 1040+11	014A  D313    	    out (IO_SIO0B_C),A
 128: 1051+10	014C  C9      	    ret
 129:				
 130:     -	014D          	RX_CHA_AVAILABLE:
 131: 1061+11	014D  F5      	    push AF ;backup AF
 132:				
 133: 1072+7	014E  3EFF    	    LD A,0xFF
 134: 1079+11	0150  D320    	    OUT (IO_REG0),A
 135:				
 136: 1090+17	0152  CD3B01  	    call A_RTS_OFF
 137: 1107+11	0155  DB11    	    in A,(IO_SIO0B_D) ;read RX character into A
 138:				    ; A holds received character
 139:				    ;do something with the received character
 140:				    ;echo character to host
 141: 1118+11	0157  D311    	    out (IO_SIO0B_D),A
 142: 1129+17	0159  CD5808  	    call TX_EMP
 143: 1146+4	015C  FB      	    ei ;see comments below
 144: 1150+17	015D  CD4401  	    call A_RTS_ON ;see comments below
 145:				
 146:				    ;LD A,0x00
 147:				    ;OUT (IO_REG0),A
 148:				
 149: 1167+10	0160  F1      	    pop AF ;restore AF
 150: 1177+14	0161  ED4D    	    Reti
 151:				
 152:     -	0163          	SPEC_RX_CONDITON:
 153:				    
 154: 1191+10	0163  C30000  	    jp 0000h
 155:				
 156:				
 157:     -	0166          	DELAY:
 158: 1201+15	0166  DDE5    	    PUSH IX
 159: 1216+11	0168  C5      	    PUSH BC
 160: 1227+14	0169  DD210040	    LD IX,0x4000
 161: 1241+10	016D  010100  	    LD BC,1
 162:     -	0170          	DELAY_LOOP:
 163: 1251+15	0170  DD09    	    ADD IX,BC
 164: 1266+7+5	0172  30FC    	    JR NC, DELAY_LOOP
 165: 1273+10	0174  C1      	    POP BC
 166: 1283+14	0175  DDE1    	    POP IX
 167: 1297+10	0177  C9      	    RET
 168:				
 169:				; Console Functions
 170:				
 171:				
 172:     -	0178          	CONSOLE_PROMPT:
 173:				    ;Console Prompt
 174: 1307+7	0178  3E0A    	    LD A, 10
 175: 1314+11	017A  D311    	    out (IO_SIO0B_D),A
 176: 1325+17	017C  CD5808  	    call TX_EMP
 177: 1342+7	017F  3E3F    	    LD A,'?'
 178: 1349+11	0181  D311    	    out (IO_SIO0B_D),A
 179: 1360+17	0183  CD5808  	    call TX_EMP
 180: 1377+7	0186  3E3E    	    LD A,'>'
 181: 1384+11	0188  D311    	    out (IO_SIO0B_D),A
 182: 1395+17	018A  CD5808  	    call TX_EMP
 183: 1412+7	018D  3E20    	    LD A,' '
 184: 1419+11	018F  D311    	    out (IO_SIO0B_D),A
 185: 1430+17	0191  CD5808  	    call TX_EMP
 186: 1447+7	0194  3E5F    	    LD A,"_"
 187: 1454+11	0196  D311    	    out (IO_SIO0B_D),A 
 188: 1465+17	0198  CD5808  	    call TX_EMP
 189:				
 190:				    ; Blinking Cursor
 191: 1482+14	019B  DD2100E0	    LD IX,CMD_CRS_SPEED
 192: 1496+10	019F  010100  	    LD BC,1
 193: 1506+7	01A2  3E00    	    LD A,0
 194: 1513+13	01A4  320040  	    LD (MEM_CURSOR_STATE),A
 195:				    ; SET PROMPT LENGTH TO 0
 196: 1526+7	01A7  3E00    	    LD A,0
 197: 1533+13	01A9  320340  	    LD (MEM_PROMPT_SIZE),A
 198:				
 199:     -	01AC          	CONSOLE_PROMPT_LOOP:
 200:				    ; READ INPUT
 201:				    ; Delete Cursor if input Avail
 202:				    ;JP CONSOLE_PROMPT_LOOP_2
 203: 1546+17	01AC  CD4D08  	    CALL CONSOLE_READ_CHAR
 204: 1563+4	01AF  A7      	    AND A
 205: 1567+13	01B0  320140  	    LD (MEM_LAST_CHAR),A
 206:				
 207: 1580+10	01B3  CA1C02  	    JP Z, CONSOLE_PROMPT_LOOP_2
 208:				    ; if newline
 209: 1590+7	01B6  160D    	    LD D, 13
 210: 1597+4	01B8  BA      	    CP D
 211: 1601+7+5	01B9  2006    	    JR NZ, CONSOLE_PROMPT_LOOP_1
 212:				
 213: 1608+17	01BB  CDCF02  	    CALL CONSOLE_PARSE_LINE
 214:				
 215: 1625+10	01BE  C37801  	    JP CONSOLE_PROMPT
 216:				
 217:     -	01C1          	CONSOLE_PROMPT_LOOP_1: ; Not new line
 218:				   
 219: 1635+13	01C1  3A0140  	    LD A,(MEM_LAST_CHAR)
 220: 1648+7	01C4  167F    	    LD D, 0x7F
 221: 1655+4	01C6  BA      	    CP D
 222: 1659+7+5	01C7  2024    	    JR NZ, CONSOLE_PROMPT_LOOP_1B
 223:				
 224:				    ; if Backspace
 225: 1666+13	01C9  3A0340  	    LD A,(MEM_PROMPT_SIZE); test if 0
 226: 1679+4	01CC  A7      	    AND A
 227: 1683+10	01CD  CA1C02  	    JP Z,CONSOLE_PROMPT_LOOP_2; no action if buffer empty
 228:				
 229:				    ;EXEC this if backspace (08d)
 230: 1693+4	01D0  3D      	    DEC A
 231: 1697+13	01D1  320340  	    LD (MEM_PROMPT_SIZE),A  ; store size to mem
 232:				
 233: 1710+7	01D4  3E7F    	    LD A, 0x7F
 234: 1717+11	01D6  D311    	    out (IO_SIO0B_D),A
 235: 1728+17	01D8  CD5808  	    call TX_EMP
 236:				
 237: 1745+13	01DB  3A0140  	    LD A,(MEM_LAST_CHAR)
 238: 1758+11	01DE  D311    	    out (IO_SIO0B_D),A
 239: 1769+17	01E0  CD5808  	    call TX_EMP
 240:				
 241: 1786+7	01E3  3E20    	    LD A," "
 242: 1793+11	01E5  D311    	    out (IO_SIO0B_D),A 
 243: 1804+17	01E7  CD5808  	    call TX_EMP
 244:				
 245: 1821+10	01EA  C31C02  	    JP CONSOLE_PROMPT_LOOP_2
 246:				
 247:     -	01ED          	CONSOLE_PROMPT_LOOP_1B: ;IF not Backspace 
 248:				
 249:				
 250:				    ; CHECK if Controll Sequence
 251:				    
 252:				
 253:				    ; Continue
 254:				
 255: 1831+13	01ED  3A0340  	    LD A,(MEM_PROMPT_SIZE)
 256: 1844+4	01F0  3C      	    INC A
 257: 1848+13	01F1  320340  	    LD (MEM_PROMPT_SIZE),A  ; store size to mem
 258:				
 259: 1861+7	01F4  3E7F    	    LD A, 0x7F
 260: 1868+11	01F6  D311    	    out (IO_SIO0B_D),A
 261: 1879+17	01F8  CD5808  	    call TX_EMP
 262:				
 263: 1896+13	01FB  3A0140  	    LD A,(MEM_LAST_CHAR)
 264: 1909+11	01FE  D311    	    out (IO_SIO0B_D),A
 265: 1920+17	0200  CD5808  	    call TX_EMP
 266:				
 267: 1937+7	0203  3E20    	    LD A," "
 268: 1944+11	0205  D311    	    out (IO_SIO0B_D),A 
 269: 1955+17	0207  CD5808  	    call TX_EMP
 270:				
 271:				    ;APPEND CHAR TO BUFFER
 272: 1972+11	020A  C5      	    PUSH BC
 273: 1983+10	020B  210540  	    LD HL,MEM_PROMPT_START
 274: 1993+7	020E  0600    	    LD B,0
 275: 2000+13	0210  3A0340  	    LD A,(MEM_PROMPT_SIZE)
 276: 2013+4	0213  3D      	    DEC A
 277: 2017+4	0214  4F      	    LD C,A
 278: 2021+15	0215  ED4A    	    ADC HL, BC
 279: 2036+13	0217  3A0140  	    LD A, (MEM_LAST_CHAR)
 280: 2049+7	021A  77      	    LD (HL), A
 281: 2056+10	021B  C1      	    POP BC
 282:				    
 283:				
 284:				
 285:     -	021C          	CONSOLE_PROMPT_LOOP_2:
 286:				    ; Print Cursor
 287: 2066+15	021C  DD09    	    ADD IX,BC
 288: 2081+7+5	021E  308C    	    JR NC, CONSOLE_PROMPT_LOOP
 289:				    ; Toggle cycle
 290: 2088+13	0220  3A0040  	    LD A,(MEM_CURSOR_STATE)
 291: 2101+7	0223  EE01    	    XOR 1
 292: 2108+7+5	0225  2818    	    JR Z,CONSOLE_PROMPT_LOOP_3
 293: 2115+13	0227  320040  	    LD (MEM_CURSOR_STATE),A
 294:				
 295: 2128+7	022A  3E7F    	    LD A, 0x7F
 296: 2135+11	022C  D311    	    out (IO_SIO0B_D),A
 297: 2146+17	022E  CD5808  	    call TX_EMP
 298: 2163+7	0231  3E5F    	    LD A,'_'
 299: 2170+11	0233  D311    	    out (IO_SIO0B_D),A
 300: 2181+17	0235  CD5808  	    call TX_EMP
 301: 2198+14	0238  DD2100E0	    LD IX,CMD_CRS_SPEED
 302: 2212+10	023C  C3AC01  	    JP CONSOLE_PROMPT_LOOP
 303:				
 304:     -	023F          	CONSOLE_PROMPT_LOOP_3:
 305: 2222+13	023F  320040  	    LD (MEM_CURSOR_STATE),A
 306: 2235+7	0242  3E7F    	    LD A, 0x7F
 307: 2242+11	0244  D311    	    out (IO_SIO0B_D),A
 308: 2253+17	0246  CD5808  	    call TX_EMP
 309: 2270+7	0249  3E20    	    LD A,' '
 310: 2277+11	024B  D311    	    out (IO_SIO0B_D),A
 311: 2288+17	024D  CD5808  	    call TX_EMP
 312: 2305+14	0250  DD2100E0	    LD IX,CMD_CRS_SPEED
 313: 2319+10	0254  C3AC01  	    JP CONSOLE_PROMPT_LOOP
 314:				
 315:				; A Contains Byte
 316:     -	0257          	PRINT_A_HEX:
 317: 2329+11	0257  C5      	    PUSH BC
 318: 2340+11	0258  D5      	    PUSH DE
 319: 2351+17	0259  CD2008  	    CALL STRCONV_BYTES_TO_HEX   ; New Kernel Call
 320: 2368+4	025C  78      	    LD A,B
 321: 2372+11	025D  D311    	    out (IO_SIO0B_D),A
 322: 2383+17	025F  CD5808  	    call TX_EMP
 323: 2400+4	0262  79      	    LD A,C
 324: 2404+11	0263  D311    	    out (IO_SIO0B_D),A
 325: 2415+17	0265  CD5808  	    call TX_EMP
 326: 2432+10	0268  D1      	    POP DE
 327: 2442+10	0269  C1      	    POP BC
 328: 2452+10	026A  C9      	    RET
 329:				
 330:				
 331:				; HL contains Start ADDR
 332:     -	026B          	PRINT_HEXDUMP:
 333: 2462+11	026B  F5      	    PUSH AF
 334: 2473+11	026C  C5      	    PUSH BC
 335: 2484+11	026D  E5      	    PUSH HL
 336:				    ; PRINT Header
 337: 2495+10	026E  018707  	    LD BC, [MSG_HEXDUMP_HEADER]
 338: 2505+17	0271  CD3A08  	    CALL CONSOLE_PRINTSTR
 339: 2522+7	0274  0E00    	    LD C,0  ; Line Counter
 340:				
 341:     -	0276          	PRINT_HEXDUMP_SOL: ; Start of Line
 342: 2529+7	0276  3E0D    	    LD A,13
 343: 2536+11	0278  D311    	    out (IO_SIO0B_D),A
 344: 2547+17	027A  CD5808  	    call TX_EMP
 345: 2564+7	027D  3E0A    	    LD A,10
 346: 2571+11	027F  D311    	    out (IO_SIO0B_D),A
 347: 2582+17	0281  CD5808  	    call TX_EMP
 348:				
 349: 2599+4	0284  7C      	    LD A,H
 350: 2603+17	0285  CD5702  	    CALL PRINT_A_HEX
 351: 2620+4	0288  7D      	    LD A,L
 352: 2624+17	0289  CD5702  	    CALL PRINT_A_HEX
 353:				
 354: 2641+7	028C  3E68    	    LD A, 'h'
 355: 2648+11	028E  D311    	    out (IO_SIO0B_D),A
 356: 2659+17	0290  CD5808  	    call TX_EMP
 357: 2676+7	0293  3E3A    	    LD A, ':'
 358: 2683+11	0295  D311    	    out (IO_SIO0B_D),A
 359: 2694+17	0297  CD5808  	    call TX_EMP
 360: 2711+7	029A  3E20    	    LD A, ' '
 361: 2718+11	029C  D311    	    out (IO_SIO0B_D),A
 362: 2729+17	029E  CD5808  	    call TX_EMP
 363:				
 364: 2746+7	02A1  0600    	    LD B,0  ; Column Counter
 365:     -	02A3          	PRINT_HEXDUMP_LOOP1:
 366: 2753+7	02A3  7E      	    LD A,(HL)
 367: 2760+17	02A4  CD5702  	    CALL PRINT_A_HEX
 368: 2777+7	02A7  3E20    	    LD A, ' '
 369: 2784+11	02A9  D311    	    out (IO_SIO0B_D),A
 370: 2795+17	02AB  CD5808  	    call TX_EMP
 371:				
 372: 2812+4	02AE  04      	    INC B
 373: 2816+6	02AF  23      	    INC HL
 374:				    ; Check If 16 columns
 375: 2822+4	02B0  78      	    LD A,B
 376: 2826+7	02B1  E610    	    AND 0x10
 377: 2833+10	02B3  CAA302  	    JP Z, PRINT_HEXDUMP_LOOP1; IF less than 8
 378:				
 379: 2843+4	02B6  0C      	    INC C
 380: 2847+4	02B7  79      	    LD A,C
 381: 2851+7	02B8  E610    	    AND 0x10
 382:				
 383: 2858+10	02BA  CA7602  	    JP Z, PRINT_HEXDUMP_SOL; IF less than 8
 384:				
 385: 2868+7	02BD  3E0D    	    LD A,13
 386: 2875+11	02BF  D311    	    out (IO_SIO0B_D),A
 387: 2886+17	02C1  CD5808  	    call TX_EMP
 388: 2903+7	02C4  3E0A    	    LD A,10
 389: 2910+11	02C6  D311    	    out (IO_SIO0B_D),A
 390: 2921+17	02C8  CD5808  	    call TX_EMP
 391:				
 392: 2938+10	02CB  E1      	    POP HL
 393: 2948+10	02CC  C1      	    POP BC
 394: 2958+10	02CD  F1      	    POP AF
 395: 2968+10	02CE  C9      	    RET
 396:				
 397:				
 398:     -	02CF          	CONSOLE_PARSE_LINE:
 399:				    ;CLEAR Cursor
 400: 2978+7	02CF  3E7F    	    LD A, 0x7F
 401: 2985+11	02D1  D311    	    out (IO_SIO0B_D),A
 402: 2996+17	02D3  CD5808  	    call TX_EMP
 403:				
 404:				    ;ADD NULL TERMINATION TO STR
 405: 3013+10	02D6  210540  	    LD HL,MEM_PROMPT_START
 406: 3023+7	02D9  0600    	    LD B,0
 407: 3030+13	02DB  3A0340  	    LD A,(MEM_PROMPT_SIZE)
 408: 3043+4	02DE  4F      	    LD C,A
 409: 3047+15	02DF  ED4A    	    ADC HL, BC
 410: 3062+4	02E1  AF      	    XOR A ; SET A 0
 411: 3066+7	02E2  77      	    LD (HL), A
 412:				
 413:				    ; Echo Str
 414:				    ;LD BC, MEM_PROMPT_START
 415:				    ;CALL CONSOLE_PRINTSTR
 416:				
 417:				    ; HX DUMP
 418:				    ;
 419:				    ;LD A,(MEM_PROMPT_SIZE)
 420:				    ;CALL PRINT_A_HEX
 421:				
 422:				    ; Parse Hexdump CMD
 423:				    ; hd $xxxx
 424:     -	02E3          	CONSOLE_PARSE_LINE_HD:
 425: 3073+10	02E3  11C707  	    LD DE,[CMD_PS_HD]
 426: 3083+10	02E6  210540  	    LD HL,MEM_PROMPT_START
 427: 3093+17	02E9  CD6304  	    CALL CMP_STRING_START
 428: 3110+10	02EC  C20303  	    JP NZ,CONSOLE_PARSE_LINE_EXEC
 429:				    ; if match
 430:				    
 431: 3120+10	02EF  010940  	    LD BC,MEM_PROMPT_START + 4
 432: 3130+17	02F2  CD8A04  	    CALL DHEX_TO_BYTE
 433: 3147+4	02F5  67      	    LD H,A
 434:				
 435: 3151+10	02F6  010B40  	    LD BC,MEM_PROMPT_START + 6
 436: 3161+17	02F9  CD8A04  	    CALL DHEX_TO_BYTE
 437: 3178+7	02FC  E6F0    	    AND 0xF0
 438: 3185+4	02FE  6F      	    LD L,A
 439:				
 440:				    ;LD HL,0x4000
 441: 3189+17	02FF  CD6B02  	    CALL PRINT_HEXDUMP
 442: 3206+10	0302  C9      	    RET
 443:				
 444:     -	0303          	CONSOLE_PARSE_LINE_EXEC:
 445: 3216+10	0303  11D107  	    LD DE,[CMD_PS_EXEC]
 446: 3226+10	0306  210540  	    LD HL,MEM_PROMPT_START
 447: 3236+17	0309  CD6304  	    CALL CMP_STRING_START
 448: 3253+10	030C  C22103  	    JP NZ,CONSOLE_PARSE_LINE_MGET
 449:				    ; if match
 450:				    
 451: 3263+10	030F  010B40  	    LD BC,MEM_PROMPT_START + 6
 452: 3273+17	0312  CD8A04  	    CALL DHEX_TO_BYTE
 453: 3290+4	0315  67      	    LD H,A
 454:				
 455: 3294+10	0316  010D40  	    LD BC,MEM_PROMPT_START + 8
 456: 3304+17	0319  CD8A04  	    CALL DHEX_TO_BYTE
 457: 3321+4	031C  6F      	    LD L,A
 458:				
 459: 3325+10	031D  31FF7F  	    LD SP,0x7FFF
 460: 3335+4	0320  E9      	    JP HL
 461:				
 462:     -	0321          	CONSOLE_PARSE_LINE_MGET:
 463: 3339+10	0321  11D807  	    LD DE,[CMD_PS_MGET]
 464: 3349+10	0324  210540  	    LD HL,MEM_PROMPT_START
 465: 3359+17	0327  CD6304  	    CALL CMP_STRING_START
 466: 3376+10	032A  C26303  	    JP NZ,CONSOLE_PARSE_LINE_MSET
 467:				    ; if match
 468:				    
 469: 3386+10	032D  010B40  	    LD BC,MEM_PROMPT_START + 6
 470: 3396+17	0330  CD8A04  	    CALL DHEX_TO_BYTE
 471: 3413+4	0333  67      	    LD H,A
 472:				
 473: 3417+10	0334  010D40  	    LD BC,MEM_PROMPT_START + 8
 474: 3427+17	0337  CD8A04  	    CALL DHEX_TO_BYTE
 475: 3444+4	033A  6F      	    LD L,A
 476:				
 477: 3448+7	033B  3E0D    	    LD A,13
 478: 3455+11	033D  D311    	    out (IO_SIO0B_D),A
 479: 3466+17	033F  CD5808  	    call TX_EMP
 480: 3483+7	0342  3E0A    	    LD A,10
 481: 3490+11	0344  D311    	    out (IO_SIO0B_D),A
 482: 3501+17	0346  CD5808  	    call TX_EMP
 483: 3518+7	0349  7E      	    LD A,(HL)
 484: 3525+17	034A  CD5702  	    CALL PRINT_A_HEX
 485: 3542+7	034D  3E68    	    LD A,'h'
 486: 3549+11	034F  D311    	    out (IO_SIO0B_D),A
 487: 3560+17	0351  CD5808  	    call TX_EMP
 488: 3577+7	0354  3E0D    	    LD A,13
 489: 3584+11	0356  D311    	    out (IO_SIO0B_D),A
 490: 3595+17	0358  CD5808  	    call TX_EMP
 491: 3612+7	035B  3E0A    	    LD A,10
 492: 3619+11	035D  D311    	    out (IO_SIO0B_D),A
 493: 3630+17	035F  CD5808  	    call TX_EMP
 494: 3647+10	0362  C9      	    RET
 495:				
 496:     -	0363          	CONSOLE_PARSE_LINE_MSET:
 497: 3657+10	0363  11DF07  	    LD DE,[CMD_PS_MSET]
 498: 3667+10	0366  210540  	    LD HL,MEM_PROMPT_START
 499: 3677+17	0369  CD6304  	    CALL CMP_STRING_START
 500: 3694+10	036C  C29303  	    JP NZ,CONSOLE_PARSE_LINE_IOGET
 501:				    ; if match
 502:				    
 503: 3704+10	036F  010B40  	    LD BC,MEM_PROMPT_START + 6
 504: 3714+17	0372  CD8A04  	    CALL DHEX_TO_BYTE
 505: 3731+4	0375  67      	    LD H,A
 506:				
 507: 3735+10	0376  010D40  	    LD BC,MEM_PROMPT_START + 8
 508: 3745+17	0379  CD8A04  	    CALL DHEX_TO_BYTE
 509: 3762+4	037C  6F      	    LD L,A
 510:				
 511:				    
 512: 3766+10	037D  011040  	    LD BC,MEM_PROMPT_START + 11
 513: 3776+17	0380  CD8A04  	    CALL DHEX_TO_BYTE
 514:				    
 515: 3793+7	0383  77      	    LD (HL),A
 516:				
 517: 3800+7	0384  3E0D    	    LD A,13
 518: 3807+11	0386  D311    	    out (IO_SIO0B_D),A
 519: 3818+17	0388  CD5808  	    call TX_EMP
 520: 3835+7	038B  3E0A    	    LD A,10
 521: 3842+11	038D  D311    	    out (IO_SIO0B_D),A
 522: 3853+17	038F  CD5808  	    call TX_EMP
 523: 3870+10	0392  C9      	    RET
 524:     -	0393          	CONSOLE_PARSE_LINE_IOGET:
 525: 3880+10	0393  11F007  	    LD DE,[CMD_PS_IOGET]
 526: 3890+10	0396  210540  	    LD HL,MEM_PROMPT_START
 527: 3900+17	0399  CD6304  	    CALL CMP_STRING_START
 528: 3917+10	039C  C2CF03  	    JP NZ,CONSOLE_PARSE_LINE_IOSET
 529:				    ; if match
 530:				    
 531: 3927+10	039F  010C40  	    LD BC,MEM_PROMPT_START + 7
 532: 3937+17	03A2  CD8A04  	    CALL DHEX_TO_BYTE
 533: 3954+4	03A5  4F      	    LD C, A
 534:				
 535: 3958+7	03A6  3E0D    	    LD A,13
 536: 3965+11	03A8  D311    	    out (IO_SIO0B_D),A
 537: 3976+17	03AA  CD5808  	    call TX_EMP
 538: 3993+7	03AD  3E0A    	    LD A,10
 539: 4000+11	03AF  D311    	    out (IO_SIO0B_D),A
 540: 4011+17	03B1  CD5808  	    call TX_EMP
 541:				
 542: 4028+12	03B4  ED78    	    IN A,(C)
 543: 4040+17	03B6  CD5702  	    CALL PRINT_A_HEX
 544: 4057+7	03B9  3E68    	    LD A,'h'
 545:				
 546: 4064+11	03BB  D311    	    out (IO_SIO0B_D),A
 547: 4075+17	03BD  CD5808  	    call TX_EMP
 548: 4092+7	03C0  3E0D    	    LD A,13
 549: 4099+11	03C2  D311    	    out (IO_SIO0B_D),A
 550: 4110+17	03C4  CD5808  	    call TX_EMP
 551: 4127+7	03C7  3E0A    	    LD A,10
 552: 4134+11	03C9  D311    	    out (IO_SIO0B_D),A
 553: 4145+17	03CB  CD5808  	    call TX_EMP
 554: 4162+10	03CE  C9      	    RET
 555:				
 556:     -	03CF          	CONSOLE_PARSE_LINE_IOSET:
 557: 4172+10	03CF  11F807  	    LD DE,[CMD_PS_IOSET]
 558: 4182+10	03D2  210540  	    LD HL,MEM_PROMPT_START
 559: 4192+17	03D5  CD6304  	    CALL CMP_STRING_START
 560: 4209+10	03D8  C2F903  	    JP NZ,CONSOLE_PARSE_LINE_HELP
 561:				    ; if match
 562:				    
 563: 4219+10	03DB  010C40  	    LD BC,MEM_PROMPT_START + 7
 564: 4229+17	03DE  CD8A04  	    CALL DHEX_TO_BYTE
 565: 4246+4	03E1  4F      	    LD C,A
 566:				
 567: 4250+10	03E2  010F40  	    LD BC,MEM_PROMPT_START + 10
 568: 4260+17	03E5  CD8A04  	    CALL DHEX_TO_BYTE
 569:				
 570: 4277+12	03E8  ED79    	    OUT (C),A
 571:				
 572: 4289+7	03EA  3E0D    	    LD A,13
 573: 4296+11	03EC  D311    	    out (IO_SIO0B_D),A
 574: 4307+17	03EE  CD5808  	    call TX_EMP
 575: 4324+7	03F1  3E0A    	    LD A,10
 576: 4331+11	03F3  D311    	    out (IO_SIO0B_D),A
 577: 4342+17	03F5  CD5808  	    call TX_EMP
 578: 4359+10	03F8  C9      	    RET
 579:				
 580:     -	03F9          	CONSOLE_PARSE_LINE_HELP:
 581: 4369+10	03F9  11E607  	    LD DE,[CMD_PS_HELP]
 582: 4379+10	03FC  210540  	    LD HL,MEM_PROMPT_START
 583: 4389+17	03FF  CD6304  	    CALL CMP_STRING_START
 584: 4406+10	0402  C21A04  	    JP NZ,CONSOLE_PARSE_LINE_VERSION
 585:				    ; if match
 586:				    
 587: 4416+10	0405  017A06  	    LD BC,[MSG_CMD_HELP]
 588: 4426+17	0408  CD3A08  	    CALL CONSOLE_PRINTSTR
 589:				
 590: 4443+7	040B  3E0D    	    LD A,13
 591: 4450+11	040D  D311    	    out (IO_SIO0B_D),A
 592: 4461+17	040F  CD5808  	    call TX_EMP
 593: 4478+7	0412  3E0A    	    LD A,10
 594: 4485+11	0414  D311    	    out (IO_SIO0B_D),A
 595: 4496+17	0416  CD5808  	    call TX_EMP
 596: 4513+10	0419  C9      	    RET
 597:				
 598:     -	041A          	CONSOLE_PARSE_LINE_VERSION:
 599: 4523+10	041A  11EC07  	    LD DE,[CMD_PS_VER]
 600: 4533+10	041D  210540  	    LD HL,MEM_PROMPT_START
 601: 4543+17	0420  CD6304  	    CALL CMP_STRING_START
 602: 4560+10	0423  C23B04  	    JP NZ,CONSOLE_PARSE_LINE_CLEAR
 603:				    ; if match
 604:				    
 605: 4570+10	0426  01E806  	    LD BC,[MSG_CMD_VER]
 606: 4580+17	0429  CD3A08  	    CALL CONSOLE_PRINTSTR
 607:				
 608: 4597+7	042C  3E0D    	    LD A,13
 609: 4604+11	042E  D311    	    out (IO_SIO0B_D),A
 610: 4615+17	0430  CD5808  	    call TX_EMP
 611: 4632+7	0433  3E0A    	    LD A,10
 612: 4639+11	0435  D311    	    out (IO_SIO0B_D),A
 613: 4650+17	0437  CD5808  	    call TX_EMP
 614: 4667+10	043A  C9      	    RET
 615:				
 616:     -	043B          	CONSOLE_PARSE_LINE_CLEAR:
 617: 4677+10	043B  11E807  	    LD DE,[CMD_PS_CLEAR]
 618: 4687+10	043E  210540  	    LD HL,MEM_PROMPT_START
 619: 4697+17	0441  CD6304  	    CALL CMP_STRING_START
 620: 4714+10	0444  C24E04  	    JP NZ,CONSOLE_PARSE_LINE_ELSE
 621:				    ; if match
 622:				    
 623: 4724+10	0447  01BF07  	    LD BC,[MSG_CLEAR]
 624: 4734+17	044A  CD3A08  	    CALL CONSOLE_PRINTSTR
 625:				
 626: 4751+10	044D  C9      	    RET
 627:				
 628:				
 629:				
 630:     -	044E          	CONSOLE_PARSE_LINE_ELSE:
 631:				    ; Error Message
 632: 4761+10	044E  017207  	    LD BC, [MSG_CMD_UNKNOWN]
 633: 4771+17	0451  CD3A08  	    CALL CONSOLE_PRINTSTR
 634: 4788+7	0454  3E0D    	    LD A,13
 635: 4795+11	0456  D311    	    out (IO_SIO0B_D),A
 636: 4806+17	0458  CD5808  	    call TX_EMP
 637: 4823+7	045B  3E0A    	    LD A,10
 638: 4830+11	045D  D311    	    out (IO_SIO0B_D),A
 639: 4841+17	045F  CD5808  	    call TX_EMP
 640: 4858+10	0462  C9      	    RET
 641:				
 642:				
 643:				; HL = String to compare
 644:				; DE = String Pattern
 645:     -	0463          	CMP_STRING_START:
 646: 4868+7	0463  1A      	    LD A,(DE)
 647: 4875+4	0464  A7      	    AND A
 648: 4879+5+6	0465  C8      	    RET Z; RETURN Z=1 if reached END wizhout mismatch
 649: 4884+7	0466  BE      	    CP (HL)
 650: 4891+5+6	0467  C0      	    RET NZ; If not Match (z=0) exit
 651:     -	0468          	CMP_STRING_START_MATCHED:
 652: 4896+7	0468  7E      	    LD A,(HL)
 653: 4903+4	0469  A7      	    AND A; String to compare reached end
 654: 4907+5+6	046A  C8      	    RET Z
 655:     -	046B          	CMP_STRING_START_CONTINUE:
 656: 4912+6	046B  23      	    INC HL
 657: 4918+6	046C  13      	    INC DE
 658: 4924+10	046D  C36304  	    JP CMP_STRING_START
 659:				    
 660:				; REG A Contains CHAR-Low
 661:				; If failed, Carry is set
 662:     -	0470          	HEX_TO_BIN:
 663: 4934+7	0470  D630    	    SUB 48 ; 0 is 0
 664: 4941+10	0472  EA8504  	    JP PE, HEX_TO_INVALID_2; to low (SUB overflow)
 665: 4951+7	0475  FE0A    	    CP 10 ; Value is between 0 and 9
 666: 4958+7+5	0477  3805    	    JR C, HEX_TO_BIN_2
 667: 4965+7	0479  D607    	    SUB 7
 668: 4972+10	047B  EA8504  	    JP PE, HEX_TO_INVALID_2; to low (SUB overflow)
 669:     -	047E          	HEX_TO_BIN_2:
 670: 4982+7	047E  FE10    	    CP 16
 671: 4989+7+5	0480  3003    	    JR NC, HEX_TO_INVALID_2; if bigger than 15-> fail
 672: 4996+7	0482  E60F    	    AND 0x0F
 673: 5003+10	0484  C9      	    RET
 674:     -	0485          	HEX_TO_INVALID_2:
 675: 5013+7	0485  3E01    	    LD A,1
 676: 5020+7	0487  C6FF    	    ADD 255
 677: 5027+10	0489  C9      	    RET
 678:				
 679:				; BC Contains Address to string
 680:				; D is 0xFF if error
 681:				; D is 0x00 if okay
 682:     -	048A          	DHEX_TO_BYTE:
 683: 5037+11	048A  C5      	    PUSH BC
 684:				    ; Load First Byte
 685: 5048+7	048B  0A      	    LD A,(BC)
 686: 5055+17	048C  CD7004  	    CALL HEX_TO_BIN
 687:				    ;JP C,DHEX_TO_BYTE_FAILED
 688: 5072+8	048F  CB27    	    SLA A
 689: 5080+8	0491  CB27    	    SLA A
 690: 5088+8	0493  CB27    	    SLA A
 691: 5096+8	0495  CB27    	    SLA A
 692: 5104+4	0497  57      	    LD D,A
 693:				
 694: 5108+6	0498  03      	    INC BC
 695: 5114+7	0499  0A      	    LD A,(BC)
 696: 5121+17	049A  CD7004  	    CALL HEX_TO_BIN
 697:				    ;JP C,DHEX_TO_BYTE_FAILED
 698: 5138+4	049D  B2      	    OR D ; Merge
 699:				    
 700: 5142+10	049E  C1      	    POP BC
 701: 5152+7	049F  1600    	    LD D,0x00
 702: 5159+10	04A1  C9      	    RET
 703:     -	04A2          	DHEX_TO_BYTE_FAILED:
 704: 5169+7	04A2  16FF    	    LD D,0xFF
 705:				    ;LD A,0x00
 706: 5176+10	04A4  C1      	    POP BC
**** CTC_Test.asm ****
 707: 5186+10	04A5  C9      	    RET



Statistics:

     4	passes
     0	jr promotions
    84	symbols
  1588	bytes



Symbol Table:

A_RTS_OFF        13B      315
A_RTS_ON         144      324
CMD_CRS_SPEED  =E000      57344
CMD_PS_CLEAR     7E8      2024
CMD_PS_EXEC      7D1      2001
CMD_PS_HD        7C7      1991
CMD_PS_HELP      7E6      2022
CMD_PS_IOGET     7F0      2032
CMD_PS_IOSET     7F8      2040
CMD_PS_MGET      7D8      2008
CMD_PS_MSET      7DF      2015
CMD_PS_PT        7CC      1996
CMD_PS_VER       7EC      2028
CMP_STRING_START  463      1123
CMP_STRING_START_CONTINUE  46B      1131
CMP_STRING_START_MATCHED  468      1128
CONSOLE_INIT     867      2151
CONSOLE_PARSE_LINE  2CF      719
CONSOLE_PARSE_LINE_CLEAR  43B      1083
CONSOLE_PARSE_LINE_ELSE  44E      1102
CONSOLE_PARSE_LINE_EXEC  303      771
CONSOLE_PARSE_LINE_HD  2E3      739
CONSOLE_PARSE_LINE_HELP  3F9      1017
CONSOLE_PARSE_LINE_IOGET  393      915
CONSOLE_PARSE_LINE_IOSET  3CF      975
CONSOLE_PARSE_LINE_MGET  321      801
CONSOLE_PARSE_LINE_MSET  363      867
CONSOLE_PARSE_LINE_VERSION  41A      1050
CONSOLE_PRINTSTR  83A      2106
CONSOLE_PRINTSTR_EXIT  84A      2122
CONSOLE_PRINTSTR_LOOP  83C      2108
CONSOLE_PROMPT   178      376
CONSOLE_PROMPT_LOOP  1AC      428
CONSOLE_PROMPT_LOOP_1  1C1      449
CONSOLE_PROMPT_LOOP_1B  1ED      493
CONSOLE_PROMPT_LOOP_2  21C      540
CONSOLE_PROMPT_LOOP_3  23F      575
CONSOLE_READ_CHAR  84D      2125
CONSOLE_TX_WAIT  85B      2139
DELAY            166      358
DELAY_LOOP       170      368
DHEX_TO_BYTE     48A      1162
DHEX_TO_BYTE_FAILED  4A2      1186
HEX_TO_BIN       470      1136
HEX_TO_BIN_2     47E      1150
HEX_TO_INVALID_2  485      1157
INT_VEC          800      2048
IO_CTC0_C0     =00        0
IO_CTC0_C1     =01        1
IO_CTC0_C2     =02        2
IO_CTC0_C3     =03        3
IO_REG0        =20        32
IO_SIO0A_C     =12        18
IO_SIO0A_D     =10        16
IO_SIO0B_C     =13        19
IO_SIO0B_D     =11        17
MEM_CURSOR_STATE=4000      16384
MEM_LAST_CHAR  =4001      16385
MEM_PROMPT_SIZE=4003      16387
MEM_PROMPT_START=4005      16389
MSG_CLEAR        7BF      1983
MSG_CMD_HELP     67A      1658
MSG_CMD_UNKNOWN  772      1906
MSG_CMD_VER      6E8      1768
MSG_HEXDUMP_HEADER  787      1927
MSG_SYS_VER      600      1536
PRINT_A_HEX      257      599
PRINT_HEXDUMP    26B      619
PRINT_HEXDUMP_LOOP1  2A3      675
PRINT_HEXDUMP_SOL  276      630
PROG_MEM_START =4000      16384
PROG_ROM_START = 100      256
RX_CHA_AVAILABLE  14D      333
SPEC_RX_CONDITON  163      355
START_ROM      =00        0
STRCONV_BYTES_TO_HEX  820      2080
STRCONV_BYTES_TO_HEX_1  82F      2095
STRCONV_BYTES_TO_HEX_2  839      2105
STRINGS          8A7      2215
TX_EMP           858      2136
VAR_CONSOLE_BAUD=10        16
init            10        16
init_console     104      260
init_led        03        3
