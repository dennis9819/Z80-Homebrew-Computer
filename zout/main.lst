   1:				.include "addresses.s"
**** functions/addresses.s ****
   1:     -	0000          	IO_CTC0_C0  equ 0x00
   2:     -	0001          	IO_CTC0_C1  equ 0x01
   3:     -	0002          	IO_CTC0_C2  equ 0x02
   4:     -	0003          	IO_CTC0_C3  equ 0x03
   5:				
   6:     -	0012          	IO_SIO0A_C  equ 00010010b
   7:     -	0010          	IO_SIO0A_D  equ 00010000b
   8:     -	0013          	IO_SIO0B_C  equ 00010011b
   9:     -	0011          	IO_SIO0B_D  equ 00010001b
  10:				
  11:     -	0020          	IO_RTC_SEC0  equ 00100000b
  12:     -	0021          	IO_RTC_SEC1  equ 00100001b
  13:     -	0022          	IO_RTC_MIN0  equ 00100010b
  14:     -	0023          	IO_RTC_MIN1  equ 00100011b
  15:     -	0024          	IO_RTC_HOUR  equ 00100100b
  16:     -	0025          	IO_RTC_AMPM  equ 00100101b
  17:     -	0026          	IO_RTC_DAY0  equ 00100110b
  18:     -	0027          	IO_RTC_DAY1  equ 00100111b
  19:     -	0028          	IO_RTC_MON0  equ 00101000b
  20:     -	0029          	IO_RTC_MON1  equ 00101001b
  21:     -	002A          	IO_RTC_YERR0 equ 00101010b
  22:     -	002B          	IO_RTC_YEAR1 equ 00101011b
  23:     -	002C          	IO_RTC_WEEK  equ 00101100b
  24:     -	002D          	IO_RTC_CTR_D equ 00101101b
  25:     -	002E          	IO_RTC_CTR_E equ 00101110b
  26:     -	002F          	IO_RTC_CTR_F equ 00101111b
  27:				
  28:     -	0040          	IO_AY0_ADDR equ 01000000b
  29:     -	0041          	IO_AY0_DATA equ 01000001b
  30:     -	0042          	IO_AY1_ADDR equ 01000010b
  31:     -	0043          	IO_AY1_DATA equ 01000011b
  32:				
  33:     -	0000          	START_ROM   equ 0x0000
  34:     -	0020          	IO_REG0     equ 0x20
  35:				
  36:     -	0100          	PROG_ROM_START equ 0x0100
**** main.asm ****
   2:     -	4000          	PROG_MEM_START equ 04000h
   3:				
   4:     -	4000          	MEM_CURSOR_STATE equ 0x4000  ; 1 byte var
   5:     -	4001          	MEM_LAST_CHAR equ 0x4001  ; 1 byte var
   6:     -	4003          	MEM_PROMPT_SIZE equ 0x4003
   7:     -	4005          	MEM_PROMPT_START equ 0x4005
   8:				
   9:				
  10:     -	E000          	CMD_CRS_SPEED equ 0xE000
  11:				
  12:				
  13:				; Include Kernel Libs at 0x0800
  14:     -	0820          	    org 0x0820
  15:				.include "conversions.s"
**** functions/conversions.s ****
   1:				
   2:				; Kernel Conversion Functions
   3:				
   4:				
   5:				
   6:				;*****************
   7:				; Convert Byte to Hex Char (ASCII)
   8:				;*****************
   9:				;Description: the StrLength function inline
  10:				;
  11:				;Inputs: A contains input byte
  12:				;
  13:				;Outputs: BC contains 2 Bytes of ASCII (HEX)
  14:				;
  15:				;Destroys: A, BC,
  16:     -	0820          	STRCONV_BYTES_TO_HEX:
  17:    0+11	0820  F5      	    PUSH AF;Backup A Register
  18:   11+4	0821  1F      	    RRA
  19:   15+4	0822  1F      	    RRA
  20:   19+4	0823  1F      	    RRA
  21:   23+4	0824  1F      	    RRA
  22:   27+17	0825  CD2F08  	    CALL STRCONV_BYTES_TO_HEX_1
  23:				    ;LD A,D
  24:   44+4	0828  47      	    LD B,A  
  25:   48+10	0829  F1      	    POP AF ; Reload first Byte
  26:   58+17	082A  CD2F08  	    CALL STRCONV_BYTES_TO_HEX_1
  27:				    ;LD A,D
  28:   75+4	082D  4F      	    LD C,A
  29:   79+10	082E  C9      	    RET
  30:				
  31:     -	082F          	STRCONV_BYTES_TO_HEX_1:
  32:   89+7	082F  E60F    	    AND 0x0F
  33:   96+7	0831  C630    	    ADD 48
  34:  103+7	0833  FE3A    	    CP 58 ; Check if less than 58 (less than ASCII 9)
  35:  110+7+5	0835  3802    	    JR C, STRCONV_BYTES_TO_HEX_2
  36:  117+7	0837  C607    	    ADD 7 ; A-F
  37:     -	0839          	STRCONV_BYTES_TO_HEX_2:
  38:				    ;LD D,A
  39:  124+10	0839  C9      	    RET
  40:				
  41:				
  42:				
**** main.asm ****
  16:				.include "console.s"
**** functions/console.s ****
   1:				; Kernel Konsole Functions
   2:				
   3:     -	0010          	VAR_CONSOLE_BAUD equ 16d ; BAUD 14400 @ 3.686441MHz & CPUCLK/2
   4:				
   5:				;*****************
   6:				; CONSOLE_PRINTSTR
   7:				;*****************
   8:				;Description: Sends null-terminated String via Serial Port
   9:				;
  10:				;Inputs: BC contains start address of stringg
  11:				;
  12:				;Outputs: Output to IO_SIO0B_D
  13:				;
  14:				;Destroys: none
  15:     -	083A          	CONSOLE_PRINTSTR:
  16:				    ; BC contains String offset
  17:				    ; Prints null terminated string
  18:  134+11	083A  F5      	    PUSH AF
  19:  145+11	083B  C5      	    PUSH BC
  20:     -	083C          	CONSOLE_PRINTSTR_LOOP:
  21:  156+7	083C  0A      	    LD A,(BC)
  22:				
  23:				    ; Return if nullbyte
  24:  163+7	083D  F600    	    OR 0
  25:  170+7+5	083F  2809    	    JR Z, CONSOLE_PRINTSTR_EXIT
  26:				    ; Print Char
  27:  177+11	0841  D311    	    out (IO_SIO0B_D),A
  28:  188+17	0843  CD5808  	    call TX_EMP
  29:				
  30:				    ; INC BC and JP start of loop
  31:  205+6	0846  03      	    INC BC
  32:  211+10	0847  C33C08  	    jp CONSOLE_PRINTSTR_LOOP
  33:     -	084A          	CONSOLE_PRINTSTR_EXIT:
  34:  221+10	084A  C1      	    POP BC
  35:  231+10	084B  F1      	    POP AF
  36:  241+10	084C  C9      	    RET
  37:				
  38:				;*****************
  39:				; CONSOLE_READ_CHAR
  40:				;*****************
  41:				;Description: Gets a single byte from console port
  42:				;
  43:				;Inputs: BC contains start address of stringg
  44:				;
  45:				;Outputs: Output to IO_SIO0B_D
  46:				;
  47:				;Destroys: A
  48:				
  49:     -	084D          	CONSOLE_READ_CHAR:
  50:  251+4	084D  AF      	    XOR	A
  51:  255+11	084E  D313    	    OUT (IO_SIO0B_C), A
  52:  266+11	0850  DB13    	    IN A, (IO_SIO0B_C)
  53:  277+7	0852  E601    	    AND	1
  54:  284+5+6	0854  C8      	    RET	Z	
  55:  289+11	0855  DB11    	    IN A, (IO_SIO0B_D)
  56:				    ;LD D,A
  57:  300+10	0857  C9      	    RET
  58:				
  59:				;*****************
  60:				; CONSOLE_TX_WAIT/TX_EMP
  61:				;*****************
  62:				;Description: Waits until byte is sent
  63:				;
  64:				;Inputs: none
  65:				;
  66:				;Outputs: none
  67:				;
  68:				;Destroys: A
  69:     -	0858          	TX_EMP: ; DONT USE!!! DEPRECATED
  70:  310+10	0858  C35B08  	    jp CONSOLE_TX_WAIT
  71:     -	085B          	CONSOLE_TX_WAIT:
  72:				    ; check for TX buffer empty
  73:  320+4	085B  97      	    sub a ;clear a, write into WR0: select RR0
  74:  324+4	085C  3C      	    inc a ;select RR1
  75:  328+11	085D  D313    	    out (IO_SIO0B_C),A
  76:  339+11	085F  DB13    	    in A,(IO_SIO0B_C) ;read RRx
  77:  350+8	0861  CB47    	    bit 0,A
  78:  358+10	0863  CA5B08  	    jp z,CONSOLE_TX_WAIT
  79:  368+10	0866  C9      	    ret
  80:				
  81:				;*****************
  82:				; CONSOLE_INIT
  83:				;*****************
  84:				;Description: Initializes CTC & SIO on Port B
  85:				;
  86:				;Inputs: none 
  87:				;
  88:				;Outputs: none
  89:				;
  90:				;Destroys: A
  91:     -	0867          	CONSOLE_INIT:
  92:				    ; Setup CTC
  93:				    ; Init Ch1 (SIO0B)
  94:				    ; For 4MHz CPU CLK 00000111b
  95:				    ; For EXT CLK
  96:  378+7	0867  3E0F    	    LD A,00001111b
  97:  385+11	0869  D301    	    OUT (IO_CTC0_C1),A
  98:				
  99:  396+7	086B  3E10    	    LD A,VAR_CONSOLE_BAUD
 100:  403+11	086D  D301    	    OUT (IO_CTC0_C1),A
 101:				
 102:				    ; Setup SIO
 103:				     ;set up TX and RX:W
 104:  414+7	086F  3E30    	    ld a,00110000b ;write into WR0: error reset, select WR0
 105:  421+11	0871  D313    	    out (IO_SIO0B_C),A
 106:  432+7	0873  3E18    	    ld a,018h ;write into WR0: channel reset
 107:  439+11	0875  D313    	    out (IO_SIO0B_C),A
 108:				
 109:  450+7	0877  3E04    	    ld a,004h ;write into WR0: select WR4
 110:  457+11	0879  D313    	    out (IO_SIO0B_C),A
 111:				    ;ld a,44h ;44h write into WR4: clkx16,1 stop bit, no parity
 112:  468+7	087B  3E04    	    ld a,04h ;44h write into WR4: clkx1,1 stop bit, no parity
 113:  475+11	087D  D313    	    out (IO_SIO0B_C),A
 114:				
 115:  486+7	087F  3E05    	    ld a,005h ;write into WR0: select WR5
 116:  493+11	0881  D313    	    out (IO_SIO0B_C),A
 117:				    ;ld a,0E8h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
 118:  504+7	0883  3E68    	    ld a,068h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
 119:  511+11	0885  D313    	    out (IO_SIO0B_C),A
 120:				
 121:  522+7	0887  3E01    	    ld a,01h ;write into WR0: select WR1
 122:  529+11	0889  D313    	    out (IO_SIO0B_C),A
 123:  540+7	088B  3E04    	    ld a,00000100b ;no interrupt in CH B, special RX condition affects vect
 124:  547+11	088D  D313    	    out (IO_SIO0B_C),A
 125:				
 126:  558+7	088F  3E02    	    ld a,02h ;write into WR0: select WR2
 127:  565+11	0891  D313    	    out (IO_SIO0B_C),A
 128:  576+7	0893  3E00    	    ld a,0h ;write into WR2: cmd line int vect (see int vec table)
 129:				    ;bits D3,D2,D1 are changed according to RX condition
 130:  583+11	0895  D313    	    out (IO_SIO0B_C),A
 131:				
 132:				    ;ld a,01h ;write into WR0: select WR1
 133:				    ;out (IO_SIO0B_C),A
 134:				    ;ld a,00011000b ;interrupt on all RX characters, parity is not a spec RX condition
 135:				    ;buffer overrun is a spec RX condition
 136:				    ;out (IO_SIO0B_C),A
 137:				
 138:				    ;enable SIO channel A RX
 139:  594+7	0897  3E03    	    ld a,003h ;write into WR0: select WR3
 140:  601+11	0899  D313    	    out (IO_SIO0B_C),A
 141:  612+7	089B  3EC1    	    ld a,0C1h ;RX 8bit, auto enable off, RX on
 142:  619+11	089D  D313    	    out (IO_SIO0B_C),A
 143:				    ;Channel A RX active
 144:				
 145:  630+7	089F  3E25    	    LD A,'%'
 146:  637+11	08A1  D311    	    out (IO_SIO0B_D),A
 147:  648+17	08A3  CD5B08  	    call CONSOLE_TX_WAIT
 148:				
 149:  665+10	08A6  C9      	    RET
 150:				
 151:				
 152:				
 153:				;;
**** main.asm ****
  17:				
  18:				; include subroutines
  19:				.include "sub_soundtest.s"
**** functions/sub_soundtest.s ****
   1:     -	08A7          	SUB_SOUNDCHECK:
   2:     -	0A00          	    org 0x0A00
   3:				    ; turn on channel A
   4:  675+7	0A00  1608    	    LD	  D,0x08	; Select register #8
   5:  682+7	0A02  3E0F    	    LD	  A,0x0F	; Volume channel A full
   6:  689+17	0A04  CD670A  	    CALL AY0_WRITE_REG
   7:				
   8:  706+7	0A07  1600    	    LD	  D,0x00	; Select register #0
   9:  713+7	0A09  3E5D    	    LD	  A,0x5D	; Write #93 into register #0
  10:  720+17	0A0B  CD670A  	    CALL AY0_WRITE_REG	
  11:				
  12:  737+7	0A0E  1601    	    LD	  D,0x01	; Select register #1
  13:  744+7	0A10  3E0D    	    LD	  A,0x0D	; Write #13 into register #1
  14:  751+17	0A12  CD670A  	    CALL AY0_WRITE_REG
  15:				
  16:  768+7	0A15  1607    	    LD	  D,0x07	; Select register #7
  17:  775+7	0A17  3E3E    	    LD	  A,0x3E	; Enable output Channel A (0011 1110)
  18:  782+17	0A19  CD670A  	    CALL AY0_WRITE_REG
  19:				
  20:				
  21:				
  22:  799+10	0A1C  016F0A  	    LD BC, [STR_SOUNDCHECK_DONE]
  23:  809+17	0A1F  CD3A08  	    CALL CONSOLE_PRINTSTR
  24:				
  25:  826+10	0A22  C37801  	    JP CONSOLE_PROMPT
  26:				
  27:     -	0A25          	SUB_PLAY:
  28:     -	0A30          	    org 0x0A30
  29:				
  30:  836+10	0A30  01970A  	    LD BC,[tune_test1]
  31:				
  32:     -	0A33          	SUB_PLAY_LOOP:
  33:				    ; Load next byte of melody
  34:  846+7	0A33  0A      	    LD A,(BC)
  35:  853+4	0A34  57      	    LD D,A; Backup A
  36:				    
  37:  857+4	0A35  3C      	    INC A; Test if FF
  38:  861+10	0A36  CA480A  	    JP Z, SUB_PLAY_EXIT ; Exit on 0xFF
  39:				
  40:  871+7	0A39  FE11    	    CP 0x11
  41:  878+10	0A3B  CA510A  	    JP Z, PLAY_DELAY; Delay function
  42:				
  43:  888+4	0A3E  7A      	    LD A,D
  44:  892+11	0A3F  D340    	    OUT (IO_AY0_ADDR),A
  45:  903+6	0A41  03      	    INC BC
  46:  909+7	0A42  0A      	    LD A,(BC)
  47:  916+11	0A43  D341    	    OUT (IO_AY0_DATA),A
  48:  927+6	0A45  03      	    INC BC
  49:				
  50:  933+12	0A46  18EB    	    JR SUB_PLAY_LOOP
  51:				
  52:     -	0A48          	SUB_PLAY_EXIT:
  53:  945+10	0A48  01840A  	    LD BC, [STR_PLAYBACK_DONE]
  54:  955+17	0A4B  CD3A08  	    CALL CONSOLE_PRINTSTR
  55:  972+10	0A4E  C37801  	    JP CONSOLE_PROMPT
  56:				
  57:     -	0A51          	PLAY_DELAY:
  58:  982+6	0A51  03      	    INC BC
  59:  988+7	0A52  0A      	    LD A,(BC)
  60:     -	0A53          	PLAY_DELAY_LOOP:
  61:  995+4	0A53  57      	    LD D,A
  62:  999+7	0A54  3EFF    	    LD A,255
  63:     -	0A56          	PLAY_DELAY_LOOP_1:
  64: 1006+4	0A56  00      	    NOP
  65: 1010+4	0A57  00      	    NOP
  66: 1014+4	0A58  00      	    NOP
  67: 1018+4	0A59  00      	    NOP
  68: 1022+4	0A5A  3D      	    DEC A
  69: 1026+10	0A5B  C2560A  	    JP NZ, PLAY_DELAY_LOOP_1
  70: 1036+4	0A5E  7A      	    LD A,D
  71: 1040+4	0A5F  3D      	    DEC A
  72: 1044+10	0A60  C2530A  	    JP NZ, PLAY_DELAY_LOOP
  73: 1054+6	0A63  03      	    INC BC
  74: 1060+10	0A64  C3330A  	    JP SUB_PLAY_LOOP
  75:				
  76:				; A contains Data
  77:				; C Contains Addr
  78:     -	0A67          	AY0_WRITE_REG:
  79: 1070+4	0A67  47      	    LD B,A
  80: 1074+4	0A68  7A      	    LD A,D
  81: 1078+11	0A69  D340    	    OUT (IO_AY0_ADDR),A
  82: 1089+4	0A6B  78      	    LD A,B
  83: 1093+11	0A6C  D341    	    OUT (IO_AY0_DATA),A
  84: 1104+10	0A6E  C9      	    RET
  85:				    
  86:				
  87:     -	0A6F          	STR_SOUNDCHECK_DONE:
  88:     -	0A6F  0D0A536F	    db 13,10,"Soundcheck done!",13,10,0
	              756E6463
	              6865636B
	              20646F6E
	              65210D0A
	              00
  89:     -	0A84          	STR_PLAYBACK_DONE:
  90:     -	0A84  0D0A506C	    db 13,10,"Playback done!",13,10,0
	              61796261
	              636B2064
	              6F6E6521
	              0D0A00
  91:				
  92:				.include "tune_test1.s"
**** functions/tune_test1.s ****
   1:     -	0A97          	tune_test1:
   2:				    ;commands are a set of two bytes each
   3:				    ;byte 0 register
   4:				    ;byte 1 data
   5:				    ;if byte 0 is 10h, byte 1 is delay
   6:				    ;if byte FF then exit
   7:     -	0A97  080F    	    db 0x08,0x0F ; R08 - Ch A Amplitude
   8:     -	0A99  00FF    	    db 0x00,0xFF ; R00 - Ch A Tone Period
   9:     -	0A9B  0104    	    db 0x01,0x04 ; R01 - Ch A Tone Period
  10:     -	0A9D  073E    	    db 0x07,0x3E ; R07 - Enable 
  11:     -	0A9F  10FF    	    db 0x10,0xFF ; Delay
  12:     -	0AA1  0107    	    db 0x01,0x07 ; R01 - Ch A Tone Period
  13:     -	0AA3  10FF    	    db 0x10,0xFF ; Delay
  14:     -	0AA5  0103    	    db 0x01,0x03 ; R01 - Ch A Tone Period
  15:     -	0AA7  10FF    	    db 0x10,0xFF ; Delay
  16:     -	0AA9  0800    	    db 0x08,0x00 ; R08 - Ch A Amplitude
**** functions/sub_soundtest.s ****
  93:     -	0AAB  FF      	    db 0xFF      ; END
**** main.asm ****
  20:				
  21:				;Strings
  22:     -	0AAC          	STRINGS:
  23:     -	0600          	    org 0x0600
  24:     -	0600          	MSG_SYS_VER:
  25:     -	0600  1B5B324A	    db 27, '[2J', 27, '[H'
	              1B5B48
  26:     -	0607  5A384320	    db 'Z8C Mk IV - A Z80 Homebrew Computer',13,10
	              4D6B2049
	              56202D20
	              41205A38
	              3020486F
	              6D656272
	              65772043
	              6F6D7075
	              7465720D
	              0A
  27:     -	062C  4D6F6E69	    db 'Monitor ROM Ver. 1.0 by Dennis Gunia (2022)',13,10
	              746F7220
	              524F4D20
	              5665722E
	              20312E30
	              20627920
	              44656E6E
	              69732047
	              756E6961
	              20283230
	              3232290D
	              0A
  28:     -	0659  34386B20	    db '48k RAM - 4MHz Z80 CPU - Stack $',0
	              52414D20
	              2D20344D
	              487A205A
	              38302043
	              5055202D
	              20537461
	              636B2024
	              00
  29:				
  30:     -	067A          	MSG_CMD_HELP:
  31:     -	067A  0D0A    	    db 13,10
  32:     -	067C  68642024	    db "hd $<addr>  mget $<addr>  mset $<addr> <val>",13,10
	              3C616464
	              723E2020
	              6D676574
	              20243C61
	              6464723E
	              20206D73
	              65742024
	              3C616464
	              723E203C
	              76616C3E
	              0D0A
  33:     -	06AA  696F6765	    db "ioget $<addr>  ioset $<addr> <val>",13,10
	              7420243C
	              61646472
	              3E202069
	              6F736574
	              20243C61
	              6464723E
	              203C7661
	              6C3E0D0A
  34:     -	06CE  3F202065	    db "?  exec $<addr>  clr  ver"
	              78656320
	              243C6164
	              64723E20
	              20636C72
	              20207665
	              72
  35:     -	06E7  00      	    db 0
  36:				
  37:     -	06E8          	MSG_CMD_VER:
  38:     -	06E8  0D0A    	    db 13,10
  39:     -	06EA  5A384320	    db "Z8C Monitor Programm",13,10
	              4D6F6E69
	              746F7220
	              50726F67
	              72616D6D
	              0D0A
  40:     -	0700  524F4D20	    db "ROM Version 1.0 - Written by Dennis Gunia, 2022",13,10
	              56657273
	              696F6E20
	              312E3020
	              2D205772
	              69747465
	              6E206279
	              2044656E
	              6E697320
	              47756E69
	              612C2032
	              3032320D
	              0A
  41:     -	0731  332E3638	    db "3.686411MHz CPU, 48K RAM System, John 3,16",13,10
	              36343131
	              4D487A20
	              4350552C
	              2034384B
	              2052414D
	              20537973
	              74656D2C
	              204A6F68
	              6E20332C
	              31360D0A
  42:     -	075D  7777772E	    db "www.dennisgunia.de",13,10
	              64656E6E
	              69736775
	              6E69612E
	              64650D0A
  43:     -	0771  00      	    db 0
  44:				
  45:				
  46:     -	0772          	MSG_CMD_UNKNOWN:
  47:     -	0772  0D0A496E	    db 13,10,'Invalid operation',0,13
	              76616C69
	              64206F70
	              65726174
	              696F6E00
	              0D
  48:				
  49:     -	0787          	MSG_HEXDUMP_HEADER:
  50:     -	0787  0D0A4241	    db 13,10,'BASE   0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F',0
	              53452020
	              20302020
	              31202032
	              20203320
	              20342020
	              35202036
	              20203720
	              20382020
	              39202041
	              20204220
	              20432020
	              44202045
	              20204600
  51:				
  52:     -	07BF          	MSG_CLEAR:
  53:     -	07BF  1B5B324A	    db 27, '[2J', 27, '[H',0
	              1B5B4800
  54:				
  55:     -	07C7  68642024	CMD_PS_HD   db 'hd $',0
	              00
  56:     -	07CC  70742024	CMD_PS_PT   db 'pt $',0
	              00
  57:				
  58:     -	07D1  65786563	CMD_PS_EXEC db 'exec $',0
	              202400
  59:     -	07D8  63616C6C	CMD_PS_CALL db 'call $',0
	              202400
  60:     -	07DF  6D676574	CMD_PS_MGET db 'mget $',0
	              202400
  61:     -	07E6  6D736574	CMD_PS_MSET db 'mset $',0
	              202400
  62:     -	07ED  3F00    	CMD_PS_HELP db '?',0
  63:     -	07EF  636C7200	CMD_PS_CLEAR db 'clr',0
  64:     -	07F3  76657200	CMD_PS_VER db 'ver',0
  65:				
  66:     -	07F7  696F6765	CMD_PS_IOGET db 'ioget $',0
	              74202400
  67:     -	07FF  696F7365	CMD_PS_IOSET db 'ioset $',0
	              74202400
  68:				
  69:     -	0807          	INT_VEC:
  70:     -	000C          	    org 0Ch
  71:     -	000C  4D01    	    DEFW RX_CHA_AVAILABLE
  72:     -	000E          	    org 0Eh
  73:     -	000E  6301    	    DEFW SPEC_RX_CONDITON
  74:				    
  75:     -	0010          	init:
  76:     -	0000          	    org 0x0000
  77: 1114+10	0000  C30001  	    jp PROG_ROM_START
  78:				
  79:     -	0003          	init_led:
  80:     -	0100          	    org PROG_ROM_START
  81: 1124+7	0100  3E00    	    LD A,0x00
  82: 1131+11	0102  D320    	    OUT (IO_REG0),A
  83:				
  84:     -	0104          	init_console:
  85: 1142+17	0104  CD6708  	    CALL CONSOLE_INIT
  86:				
  87:				;INT_INI:
  88:				;    ld A,0
  89:				;    ld I,A  ;load I reg with zero
  90:				;    im 2    ;set int mode 2
  91:				;    ei      ;enable interupt
  92:				
  93: 1159+7	0107  3E00    	    LD A,0x00
  94: 1166+11	0109  D311    	    OUT (IO_SIO0B_D),A
  95: 1177+17	010B  CD5808  	    CALL TX_EMP
  96:				
  97: 1194+17	010E  CD4401  	    call A_RTS_ON
  98:				
  99:				    ; PRINT BANNER
 100: 1211+10	0111  010006  	    LD BC, [MSG_SYS_VER]
 101: 1221+17	0114  CD3A08  	    CALL CONSOLE_PRINTSTR
 102:				
 103: 1238+10	0117  31FF7F  	    LD SP,07FFFh
 104:				    ; Print SP Location
 105: 1248+20	011A  ED730040	    LD (0x4000),SP
 106: 1268+13	011E  3A0140  	    LD A,(0x4001)
 107: 1281+17	0121  CD5702  	    CALL PRINT_A_HEX
 108: 1298+13	0124  3A0040  	    LD A,(0x4000)
 109: 1311+17	0127  CD5702  	    CALL PRINT_A_HEX
 110:				
 111: 1328+7	012A  3E0D    	    LD A,13
 112: 1335+11	012C  D311    	    out (IO_SIO0B_D),A
 113: 1346+17	012E  CD5808  	    call TX_EMP
 114: 1363+7	0131  3E0A    	    LD A,10
 115: 1370+11	0133  D311    	    out (IO_SIO0B_D),A
 116: 1381+17	0135  CD5808  	    call TX_EMP
 117:				
 118: 1398+10	0138  C37801  	    JP CONSOLE_PROMPT
 119:				
 120:				
 121:				; Serial Util Functions
 122:     -	013B          	A_RTS_OFF:
 123: 1408+7	013B  3E05    	    ld a,005h ;write into WR0: select WR5
 124: 1415+11	013D  D313    	    out (IO_SIO0B_C),A
 125: 1426+7	013F  3EE8    	    ld a,0E8h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
 126: 1433+11	0141  D313    	    out (IO_SIO0B_C),A
 127: 1444+10	0143  C9      	    ret
 128:     -	0144          	A_RTS_ON:
 129: 1454+7	0144  3E05    	    ld a,005h ;write into WR0: select WR5
 130: 1461+11	0146  D313    	    out (IO_SIO0B_C),A
 131: 1472+7	0148  3EEA    	    ld a,0EAh ;DTR active, TX 8bit, BREAK off, TX on, RTS active
 132: 1479+11	014A  D313    	    out (IO_SIO0B_C),A
 133: 1490+10	014C  C9      	    ret
 134:				
 135:     -	014D          	RX_CHA_AVAILABLE:
 136: 1500+11	014D  F5      	    push AF ;backup AF
 137:				
 138: 1511+7	014E  3EFF    	    LD A,0xFF
 139: 1518+11	0150  D320    	    OUT (IO_REG0),A
 140:				
 141: 1529+17	0152  CD3B01  	    call A_RTS_OFF
 142: 1546+11	0155  DB11    	    in A,(IO_SIO0B_D) ;read RX character into A
 143:				    ; A holds received character
 144:				    ;do something with the received character
 145:				    ;echo character to host
 146: 1557+11	0157  D311    	    out (IO_SIO0B_D),A
 147: 1568+17	0159  CD5808  	    call TX_EMP
 148: 1585+4	015C  FB      	    ei ;see comments below
 149: 1589+17	015D  CD4401  	    call A_RTS_ON ;see comments below
 150:				
 151:				    ;LD A,0x00
 152:				    ;OUT (IO_REG0),A
 153:				
 154: 1606+10	0160  F1      	    pop AF ;restore AF
 155: 1616+14	0161  ED4D    	    Reti
 156:				
 157:     -	0163          	SPEC_RX_CONDITON:
 158:				    
 159: 1630+10	0163  C30000  	    jp 0000h
 160:				
 161:				
 162:     -	0166          	DELAY:
 163: 1640+15	0166  DDE5    	    PUSH IX
 164: 1655+11	0168  C5      	    PUSH BC
 165: 1666+14	0169  DD210040	    LD IX,0x4000
 166: 1680+10	016D  010100  	    LD BC,1
 167:     -	0170          	DELAY_LOOP:
 168: 1690+15	0170  DD09    	    ADD IX,BC
 169: 1705+7+5	0172  30FC    	    JR NC, DELAY_LOOP
 170: 1712+10	0174  C1      	    POP BC
 171: 1722+14	0175  DDE1    	    POP IX
 172: 1736+10	0177  C9      	    RET
 173:				
 174:				; Console Functions
 175:				
 176:				
 177:     -	0178          	CONSOLE_PROMPT:
 178:				    ;Console Prompt
 179: 1746+7	0178  3E0A    	    LD A, 10
 180: 1753+11	017A  D311    	    out (IO_SIO0B_D),A
 181: 1764+17	017C  CD5808  	    call TX_EMP
 182: 1781+7	017F  3E3F    	    LD A,'?'
 183: 1788+11	0181  D311    	    out (IO_SIO0B_D),A
 184: 1799+17	0183  CD5808  	    call TX_EMP
 185: 1816+7	0186  3E3E    	    LD A,'>'
 186: 1823+11	0188  D311    	    out (IO_SIO0B_D),A
 187: 1834+17	018A  CD5808  	    call TX_EMP
 188: 1851+7	018D  3E20    	    LD A,' '
 189: 1858+11	018F  D311    	    out (IO_SIO0B_D),A
 190: 1869+17	0191  CD5808  	    call TX_EMP
 191: 1886+7	0194  3E5F    	    LD A,"_"
 192: 1893+11	0196  D311    	    out (IO_SIO0B_D),A 
 193: 1904+17	0198  CD5808  	    call TX_EMP
 194:				
 195:				    ; Blinking Cursor
 196: 1921+14	019B  DD2100E0	    LD IX,CMD_CRS_SPEED
 197: 1935+10	019F  010100  	    LD BC,1
 198: 1945+7	01A2  3E00    	    LD A,0
 199: 1952+13	01A4  320040  	    LD (MEM_CURSOR_STATE),A
 200:				    ; SET PROMPT LENGTH TO 0
 201: 1965+7	01A7  3E00    	    LD A,0
 202: 1972+13	01A9  320340  	    LD (MEM_PROMPT_SIZE),A
 203:				
 204:     -	01AC          	CONSOLE_PROMPT_LOOP:
 205:				    ; READ INPUT
 206:				    ; Delete Cursor if input Avail
 207:				    ;JP CONSOLE_PROMPT_LOOP_2
 208: 1985+17	01AC  CD4D08  	    CALL CONSOLE_READ_CHAR
 209: 2002+4	01AF  A7      	    AND A
 210: 2006+13	01B0  320140  	    LD (MEM_LAST_CHAR),A
 211:				
 212: 2019+10	01B3  CA1C02  	    JP Z, CONSOLE_PROMPT_LOOP_2
 213:				    ; if newline
 214: 2029+7	01B6  160D    	    LD D, 13
 215: 2036+4	01B8  BA      	    CP D
 216: 2040+7+5	01B9  2006    	    JR NZ, CONSOLE_PROMPT_LOOP_1
 217:				
 218: 2047+17	01BB  CDCF02  	    CALL CONSOLE_PARSE_LINE
 219:				
 220: 2064+10	01BE  C37801  	    JP CONSOLE_PROMPT
 221:				
 222:     -	01C1          	CONSOLE_PROMPT_LOOP_1: ; Not new line
 223:				   
 224: 2074+13	01C1  3A0140  	    LD A,(MEM_LAST_CHAR)
 225: 2087+7	01C4  167F    	    LD D, 0x7F
 226: 2094+4	01C6  BA      	    CP D
 227: 2098+7+5	01C7  2024    	    JR NZ, CONSOLE_PROMPT_LOOP_1B
 228:				
 229:				    ; if Backspace
 230: 2105+13	01C9  3A0340  	    LD A,(MEM_PROMPT_SIZE); test if 0
 231: 2118+4	01CC  A7      	    AND A
 232: 2122+10	01CD  CA1C02  	    JP Z,CONSOLE_PROMPT_LOOP_2; no action if buffer empty
 233:				
 234:				    ;EXEC this if backspace (08d)
 235: 2132+4	01D0  3D      	    DEC A
 236: 2136+13	01D1  320340  	    LD (MEM_PROMPT_SIZE),A  ; store size to mem
 237:				
 238: 2149+7	01D4  3E7F    	    LD A, 0x7F
 239: 2156+11	01D6  D311    	    out (IO_SIO0B_D),A
 240: 2167+17	01D8  CD5808  	    call TX_EMP
 241:				
 242: 2184+13	01DB  3A0140  	    LD A,(MEM_LAST_CHAR)
 243: 2197+11	01DE  D311    	    out (IO_SIO0B_D),A
 244: 2208+17	01E0  CD5808  	    call TX_EMP
 245:				
 246: 2225+7	01E3  3E20    	    LD A," "
 247: 2232+11	01E5  D311    	    out (IO_SIO0B_D),A 
 248: 2243+17	01E7  CD5808  	    call TX_EMP
 249:				
 250: 2260+10	01EA  C31C02  	    JP CONSOLE_PROMPT_LOOP_2
 251:				
 252:     -	01ED          	CONSOLE_PROMPT_LOOP_1B: ;IF not Backspace 
 253:				
 254:				
 255:				    ; CHECK if Controll Sequence
 256:				    
 257:				
 258:				    ; Continue
 259:				
 260: 2270+13	01ED  3A0340  	    LD A,(MEM_PROMPT_SIZE)
 261: 2283+4	01F0  3C      	    INC A
 262: 2287+13	01F1  320340  	    LD (MEM_PROMPT_SIZE),A  ; store size to mem
 263:				
 264: 2300+7	01F4  3E7F    	    LD A, 0x7F
 265: 2307+11	01F6  D311    	    out (IO_SIO0B_D),A
 266: 2318+17	01F8  CD5808  	    call TX_EMP
 267:				
 268: 2335+13	01FB  3A0140  	    LD A,(MEM_LAST_CHAR)
 269: 2348+11	01FE  D311    	    out (IO_SIO0B_D),A
 270: 2359+17	0200  CD5808  	    call TX_EMP
 271:				
 272: 2376+7	0203  3E20    	    LD A," "
 273: 2383+11	0205  D311    	    out (IO_SIO0B_D),A 
 274: 2394+17	0207  CD5808  	    call TX_EMP
 275:				
 276:				    ;APPEND CHAR TO BUFFER
 277: 2411+11	020A  C5      	    PUSH BC
 278: 2422+10	020B  210540  	    LD HL,MEM_PROMPT_START
 279: 2432+7	020E  0600    	    LD B,0
 280: 2439+13	0210  3A0340  	    LD A,(MEM_PROMPT_SIZE)
 281: 2452+4	0213  3D      	    DEC A
 282: 2456+4	0214  4F      	    LD C,A
 283: 2460+15	0215  ED4A    	    ADC HL, BC
 284: 2475+13	0217  3A0140  	    LD A, (MEM_LAST_CHAR)
 285: 2488+7	021A  77      	    LD (HL), A
 286: 2495+10	021B  C1      	    POP BC
 287:				    
 288:				
 289:				
 290:     -	021C          	CONSOLE_PROMPT_LOOP_2:
 291:				    ; Print Cursor
 292: 2505+15	021C  DD09    	    ADD IX,BC
 293: 2520+7+5	021E  308C    	    JR NC, CONSOLE_PROMPT_LOOP
 294:				    ; Toggle cycle
 295: 2527+13	0220  3A0040  	    LD A,(MEM_CURSOR_STATE)
 296: 2540+7	0223  EE01    	    XOR 1
 297: 2547+7+5	0225  2818    	    JR Z,CONSOLE_PROMPT_LOOP_3
 298: 2554+13	0227  320040  	    LD (MEM_CURSOR_STATE),A
 299:				
 300: 2567+7	022A  3E7F    	    LD A, 0x7F
 301: 2574+11	022C  D311    	    out (IO_SIO0B_D),A
 302: 2585+17	022E  CD5808  	    call TX_EMP
 303: 2602+7	0231  3E5F    	    LD A,'_'
 304: 2609+11	0233  D311    	    out (IO_SIO0B_D),A
 305: 2620+17	0235  CD5808  	    call TX_EMP
 306: 2637+14	0238  DD2100E0	    LD IX,CMD_CRS_SPEED
 307: 2651+10	023C  C3AC01  	    JP CONSOLE_PROMPT_LOOP
 308:				
 309:     -	023F          	CONSOLE_PROMPT_LOOP_3:
 310: 2661+13	023F  320040  	    LD (MEM_CURSOR_STATE),A
 311: 2674+7	0242  3E7F    	    LD A, 0x7F
 312: 2681+11	0244  D311    	    out (IO_SIO0B_D),A
 313: 2692+17	0246  CD5808  	    call TX_EMP
 314: 2709+7	0249  3E20    	    LD A,' '
 315: 2716+11	024B  D311    	    out (IO_SIO0B_D),A
 316: 2727+17	024D  CD5808  	    call TX_EMP
 317: 2744+14	0250  DD2100E0	    LD IX,CMD_CRS_SPEED
 318: 2758+10	0254  C3AC01  	    JP CONSOLE_PROMPT_LOOP
 319:				
 320:				; A Contains Byte
 321:     -	0257          	PRINT_A_HEX:
 322: 2768+11	0257  C5      	    PUSH BC
 323: 2779+11	0258  D5      	    PUSH DE
 324: 2790+17	0259  CD2008  	    CALL STRCONV_BYTES_TO_HEX   ; New Kernel Call
 325: 2807+4	025C  78      	    LD A,B
 326: 2811+11	025D  D311    	    out (IO_SIO0B_D),A
 327: 2822+17	025F  CD5808  	    call TX_EMP
 328: 2839+4	0262  79      	    LD A,C
 329: 2843+11	0263  D311    	    out (IO_SIO0B_D),A
 330: 2854+17	0265  CD5808  	    call TX_EMP
 331: 2871+10	0268  D1      	    POP DE
 332: 2881+10	0269  C1      	    POP BC
 333: 2891+10	026A  C9      	    RET
 334:				
 335:				
 336:				; HL contains Start ADDR
 337:     -	026B          	PRINT_HEXDUMP:
 338: 2901+11	026B  F5      	    PUSH AF
 339: 2912+11	026C  C5      	    PUSH BC
 340: 2923+11	026D  E5      	    PUSH HL
 341:				    ; PRINT Header
 342: 2934+10	026E  018707  	    LD BC, [MSG_HEXDUMP_HEADER]
 343: 2944+17	0271  CD3A08  	    CALL CONSOLE_PRINTSTR
 344: 2961+7	0274  0E00    	    LD C,0  ; Line Counter
 345:				
 346:     -	0276          	PRINT_HEXDUMP_SOL: ; Start of Line
 347: 2968+7	0276  3E0D    	    LD A,13
 348: 2975+11	0278  D311    	    out (IO_SIO0B_D),A
 349: 2986+17	027A  CD5808  	    call TX_EMP
 350: 3003+7	027D  3E0A    	    LD A,10
 351: 3010+11	027F  D311    	    out (IO_SIO0B_D),A
 352: 3021+17	0281  CD5808  	    call TX_EMP
 353:				
 354: 3038+4	0284  7C      	    LD A,H
 355: 3042+17	0285  CD5702  	    CALL PRINT_A_HEX
 356: 3059+4	0288  7D      	    LD A,L
 357: 3063+17	0289  CD5702  	    CALL PRINT_A_HEX
 358:				
 359: 3080+7	028C  3E68    	    LD A, 'h'
 360: 3087+11	028E  D311    	    out (IO_SIO0B_D),A
 361: 3098+17	0290  CD5808  	    call TX_EMP
 362: 3115+7	0293  3E3A    	    LD A, ':'
 363: 3122+11	0295  D311    	    out (IO_SIO0B_D),A
 364: 3133+17	0297  CD5808  	    call TX_EMP
 365: 3150+7	029A  3E20    	    LD A, ' '
 366: 3157+11	029C  D311    	    out (IO_SIO0B_D),A
 367: 3168+17	029E  CD5808  	    call TX_EMP
 368:				
 369: 3185+7	02A1  0600    	    LD B,0  ; Column Counter
 370:     -	02A3          	PRINT_HEXDUMP_LOOP1:
 371: 3192+7	02A3  7E      	    LD A,(HL)
 372: 3199+17	02A4  CD5702  	    CALL PRINT_A_HEX
 373: 3216+7	02A7  3E20    	    LD A, ' '
 374: 3223+11	02A9  D311    	    out (IO_SIO0B_D),A
 375: 3234+17	02AB  CD5808  	    call TX_EMP
 376:				
 377: 3251+4	02AE  04      	    INC B
 378: 3255+6	02AF  23      	    INC HL
 379:				    ; Check If 16 columns
 380: 3261+4	02B0  78      	    LD A,B
 381: 3265+7	02B1  E610    	    AND 0x10
 382: 3272+10	02B3  CAA302  	    JP Z, PRINT_HEXDUMP_LOOP1; IF less than 8
 383:				
 384: 3282+4	02B6  0C      	    INC C
 385: 3286+4	02B7  79      	    LD A,C
 386: 3290+7	02B8  E610    	    AND 0x10
 387:				
 388: 3297+10	02BA  CA7602  	    JP Z, PRINT_HEXDUMP_SOL; IF less than 8
 389:				
 390: 3307+7	02BD  3E0D    	    LD A,13
 391: 3314+11	02BF  D311    	    out (IO_SIO0B_D),A
 392: 3325+17	02C1  CD5808  	    call TX_EMP
 393: 3342+7	02C4  3E0A    	    LD A,10
 394: 3349+11	02C6  D311    	    out (IO_SIO0B_D),A
 395: 3360+17	02C8  CD5808  	    call TX_EMP
 396:				
 397: 3377+10	02CB  E1      	    POP HL
 398: 3387+10	02CC  C1      	    POP BC
 399: 3397+10	02CD  F1      	    POP AF
 400: 3407+10	02CE  C9      	    RET
 401:				
 402:				
 403:     -	02CF          	CONSOLE_PARSE_LINE:
 404:				    ;CLEAR Cursor
 405: 3417+7	02CF  3E7F    	    LD A, 0x7F
 406: 3424+11	02D1  D311    	    out (IO_SIO0B_D),A
 407: 3435+17	02D3  CD5808  	    call TX_EMP
 408:				
 409:				    ;ADD NULL TERMINATION TO STR
 410: 3452+10	02D6  210540  	    LD HL,MEM_PROMPT_START
 411: 3462+7	02D9  0600    	    LD B,0
 412: 3469+13	02DB  3A0340  	    LD A,(MEM_PROMPT_SIZE)
 413: 3482+4	02DE  4F      	    LD C,A
 414: 3486+15	02DF  ED4A    	    ADC HL, BC
 415: 3501+4	02E1  AF      	    XOR A ; SET A 0
 416: 3505+7	02E2  77      	    LD (HL), A
 417:				
 418:				    ; Echo Str
 419:				    ;LD BC, MEM_PROMPT_START
 420:				    ;CALL CONSOLE_PRINTSTR
 421:				
 422:				    ; HX DUMP
 423:				    ;
 424:				    ;LD A,(MEM_PROMPT_SIZE)
 425:				    ;CALL PRINT_A_HEX
 426:				
 427:				    ; Parse Hexdump CMD
 428:				    ; hd $xxxx
 429:     -	02E3          	CONSOLE_PARSE_LINE_HD:
 430: 3512+10	02E3  11C707  	    LD DE,[CMD_PS_HD]
 431: 3522+10	02E6  210540  	    LD HL,MEM_PROMPT_START
 432: 3532+17	02E9  CD7104  	    CALL CMP_STRING_START
 433: 3549+10	02EC  C20303  	    JP NZ,CONSOLE_PARSE_LINE_EXEC
 434:				    ; if match
 435:				    
 436: 3559+10	02EF  010940  	    LD BC,MEM_PROMPT_START + 4
 437: 3569+17	02F2  CD9804  	    CALL DHEX_TO_BYTE
 438: 3586+4	02F5  67      	    LD H,A
 439:				
 440: 3590+10	02F6  010B40  	    LD BC,MEM_PROMPT_START + 6
 441: 3600+17	02F9  CD9804  	    CALL DHEX_TO_BYTE
 442: 3617+7	02FC  E6F0    	    AND 0xF0
 443: 3624+4	02FE  6F      	    LD L,A
 444:				
 445:				    ;LD HL,0x4000
 446: 3628+17	02FF  CD6B02  	    CALL PRINT_HEXDUMP
 447: 3645+10	0302  C9      	    RET
 448:				
 449:     -	0303          	CONSOLE_PARSE_LINE_EXEC:
 450: 3655+10	0303  11D107  	    LD DE,[CMD_PS_EXEC]
 451: 3665+10	0306  210540  	    LD HL,MEM_PROMPT_START
 452: 3675+17	0309  CD7104  	    CALL CMP_STRING_START
 453: 3692+10	030C  C22103  	    JP NZ,CONSOLE_PARSE_LINE_MGET
 454:				    ; if match
 455:				    
 456: 3702+10	030F  010B40  	    LD BC,MEM_PROMPT_START + 6
 457: 3712+17	0312  CD9804  	    CALL DHEX_TO_BYTE
 458: 3729+4	0315  67      	    LD H,A
 459:				
 460: 3733+10	0316  010D40  	    LD BC,MEM_PROMPT_START + 8
 461: 3743+17	0319  CD9804  	    CALL DHEX_TO_BYTE
 462: 3760+4	031C  6F      	    LD L,A
 463:				
 464: 3764+10	031D  31FF7F  	    LD SP,0x7FFF
 465: 3774+4	0320  E9      	    JP HL
 466:				
 467:				
 468:     -	0321          	CONSOLE_PARSE_LINE_MGET:
 469: 3778+10	0321  11DF07  	    LD DE,[CMD_PS_MGET]
 470: 3788+10	0324  210540  	    LD HL,MEM_PROMPT_START
 471: 3798+17	0327  CD7104  	    CALL CMP_STRING_START
 472: 3815+10	032A  C26303  	    JP NZ,CONSOLE_PARSE_LINE_MSET
 473:				    ; if match
 474:				    
 475: 3825+10	032D  010B40  	    LD BC,MEM_PROMPT_START + 6
 476: 3835+17	0330  CD9804  	    CALL DHEX_TO_BYTE
 477: 3852+4	0333  67      	    LD H,A
 478:				
 479: 3856+10	0334  010D40  	    LD BC,MEM_PROMPT_START + 8
 480: 3866+17	0337  CD9804  	    CALL DHEX_TO_BYTE
 481: 3883+4	033A  6F      	    LD L,A
 482:				
 483: 3887+7	033B  3E0D    	    LD A,13
 484: 3894+11	033D  D311    	    out (IO_SIO0B_D),A
 485: 3905+17	033F  CD5808  	    call TX_EMP
 486: 3922+7	0342  3E0A    	    LD A,10
 487: 3929+11	0344  D311    	    out (IO_SIO0B_D),A
 488: 3940+17	0346  CD5808  	    call TX_EMP
 489: 3957+7	0349  7E      	    LD A,(HL)
 490: 3964+17	034A  CD5702  	    CALL PRINT_A_HEX
 491: 3981+7	034D  3E68    	    LD A,'h'
 492: 3988+11	034F  D311    	    out (IO_SIO0B_D),A
 493: 3999+17	0351  CD5808  	    call TX_EMP
 494: 4016+7	0354  3E0D    	    LD A,13
 495: 4023+11	0356  D311    	    out (IO_SIO0B_D),A
 496: 4034+17	0358  CD5808  	    call TX_EMP
 497: 4051+7	035B  3E0A    	    LD A,10
 498: 4058+11	035D  D311    	    out (IO_SIO0B_D),A
 499: 4069+17	035F  CD5808  	    call TX_EMP
 500: 4086+10	0362  C9      	    RET
 501:				
 502:     -	0363          	CONSOLE_PARSE_LINE_MSET:
 503: 4096+10	0363  11E607  	    LD DE,[CMD_PS_MSET]
 504: 4106+10	0366  210540  	    LD HL,MEM_PROMPT_START
 505: 4116+17	0369  CD7104  	    CALL CMP_STRING_START
 506: 4133+10	036C  C29303  	    JP NZ,CONSOLE_PARSE_LINE_IOGET
 507:				    ; if match
 508:				    
 509: 4143+10	036F  010B40  	    LD BC,MEM_PROMPT_START + 6
 510: 4153+17	0372  CD9804  	    CALL DHEX_TO_BYTE
 511: 4170+4	0375  67      	    LD H,A
 512:				
 513: 4174+10	0376  010D40  	    LD BC,MEM_PROMPT_START + 8
 514: 4184+17	0379  CD9804  	    CALL DHEX_TO_BYTE
 515: 4201+4	037C  6F      	    LD L,A
 516:				
 517:				    
 518: 4205+10	037D  011040  	    LD BC,MEM_PROMPT_START + 11
 519: 4215+17	0380  CD9804  	    CALL DHEX_TO_BYTE
 520:				    
 521: 4232+7	0383  77      	    LD (HL),A
 522:				
 523: 4239+7	0384  3E0D    	    LD A,13
 524: 4246+11	0386  D311    	    out (IO_SIO0B_D),A
 525: 4257+17	0388  CD5808  	    call TX_EMP
 526: 4274+7	038B  3E0A    	    LD A,10
 527: 4281+11	038D  D311    	    out (IO_SIO0B_D),A
 528: 4292+17	038F  CD5808  	    call TX_EMP
 529: 4309+10	0392  C9      	    RET
 530:     -	0393          	CONSOLE_PARSE_LINE_IOGET:
 531: 4319+10	0393  11F707  	    LD DE,[CMD_PS_IOGET]
 532: 4329+10	0396  210540  	    LD HL,MEM_PROMPT_START
 533: 4339+17	0399  CD7104  	    CALL CMP_STRING_START
 534: 4356+10	039C  C2CF03  	    JP NZ,CONSOLE_PARSE_LINE_IOSET
 535:				    ; if match
 536:				    
 537: 4366+10	039F  010C40  	    LD BC,MEM_PROMPT_START + 7
 538: 4376+17	03A2  CD9804  	    CALL DHEX_TO_BYTE
 539: 4393+4	03A5  4F      	    LD C, A
 540:				
 541: 4397+7	03A6  3E0D    	    LD A,13
 542: 4404+11	03A8  D311    	    out (IO_SIO0B_D),A
 543: 4415+17	03AA  CD5808  	    call TX_EMP
 544: 4432+7	03AD  3E0A    	    LD A,10
 545: 4439+11	03AF  D311    	    out (IO_SIO0B_D),A
 546: 4450+17	03B1  CD5808  	    call TX_EMP
 547:				
 548: 4467+12	03B4  ED78    	    IN A,(C)
 549: 4479+17	03B6  CD5702  	    CALL PRINT_A_HEX
 550: 4496+7	03B9  3E68    	    LD A,'h'
 551:				
 552: 4503+11	03BB  D311    	    out (IO_SIO0B_D),A
 553: 4514+17	03BD  CD5808  	    call TX_EMP
 554: 4531+7	03C0  3E0D    	    LD A,13
 555: 4538+11	03C2  D311    	    out (IO_SIO0B_D),A
 556: 4549+17	03C4  CD5808  	    call TX_EMP
 557: 4566+7	03C7  3E0A    	    LD A,10
 558: 4573+11	03C9  D311    	    out (IO_SIO0B_D),A
 559: 4584+17	03CB  CD5808  	    call TX_EMP
 560: 4601+10	03CE  C9      	    RET
 561:				
 562:     -	03CF          	CONSOLE_PARSE_LINE_IOSET:
 563: 4611+10	03CF  11FF07  	    LD DE,[CMD_PS_IOSET]
 564: 4621+10	03D2  210540  	    LD HL,MEM_PROMPT_START
 565: 4631+17	03D5  CD7104  	    CALL CMP_STRING_START
 566: 4648+10	03D8  C20704  	    JP NZ,CONSOLE_PARSE_LINE_HELP
 567:				    ; if match
 568:				    
 569: 4658+10	03DB  010C40  	    LD BC,MEM_PROMPT_START + 7
 570: 4668+17	03DE  CD9804  	    CALL DHEX_TO_BYTE
 571: 4685+4	03E1  67      	    LD H,A
 572:				
 573: 4689+10	03E2  010F40  	    LD BC,MEM_PROMPT_START + 10
 574: 4699+17	03E5  CD9804  	    CALL DHEX_TO_BYTE
 575:				
 576:				    ;; DEBUG START
 577: 4716+11	03E8  F5      	    PUSH AF
 578:				
 579: 4727+7	03E9  3E20    	    LD A,' '
 580: 4734+11	03EB  D311    	    out (IO_SIO0B_D),A
 581: 4745+17	03ED  CD5808  	    call TX_EMP
 582:				
 583: 4762+4	03F0  7C      	    LD A,H
 584: 4766+17	03F1  CD5702  	    CALL PRINT_A_HEX
 585:				
 586: 4783+10	03F4  F1      	    POP AF
 587:				    ;; DEBUG END
 588:				
 589: 4793+4	03F5  4C      	    LD C,H
 590: 4797+12	03F6  ED79    	    OUT (C),A
 591:				
 592: 4809+7	03F8  3E0D    	    LD A,13
 593: 4816+11	03FA  D311    	    out (IO_SIO0B_D),A
 594: 4827+17	03FC  CD5808  	    call TX_EMP
 595: 4844+7	03FF  3E0A    	    LD A,10
 596: 4851+11	0401  D311    	    out (IO_SIO0B_D),A
 597: 4862+17	0403  CD5808  	    call TX_EMP
 598: 4879+10	0406  C9      	    RET
 599:				
 600:     -	0407          	CONSOLE_PARSE_LINE_HELP:
 601: 4889+10	0407  11ED07  	    LD DE,[CMD_PS_HELP]
 602: 4899+10	040A  210540  	    LD HL,MEM_PROMPT_START
 603: 4909+17	040D  CD7104  	    CALL CMP_STRING_START
 604: 4926+10	0410  C22804  	    JP NZ,CONSOLE_PARSE_LINE_VERSION
 605:				    ; if match
 606:				    
 607: 4936+10	0413  017A06  	    LD BC,[MSG_CMD_HELP]
 608: 4946+17	0416  CD3A08  	    CALL CONSOLE_PRINTSTR
 609:				
 610: 4963+7	0419  3E0D    	    LD A,13
 611: 4970+11	041B  D311    	    out (IO_SIO0B_D),A
 612: 4981+17	041D  CD5808  	    call TX_EMP
 613: 4998+7	0420  3E0A    	    LD A,10
 614: 5005+11	0422  D311    	    out (IO_SIO0B_D),A
 615: 5016+17	0424  CD5808  	    call TX_EMP
 616: 5033+10	0427  C9      	    RET
 617:				
 618:     -	0428          	CONSOLE_PARSE_LINE_VERSION:
 619: 5043+10	0428  11F307  	    LD DE,[CMD_PS_VER]
 620: 5053+10	042B  210540  	    LD HL,MEM_PROMPT_START
 621: 5063+17	042E  CD7104  	    CALL CMP_STRING_START
 622: 5080+10	0431  C24904  	    JP NZ,CONSOLE_PARSE_LINE_CLEAR
 623:				    ; if match
 624:				    
 625: 5090+10	0434  01E806  	    LD BC,[MSG_CMD_VER]
 626: 5100+17	0437  CD3A08  	    CALL CONSOLE_PRINTSTR
 627:				
 628: 5117+7	043A  3E0D    	    LD A,13
 629: 5124+11	043C  D311    	    out (IO_SIO0B_D),A
 630: 5135+17	043E  CD5808  	    call TX_EMP
 631: 5152+7	0441  3E0A    	    LD A,10
 632: 5159+11	0443  D311    	    out (IO_SIO0B_D),A
 633: 5170+17	0445  CD5808  	    call TX_EMP
 634: 5187+10	0448  C9      	    RET
 635:				
 636:     -	0449          	CONSOLE_PARSE_LINE_CLEAR:
 637: 5197+10	0449  11EF07  	    LD DE,[CMD_PS_CLEAR]
 638: 5207+10	044C  210540  	    LD HL,MEM_PROMPT_START
 639: 5217+17	044F  CD7104  	    CALL CMP_STRING_START
 640: 5234+10	0452  C25C04  	    JP NZ,CONSOLE_PARSE_LINE_ELSE
 641:				    ; if match
 642:				    
 643: 5244+10	0455  01BF07  	    LD BC,[MSG_CLEAR]
 644: 5254+17	0458  CD3A08  	    CALL CONSOLE_PRINTSTR
 645:				
 646: 5271+10	045B  C9      	    RET
 647:				
 648:				
 649:				
 650:     -	045C          	CONSOLE_PARSE_LINE_ELSE:
 651:				    ; Error Message
 652: 5281+10	045C  017207  	    LD BC, [MSG_CMD_UNKNOWN]
 653: 5291+17	045F  CD3A08  	    CALL CONSOLE_PRINTSTR
 654: 5308+7	0462  3E0D    	    LD A,13
 655: 5315+11	0464  D311    	    out (IO_SIO0B_D),A
 656: 5326+17	0466  CD5808  	    call TX_EMP
 657: 5343+7	0469  3E0A    	    LD A,10
 658: 5350+11	046B  D311    	    out (IO_SIO0B_D),A
 659: 5361+17	046D  CD5808  	    call TX_EMP
 660: 5378+10	0470  C9      	    RET
 661:				
 662:				
 663:				; HL = String to compare
 664:				; DE = String Pattern
 665:     -	0471          	CMP_STRING_START:
 666: 5388+7	0471  1A      	    LD A,(DE)
 667: 5395+4	0472  A7      	    AND A
 668: 5399+5+6	0473  C8      	    RET Z; RETURN Z=1 if reached END wizhout mismatch
 669: 5404+7	0474  BE      	    CP (HL)
 670: 5411+5+6	0475  C0      	    RET NZ; If not Match (z=0) exit
 671:     -	0476          	CMP_STRING_START_MATCHED:
 672: 5416+7	0476  7E      	    LD A,(HL)
 673: 5423+4	0477  A7      	    AND A; String to compare reached end
 674: 5427+5+6	0478  C8      	    RET Z
 675:     -	0479          	CMP_STRING_START_CONTINUE:
 676: 5432+6	0479  23      	    INC HL
 677: 5438+6	047A  13      	    INC DE
 678: 5444+10	047B  C37104  	    JP CMP_STRING_START
 679:				    
 680:				; REG A Contains CHAR-Low
 681:				; If failed, Carry is set
 682:     -	047E          	HEX_TO_BIN:
 683: 5454+7	047E  D630    	    SUB 48 ; 0 is 0
 684: 5461+10	0480  EA9304  	    JP PE, HEX_TO_INVALID_2; to low (SUB overflow)
 685: 5471+7	0483  FE0A    	    CP 10 ; Value is between 0 and 9
 686: 5478+7+5	0485  3805    	    JR C, HEX_TO_BIN_2
 687: 5485+7	0487  D607    	    SUB 7
 688: 5492+10	0489  EA9304  	    JP PE, HEX_TO_INVALID_2; to low (SUB overflow)
 689:     -	048C          	HEX_TO_BIN_2:
 690: 5502+7	048C  FE10    	    CP 16
 691: 5509+7+5	048E  3003    	    JR NC, HEX_TO_INVALID_2; if bigger than 15-> fail
 692: 5516+7	0490  E60F    	    AND 0x0F
 693: 5523+10	0492  C9      	    RET
 694:     -	0493          	HEX_TO_INVALID_2:
 695: 5533+7	0493  3E01    	    LD A,1
 696: 5540+7	0495  C6FF    	    ADD 255
 697: 5547+10	0497  C9      	    RET
 698:				
 699:				; BC Contains Address to string
 700:				; E is 0xFF if error
 701:				; E is 0x00 if okay
 702:     -	0498          	DHEX_TO_BYTE:
 703: 5557+11	0498  C5      	    PUSH BC
 704:				    ; Load First Byte
 705: 5568+7	0499  0A      	    LD A,(BC)
 706: 5575+17	049A  CD7E04  	    CALL HEX_TO_BIN
 707:				    ;JP C,DHEX_TO_BYTE_FAILED
 708: 5592+8	049D  CB27    	    SLA A
 709: 5600+8	049F  CB27    	    SLA A
 710: 5608+8	04A1  CB27    	    SLA A
 711: 5616+8	04A3  CB27    	    SLA A
 712: 5624+4	04A5  57      	    LD D,A
 713:				
 714: 5628+6	04A6  03      	    INC BC
 715: 5634+7	04A7  0A      	    LD A,(BC)
 716: 5641+17	04A8  CD7E04  	    CALL HEX_TO_BIN
 717:				    ;JP C,DHEX_TO_BYTE_FAILED
 718: 5658+4	04AB  B2      	    OR D ; Merge
 719:				    
 720: 5662+10	04AC  C1      	    POP BC
 721: 5672+7	04AD  1E00    	    LD E,0x00
 722: 5679+10	04AF  C9      	    RET
 723:     -	04B0          	DHEX_TO_BYTE_FAILED:
 724: 5689+7	04B0  1EFF    	    LD E,0xFF
 725:				    ;LD A,0x00
 726: 5696+10	04B2  C1      	    POP BC
**** main.asm ****
 727: 5706+10	04B3  C9      	    RET



Statistics:

     4	passes
     0	jr promotions
   116	symbols
  1770	bytes



Symbol Table:

AY0_WRITE_REG    A67      2663
A_RTS_OFF        13B      315
A_RTS_ON         144      324
CMD_CRS_SPEED  =E000      57344
CMD_PS_CALL      7D8      2008
CMD_PS_CLEAR     7EF      2031
CMD_PS_EXEC      7D1      2001
CMD_PS_HD        7C7      1991
CMD_PS_HELP      7ED      2029
CMD_PS_IOGET     7F7      2039
CMD_PS_IOSET     7FF      2047
CMD_PS_MGET      7DF      2015
CMD_PS_MSET      7E6      2022
CMD_PS_PT        7CC      1996
CMD_PS_VER       7F3      2035
CMP_STRING_START  471      1137
CMP_STRING_START_CONTINUE  479      1145
CMP_STRING_START_MATCHED  476      1142
CONSOLE_INIT     867      2151
CONSOLE_PARSE_LINE  2CF      719
CONSOLE_PARSE_LINE_CLEAR  449      1097
CONSOLE_PARSE_LINE_ELSE  45C      1116
CONSOLE_PARSE_LINE_EXEC  303      771
CONSOLE_PARSE_LINE_HD  2E3      739
CONSOLE_PARSE_LINE_HELP  407      1031
CONSOLE_PARSE_LINE_IOGET  393      915
CONSOLE_PARSE_LINE_IOSET  3CF      975
CONSOLE_PARSE_LINE_MGET  321      801
CONSOLE_PARSE_LINE_MSET  363      867
CONSOLE_PARSE_LINE_VERSION  428      1064
CONSOLE_PRINTSTR  83A      2106
CONSOLE_PRINTSTR_EXIT  84A      2122
CONSOLE_PRINTSTR_LOOP  83C      2108
CONSOLE_PROMPT   178      376
CONSOLE_PROMPT_LOOP  1AC      428
CONSOLE_PROMPT_LOOP_1  1C1      449
CONSOLE_PROMPT_LOOP_1B  1ED      493
CONSOLE_PROMPT_LOOP_2  21C      540
CONSOLE_PROMPT_LOOP_3  23F      575
CONSOLE_READ_CHAR  84D      2125
CONSOLE_TX_WAIT  85B      2139
DELAY            166      358
DELAY_LOOP       170      368
DHEX_TO_BYTE     498      1176
DHEX_TO_BYTE_FAILED  4B0      1200
HEX_TO_BIN       47E      1150
HEX_TO_BIN_2     48C      1164
HEX_TO_INVALID_2  493      1171
INT_VEC          807      2055
IO_AY0_ADDR    =40        64
IO_AY0_DATA    =41        65
IO_AY1_ADDR    =42        66
IO_AY1_DATA    =43        67
IO_CTC0_C0     =00        0
IO_CTC0_C1     =01        1
IO_CTC0_C2     =02        2
IO_CTC0_C3     =03        3
IO_REG0        =20        32
IO_RTC_AMPM    =25        37
IO_RTC_CTR_D   =2D        45
IO_RTC_CTR_E   =2E        46
IO_RTC_CTR_F   =2F        47
IO_RTC_DAY0    =26        38
IO_RTC_DAY1    =27        39
IO_RTC_HOUR    =24        36
IO_RTC_MIN0    =22        34
IO_RTC_MIN1    =23        35
IO_RTC_MON0    =28        40
IO_RTC_MON1    =29        41
IO_RTC_SEC0    =20        32
IO_RTC_SEC1    =21        33
IO_RTC_WEEK    =2C        44
IO_RTC_YEAR1   =2B        43
IO_RTC_YERR0   =2A        42
IO_SIO0A_C     =12        18
IO_SIO0A_D     =10        16
IO_SIO0B_C     =13        19
IO_SIO0B_D     =11        17
MEM_CURSOR_STATE=4000      16384
MEM_LAST_CHAR  =4001      16385
MEM_PROMPT_SIZE=4003      16387
MEM_PROMPT_START=4005      16389
MSG_CLEAR        7BF      1983
MSG_CMD_HELP     67A      1658
MSG_CMD_UNKNOWN  772      1906
MSG_CMD_VER      6E8      1768
MSG_HEXDUMP_HEADER  787      1927
MSG_SYS_VER      600      1536
PLAY_DELAY       A51      2641
PLAY_DELAY_LOOP  A53      2643
PLAY_DELAY_LOOP_1  A56      2646
PRINT_A_HEX      257      599
PRINT_HEXDUMP    26B      619
PRINT_HEXDUMP_LOOP1  2A3      675
PRINT_HEXDUMP_SOL  276      630
PROG_MEM_START =4000      16384
PROG_ROM_START = 100      256
RX_CHA_AVAILABLE  14D      333
SPEC_RX_CONDITON  163      355
START_ROM      =00        0
STRCONV_BYTES_TO_HEX  820      2080
STRCONV_BYTES_TO_HEX_1  82F      2095
STRCONV_BYTES_TO_HEX_2  839      2105
STRINGS          AAC      2732
STR_PLAYBACK_DONE  A84      2692
STR_SOUNDCHECK_DONE  A6F      2671
SUB_PLAY         A25      2597
SUB_PLAY_EXIT    A48      2632
SUB_PLAY_LOOP    A33      2611
SUB_SOUNDCHECK   8A7      2215
TX_EMP           858      2136
VAR_CONSOLE_BAUD=10        16
init            10        16
init_console     104      260
init_led        03        3
tune_test1       A97      2711
