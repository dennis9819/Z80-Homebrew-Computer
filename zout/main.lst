   1:				.include "addresses.s"
**** functions/addresses.s ****
   1:     -	0000          	IO_CTC0_C0  equ 0x00
   2:     -	0001          	IO_CTC0_C1  equ 0x01
   3:     -	0002          	IO_CTC0_C2  equ 0x02
   4:     -	0003          	IO_CTC0_C3  equ 0x03
   5:				
   6:     -	0012          	IO_SIO0A_C  equ 00010010b
   7:     -	0010          	IO_SIO0A_D  equ 00010000b
   8:     -	0013          	IO_SIO0B_C  equ 00010011b
   9:     -	0011          	IO_SIO0B_D  equ 00010001b
  10:				
  11:     -	0020          	IO_RTC_SEC0  equ 00100000b
  12:     -	0021          	IO_RTC_SEC1  equ 00100001b
  13:     -	0022          	IO_RTC_MIN0  equ 00100010b
  14:     -	0023          	IO_RTC_MIN1  equ 00100011b
  15:     -	0024          	IO_RTC_HOUR  equ 00100100b
  16:     -	0025          	IO_RTC_AMPM  equ 00100101b
  17:     -	0026          	IO_RTC_DAY0  equ 00100110b
  18:     -	0027          	IO_RTC_DAY1  equ 00100111b
  19:     -	0028          	IO_RTC_MON0  equ 00101000b
  20:     -	0029          	IO_RTC_MON1  equ 00101001b
  21:     -	002A          	IO_RTC_YERR0 equ 00101010b
  22:     -	002B          	IO_RTC_YEAR1 equ 00101011b
  23:     -	002C          	IO_RTC_WEEK  equ 00101100b
  24:     -	002D          	IO_RTC_CTR_D equ 00101101b
  25:     -	002E          	IO_RTC_CTR_E equ 00101110b
  26:     -	002F          	IO_RTC_CTR_F equ 00101111b
  27:				
  28:     -	0040          	IO_AY0_ADDR equ 01000000b
  29:     -	0041          	IO_AY0_DATA equ 01000001b
  30:     -	0042          	IO_AY1_ADDR equ 01000010b
  31:     -	0043          	IO_AY1_DATA equ 01000011b
  32:				
  33:     -	0000          	START_ROM   equ 0x0000
  34:     -	0020          	IO_REG0     equ 0x20
  35:				
  36:     -	0100          	PROG_ROM_START equ 0x0100
**** main.asm ****
   2:     -	4000          	PROG_MEM_START equ 04000h
   3:				
   4:     -	4000          	MEM_CURSOR_STATE equ 0x4000  ; 1 byte var
   5:     -	4001          	MEM_LAST_CHAR equ 0x4001  ; 1 byte var
   6:     -	4003          	MEM_PROMPT_SIZE equ 0x4003
   7:     -	4005          	MEM_PROMPT_START equ 0x4005
   8:				
   9:     -	E000          	CMD_CRS_SPEED equ 0xE000
  10:				
  11:				; Include Kernel Libs at 0x0380
  12:     -	0380          	    org 0x0380
  13:				.include "conversions.s"
**** functions/conversions.s ****
   1:				
   2:				; Kernel Conversion Functions
   3:				
   4:				
   5:				
   6:				;*****************
   7:				; Convert Byte to Hex Char (ASCII)
   8:				;*****************
   9:				;Description: the StrLength function inline
  10:				;
  11:				;Inputs: A contains input byte
  12:				;
  13:				;Outputs: BC contains 2 Bytes of ASCII (HEX)
  14:				;
  15:				;Destroys: A, BC,
  16:     -	0380          	STRCONV_BYTES_TO_HEX:
  17:    0+11	0380  F5      	    PUSH AF;Backup A Register
  18:   11+4	0381  1F      	    RRA
  19:   15+4	0382  1F      	    RRA
  20:   19+4	0383  1F      	    RRA
  21:   23+4	0384  1F      	    RRA
  22:   27+17	0385  CD8F03  	    CALL STRCONV_BYTES_TO_HEX_1
P Phase error - $0387 changed from $00 to $03
  23:				    ;LD A,D
  24:   44+4	0388  47      	    LD B,A  
  25:   48+10	0389  F1      	    POP AF ; Reload first Byte
  26:   58+17	038A  CD8F03  	    CALL STRCONV_BYTES_TO_HEX_1
  27:				    ;LD A,D
  28:   75+4	038D  4F      	    LD C,A
  29:   79+10	038E  C9      	    RET
  30:				
  31:     -	038F          	STRCONV_BYTES_TO_HEX_1:
  32:   89+7	038F  E60F    	    AND 0x0F
  33:   96+7	0391  C630    	    ADD 48
  34:  103+7	0393  FE3A    	    CP 58 ; Check if less than 58 (less than ASCII 9)
  35:  110+7+5	0395  3802    	    JR C, STRCONV_BYTES_TO_HEX_2
  36:  117+7	0397  C607    	    ADD 7 ; A-F
  37:     -	0399          	STRCONV_BYTES_TO_HEX_2:
  38:				    ;LD D,A
  39:  124+10	0399  C9      	    RET
  40:				
  41:				
  42:				
**** main.asm ****
  14:				.include "console.s"
**** functions/console.s ****
   1:				; Kernel Konsole Functions
   2:				
   3:     -	0010          	VAR_CONSOLE_BAUD equ 16d ; BAUD 14400 @ 3.686441MHz & CPUCLK/2
   4:				
   5:				;*****************
   6:				; CONSOLE_PRINTSTR
   7:				;*****************
   8:				;Description: Sends null-terminated String via Serial Port
   9:				;
  10:				;Inputs: BC contains start address of stringg
  11:				;
  12:				;Outputs: Output to IO_SIO0B_D
  13:				;
  14:				;Destroys: none
  15:     -	039A          	CONSOLE_PRINTSTR:
  16:				    ; BC contains String offset
  17:				    ; Prints null terminated string
  18:  134+11	039A  F5      	    PUSH AF
  19:  145+11	039B  C5      	    PUSH BC
  20:     -	039C          	CONSOLE_PRINTSTR_LOOP:
  21:  156+7	039C  0A      	    LD A,(BC)
  22:				
  23:				    ; Return if nullbyte
  24:  163+7	039D  F600    	    OR 0
  25:  170+7+5	039F  2809    	    JR Z, CONSOLE_PRINTSTR_EXIT
  26:				    ; Print Char
  27:  177+11	03A1  D311    	    out (IO_SIO0B_D),A
  28:  188+17	03A3  CDB803  	    call TX_EMP
  29:				
  30:				    ; INC BC and JP start of loop
  31:  205+6	03A6  03      	    INC BC
  32:  211+10	03A7  C39C03  	    jp CONSOLE_PRINTSTR_LOOP
  33:     -	03AA          	CONSOLE_PRINTSTR_EXIT:
  34:  221+10	03AA  C1      	    POP BC
  35:  231+10	03AB  F1      	    POP AF
  36:  241+10	03AC  C9      	    RET
  37:				
  38:				;*****************
  39:				; CONSOLE_READ_CHAR
  40:				;*****************
  41:				;Description: Gets a single byte from console port
  42:				;
  43:				;Inputs: BC contains start address of stringg
  44:				;
  45:				;Outputs: Output to IO_SIO0B_D
  46:				;
  47:				;Destroys: A
  48:				
  49:     -	03AD          	CONSOLE_READ_CHAR:
  50:  251+4	03AD  AF      	    XOR	A
  51:  255+11	03AE  D313    	    OUT (IO_SIO0B_C), A
  52:  266+11	03B0  DB13    	    IN A, (IO_SIO0B_C)
  53:  277+7	03B2  E601    	    AND	1
  54:  284+5+6	03B4  C8      	    RET	Z	
  55:  289+11	03B5  DB11    	    IN A, (IO_SIO0B_D)
  56:				    ;LD D,A
  57:  300+10	03B7  C9      	    RET
  58:				
  59:				;*****************
  60:				; CONSOLE_TX_WAIT/TX_EMP
  61:				;*****************
  62:				;Description: Waits until byte is sent
  63:				;
  64:				;Inputs: none
  65:				;
  66:				;Outputs: none
  67:				;
  68:				;Destroys: A
  69:     -	03B8          	TX_EMP: ; DONT USE!!! DEPRECATED
  70:  310+10	03B8  C3BB03  	    jp CONSOLE_TX_WAIT
  71:     -	03BB          	CONSOLE_TX_WAIT:
  72:				    ; check for TX buffer empty
  73:  320+4	03BB  97      	    sub a ;clear a, write into WR0: select RR0
  74:  324+4	03BC  3C      	    inc a ;select RR1
  75:  328+11	03BD  D313    	    out (IO_SIO0B_C),A
  76:  339+11	03BF  DB13    	    in A,(IO_SIO0B_C) ;read RRx
  77:  350+8	03C1  CB47    	    bit 0,A
  78:  358+10	03C3  CABB03  	    jp z,CONSOLE_TX_WAIT
  79:  368+10	03C6  C9      	    ret
  80:				
  81:				;*****************
  82:				; CONSOLE_INIT
  83:				;*****************
  84:				;Description: Initializes CTC & SIO on Port B
  85:				;
  86:				;Inputs: none 
  87:				;
  88:				;Outputs: none
  89:				;
  90:				;Destroys: A
  91:     -	03C7          	CONSOLE_INIT:
  92:				    ; Setup CTC
  93:				    ; Init Ch1 (SIO0B)
  94:				    ; For 4MHz CPU CLK 00000111b
  95:				    ; For EXT CLK
  96:  378+7	03C7  3E0F    	    LD A,00001111b
  97:  385+11	03C9  D301    	    OUT (IO_CTC0_C1),A
  98:				
  99:  396+7	03CB  3E10    	    LD A,VAR_CONSOLE_BAUD
 100:  403+11	03CD  D301    	    OUT (IO_CTC0_C1),A
 101:				
 102:				    ; Setup SIO
 103:				     ;set up TX and RX:W
 104:  414+7	03CF  3E30    	    ld a,00110000b ;write into WR0: error reset, select WR0
 105:  421+11	03D1  D313    	    out (IO_SIO0B_C),A
 106:  432+7	03D3  3E18    	    ld a,018h ;write into WR0: channel reset
 107:  439+11	03D5  D313    	    out (IO_SIO0B_C),A
 108:				
 109:  450+7	03D7  3E04    	    ld a,004h ;write into WR0: select WR4
 110:  457+11	03D9  D313    	    out (IO_SIO0B_C),A
 111:				    ;ld a,44h ;44h write into WR4: clkx16,1 stop bit, no parity
 112:  468+7	03DB  3E04    	    ld a,04h ;44h write into WR4: clkx1,1 stop bit, no parity
 113:  475+11	03DD  D313    	    out (IO_SIO0B_C),A
 114:				
 115:  486+7	03DF  3E05    	    ld a,005h ;write into WR0: select WR5
 116:  493+11	03E1  D313    	    out (IO_SIO0B_C),A
 117:				    ;ld a,0E8h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
 118:  504+7	03E3  3E68    	    ld a,068h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
 119:  511+11	03E5  D313    	    out (IO_SIO0B_C),A
 120:				
 121:  522+7	03E7  3E01    	    ld a,01h ;write into WR0: select WR1
 122:  529+11	03E9  D313    	    out (IO_SIO0B_C),A
 123:  540+7	03EB  3E04    	    ld a,00000100b ;no interrupt in CH B, special RX condition affects vect
 124:  547+11	03ED  D313    	    out (IO_SIO0B_C),A
 125:				
 126:  558+7	03EF  3E02    	    ld a,02h ;write into WR0: select WR2
 127:  565+11	03F1  D313    	    out (IO_SIO0B_C),A
 128:  576+7	03F3  3E00    	    ld a,0h ;write into WR2: cmd line int vect (see int vec table)
 129:				    ;bits D3,D2,D1 are changed according to RX condition
 130:  583+11	03F5  D313    	    out (IO_SIO0B_C),A
 131:				
 132:				    ;ld a,01h ;write into WR0: select WR1
 133:				    ;out (IO_SIO0B_C),A
 134:				    ;ld a,00011000b ;interrupt on all RX characters, parity is not a spec RX condition
 135:				    ;buffer overrun is a spec RX condition
 136:				    ;out (IO_SIO0B_C),A
 137:				
 138:				    ;enable SIO channel A RX
 139:  594+7	03F7  3E03    	    ld a,003h ;write into WR0: select WR3
 140:  601+11	03F9  D313    	    out (IO_SIO0B_C),A
 141:  612+7	03FB  3EC1    	    ld a,0C1h ;RX 8bit, auto enable off, RX on
 142:  619+11	03FD  D313    	    out (IO_SIO0B_C),A
 143:				    ;Channel A RX active
 144:				
 145:  630+7	03FF  3E25    	    LD A,'%'
 146:  637+11	0401  D311    	    out (IO_SIO0B_D),A
 147:  648+17	0403  CDBB03  	    call CONSOLE_TX_WAIT
 148:				
 149:  665+10	0406  C9      	    RET
 150:				;;
 151:				
 152:				;*****************
 153:				; CONSOLE_CURSOR
 154:				;*****************
 155:				;Description: Initializes CTC & SIO on Port B
 156:				;
 157:				;Inputs: A=0 off , A=1 on 
 158:				;
 159:				;Outputs: none
 160:				;
 161:				;Destroys: A
 162:     -	0407          	CONSOLE_CURSOR:
 163:  675+4	0407  A7      	    AND A               ;Check if A == 0
 164:  679+10	0408  CA1204  	    JP Z,CONSOLE_CURSOR_OFF
 165:				
 166:  689+10	040B  011904  	    LD BC,[MSG_CRSR_0]
 167:  699+17	040E  CD9A03  	    CALL CONSOLE_PRINTSTR
 168:				
 169:  716+10	0411  C9      	    RET                 ;Exit Sub
 170:     -	0412          	CONSOLE_CURSOR_OFF:
 171:  726+10	0412  012004  	    LD BC,[MSG_CRSR_1]
 172:  736+17	0415  CD9A03  	    CALL CONSOLE_PRINTSTR
 173:				
 174:  753+10	0418  C9      	    RET                 ;Exit Sub
 175:				
 176:     -	0419          	MSG_CRSR_0:
 177:     -	0419  1B5B3F32	    db 0x1B, "[?25h",0
	              356800
 178:     -	0420          	MSG_CRSR_1:
**** main.asm ****
  15:     -	0420  1B5B3F32	    db 0x1B, "[?25l",0
	              356C00
  16:				.include "io.s"
**** functions/io.s ****
   1:				; A contains Data
   2:				; C Contains Addr
   3:     -	0427          	AY0_WRITE_REG:
   4:  763+4	0427  47      	    LD B,A
   5:  767+4	0428  7A      	    LD A,D
   6:  771+11	0429  D340    	    OUT (IO_AY0_ADDR),A
   7:  782+4	042B  78      	    LD A,B
   8:  786+11	042C  D341    	    OUT (IO_AY0_DATA),A
   9:  797+10	042E  C9      	    RET
  10:				
  11:				; Serial Util Functions
  12:     -	042F          	A_RTS_OFF:
  13:  807+7	042F  3E05    	    ld a,005h ;write into WR0: select WR5
  14:  814+11	0431  D313    	    out (IO_SIO0B_C),A
  15:  825+7	0433  3EE8    	    ld a,0E8h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
  16:  832+11	0435  D313    	    out (IO_SIO0B_C),A
  17:  843+10	0437  C9      	    ret
  18:     -	0438          	A_RTS_ON:
  19:  853+7	0438  3E05    	    ld a,005h ;write into WR0: select WR5
  20:  860+11	043A  D313    	    out (IO_SIO0B_C),A
  21:  871+7	043C  3EEA    	    ld a,0EAh ;DTR active, TX 8bit, BREAK off, TX on, RTS active
  22:  878+11	043E  D313    	    out (IO_SIO0B_C),A
  23:  889+10	0440  C9      	    ret
  24:				
  25:     -	0441          	RX_CHA_AVAILABLE:
  26:  899+11	0441  F5      	    push AF ;backup AF
  27:				
  28:  910+7	0442  3EFF    	    LD A,0xFF
  29:  917+11	0444  D320    	    OUT (IO_REG0),A
  30:				
  31:  928+17	0446  CD2F04  	    call A_RTS_OFF
  32:  945+11	0449  DB11    	    in A,(IO_SIO0B_D) ;read RX character into A
  33:				    ; A holds received character
  34:				    ;do something with the received character
  35:				    ;echo character to host
  36:  956+11	044B  D311    	    out (IO_SIO0B_D),A
  37:  967+17	044D  CDB803  	    call TX_EMP
  38:  984+4	0450  FB      	    ei ;see comments below
  39:  988+17	0451  CD3804  	    call A_RTS_ON ;see comments below
  40:				
  41:				    ;LD A,0x00
  42:				    ;OUT (IO_REG0),A
  43:				
  44: 1005+10	0454  F1      	    pop AF ;restore AF
**** main.asm ****
  17: 1015+14	0455  ED4D    	    Reti
  18:				.include "commands.s"
**** functions/commands.s ****
   1:     -	0457          	MOD_COMMANDS:
   2:				    ;org 0x0370
   3:				
   4:				;-------------------------------------------------------------
   5:				; command directory
   6:				;-------------------------------------------------------------
   7:     -	0457          	ARR_COMMANDS:
   8:				    ; Version
   9:     -	0457  5305    	    word [CMD_VERSION]
  10:     -	0459  76657200	    db "ver",0
  11:				    ; Clear Screen
  12:     -	045D  6805    	    word [CMD_CLEAR]
  13:     -	045F  636C7200	    db "clr",0
  14:				    ; Help
  15:     -	0463  3E05    	    word [CMD_HELP]
  16:     -	0465  3F00    	    db "?",0
  17:				    ; Set Memory
  18:     -	0467  F105    	    word [CMD_MSET]
  19:     -	0469  6D736574	    db "mset $",0
	              202400
  20:				    ; Get Memory
  21:     -	0470  1506    	    word [CMD_MGET]
  22:     -	0472  6D676574	    db "mget $",0
	              202400
  23:				    ; IO Set
  24:     -	0479  C505    	    word [CMD_IOSET]
  25:     -	047B  696F7365	    db "ioset $",0
	              74202400
  26:				    ; IO Get
  27:     -	0483  9505    	    word [CMD_IOGET]
  28:     -	0485  696F6765	    db "ioget $",0
	              74202400
  29:				    ; Hey-Dump
  30:     -	048D  6F05    	    word [CMD_HEXDUMP]
  31:     -	048F  68642024	    db "hd $",0
	              00
  32:				    ; Exec
  33:     -	0494  8305    	    word [CMD_EXEC]
  34:     -	0496  65786563	    db "exec $",0
	              202400
  35:				    
  36:				    ;File System Functions
  37:				    ; List Files
  38:     -	049D  4B06    	    word [CMD_NOT_IMPLEMENTED]
  39:     -	049F  646C6973	    db "dlist",0
	              7400
  40:				
  41:				    ; Go Subdirectory
  42:     -	04A5  4B06    	    word [CMD_NOT_IMPLEMENTED]
  43:     -	04A7  64676F00	    db "dgo",0
  44:				
  45:				    ; Load File to Memory
  46:     -	04AB  4B06    	    word [CMD_NOT_IMPLEMENTED]
  47:     -	04AD  646C6F61	    db "dload ",0
	              642000
  48:				
  49:				    ; Store File from Memory
  50:     -	04B4  4B06    	    word [CMD_NOT_IMPLEMENTED]
  51:     -	04B6  64736176	    db "dsave ",0
	              652000
  52:				
  53:				    ; mount FS
  54:     -	04BD  4B06    	    word [CMD_NOT_IMPLEMENTED]
  55:     -	04BF  646D6F75	    db "dmount ",0
	              6E742000
  56:				
  57:				    ; ununt FS
  58:     -	04C7  4B06    	    word [CMD_NOT_IMPLEMENTED]
  59:     -	04C9  64756D6F	    db "dumount ",0
	              756E7420
	              00
  60:				
  61:				    ; remove file
  62:     -	04D2  4B06    	    word [CMD_NOT_IMPLEMENTED]
  63:     -	04D4  6472656D	    db "drem ",0
	              2000
  64:				
  65:				    ; disk info
  66:     -	04DA  4B06    	    word [CMD_NOT_IMPLEMENTED]
  67:     -	04DC  64696E66	    db "dinfo ",0
	              6F2000
  68:				
  69:     -	04E3  0000    	    word 0x0000 ; END
  70:				
  71:     -	04E5          	STR_NOTFOUND:
  72:     -	04E5  0D0A696E	    db 13,10,"invalid command/syntax",13,10,0
	              76616C69
	              6420636F
	              6D6D616E
	              642F7379
	              6E746178
	              0D0A00
  73:				
  74:				;-------------------------------------------------------------
  75:				; command parser
  76:				;-------------------------------------------------------------
  77:				
  78:				;*****************
  79:				; PARSE_CMD
  80:				;*****************
  81:				;Description: Pares Input Command
  82:				;
  83:				;Inputs: none
  84:				;
  85:				;Outputs: none
  86:				;
  87:				;Destroys: A, BC, DE, HL
  88:     -	0500          	PARSE_CMD:
  89: 1029+10	0500  115704  	    LD DE, [ARR_COMMANDS]           ; Load compare ADDR 
  90:				
  91:     -	0503          	PARSE_CMD_START:
  92: 1039+7	0503  1A      	    LD A, (DE)                       ;Load first 2 bytes: Jump address
  93: 1046+4	0504  4F      	    LD C,A
  94: 1050+6	0505  13      	    INC DE   
  95: 1056+7	0506  1A      	    LD A, (DE)                       ;Load first 2 bytes: Jump address
  96: 1063+4	0507  47      	    LD B,A
  97: 1067+6	0508  13      	    INC DE                          ;DE is now the starting address of the null-terminated-string 
  98:				    
  99:				    ; Compare 16 bit routine pointer
 100: 1073+10	0509  210000  	    LD HL,0000h                     ;load HL with value to compare -> 0x0000
 101: 1083+15	050C  ED42    	    SBC HL,BC                       ;substract HL from BC. If both match, Z flag will be set
 102: 1098+10	050E  CA2A05  	    JP Z,PARSE_CMD_NO_MATCH         ;jmp to exit block for parser
 103:				    ; if > 0 -> continue
 104:				
 105: 1108+10	0511  210540  	    LD HL, [MEM_PROMPT_START]       ; Input Buffer
 106: 1118+17	0514  CD3105  	    CALL PARSE_CMD_CMP_STRING_START ;parse 1st elemeent
 107: 1135+10	0517  CA2305  	    JP Z,PARSE_CMD_START_FOUND      ;jmp to pointer if match
 108:				
 109:     -	051A          	PARSE_CMD_START_NOT_FOUND:          ;inc DE to next element
 110: 1145+7	051A  1A      	    LD A,(DE)                       ;find end of string -> load current byte
 111: 1152+6	051B  13      	    INC DE                          
 112: 1158+4	051C  A7      	    AND A                           ;find null termination
 113: 1162+10	051D  CA0305  	    JP Z, PARSE_CMD_START          ;if current byte-1 == 0x00 -> continue loop @ PARSE_CMD_START
 114: 1172+10	0520  C31A05  	    JP PARSE_CMD_START_NOT_FOUND
 115:				
 116:     -	0523          	PARSE_CMD_START_FOUND:              ;if command matched
 117: 1182+17	0523  CD2705  	    CALL PARSE_CMD_START_EXEC       ;call routine
 118: 1199+10	0526  C9      	    RET                             ;exit parser
 119:				
 120:     -	0527          	PARSE_CMD_START_EXEC:               ;dynamic Z80 call -> serves as function and will put last PC value on stack
 121:				
 122:				
 123: 1209+4	0527  60      	    LD H,B                       ;load HL with pointer to routine
 124: 1213+4	0528  69      	    LD L,C
 125: 1217+4	0529  E9      	    JP (HL)                         ;jmp to routine
 126:				    
 127:     -	052A          	PARSE_CMD_NO_MATCH:                 ;if no command matched
 128: 1221+10	052A  01E504  	    LD BC,[STR_NOTFOUND]            ;load pointer to string STR_NOTFOUND
 129: 1231+17	052D  CD9A03  	    CALL CONSOLE_PRINTSTR           ;print null-terminated string to console
 130: 1248+10	0530  C9      	    RET                             ;exit parser
 131:				
 132:				; HL = String to compare
 133:				; DE = String Pattern
 134:     -	0531          	PARSE_CMD_CMP_STRING_START:
 135: 1258+7	0531  1A      	    LD A,(DE)
 136: 1265+4	0532  A7      	    AND A
 137: 1269+5+6	0533  C8      	    RET Z; RETURN Z=1 if reached END wizhout mismatch
 138: 1274+7	0534  BE      	    CP (HL)
 139: 1281+5+6	0535  C0      	    RET NZ; If not Match (z=0) exit
 140:     -	0536          	PARSE_CMD_CMP_STRING_START_MATCHED:
 141: 1286+7	0536  7E      	    LD A,(HL)
 142: 1293+4	0537  A7      	    AND A; String to compare reached end
 143: 1297+5+6	0538  C8      	    RET Z
 144:     -	0539          	PARSE_CMD_CMP_STRING_START_CONTINUE:
 145: 1302+6	0539  23      	    INC HL
 146: 1308+6	053A  13      	    INC DE
 147: 1314+10	053B  C33105  	    JP PARSE_CMD_CMP_STRING_START
 148:				    
 149:				;-------------------------------------------------------------
 150:				; commands routines
 151:				;-------------------------------------------------------------
 152:     -	053E          	CMD_HELP:
 153: 1324+10	053E  01CC06  	    LD BC,[MSG_CMD_HELP]
 154: 1334+17	0541  CD9A03  	    CALL CONSOLE_PRINTSTR
 155:				
 156: 1351+7	0544  3E0D    	    LD A,13
 157: 1358+11	0546  D311    	    out (IO_SIO0B_D),A
 158: 1369+17	0548  CDB803  	    call TX_EMP
 159: 1386+7	054B  3E0A    	    LD A,10
 160: 1393+11	054D  D311    	    out (IO_SIO0B_D),A
 161: 1404+17	054F  CDB803  	    call TX_EMP
 162: 1421+10	0552  C9      	    RET
 163:				
 164:     -	0553          	CMD_VERSION:
 165: 1431+10	0553  01B307  	    LD BC,[MSG_CMD_VER]
 166: 1441+17	0556  CD9A03  	    CALL CONSOLE_PRINTSTR
 167:				
 168: 1458+7	0559  3E0D    	    LD A,13
 169: 1465+11	055B  D311    	    out (IO_SIO0B_D),A
 170: 1476+17	055D  CDB803  	    call TX_EMP
 171: 1493+7	0560  3E0A    	    LD A,10
 172: 1500+11	0562  D311    	    out (IO_SIO0B_D),A
 173: 1511+17	0564  CDB803  	    call TX_EMP
 174: 1528+10	0567  C9      	    RET
 175:				
 176:     -	0568          	CMD_CLEAR:
 177: 1538+10	0568  01582B  	    LD BC,[MSG_CLEAR]
 178: 1548+17	056B  CD9A03  	    CALL CONSOLE_PRINTSTR
 179: 1565+10	056E  C9      	    RET
 180:				
 181:     -	056F          	CMD_HEXDUMP:
 182: 1575+10	056F  010940  	    LD BC,MEM_PROMPT_START + 4
 183: 1585+17	0572  CDD902  	    CALL DHEX_TO_BYTE
 184: 1602+4	0575  67      	    LD H,A
 185:				
 186: 1606+10	0576  010B40  	    LD BC,MEM_PROMPT_START + 6
 187: 1616+17	0579  CDD902  	    CALL DHEX_TO_BYTE
 188: 1633+7	057C  E6F0    	    AND 0xF0
 189: 1640+4	057E  6F      	    LD L,A
 190:				
 191: 1644+17	057F  CD4E02  	    CALL PRINT_HEXDUMP
 192: 1661+10	0582  C9      	    RET
 193:				
 194:     -	0583          	CMD_EXEC:
 195: 1671+10	0583  010B40  	    LD BC,MEM_PROMPT_START + 6
 196: 1681+17	0586  CDD902  	    CALL DHEX_TO_BYTE
 197: 1698+4	0589  67      	    LD H,A
 198:				
 199: 1702+10	058A  010D40  	    LD BC,MEM_PROMPT_START + 8
 200: 1712+17	058D  CDD902  	    CALL DHEX_TO_BYTE
 201: 1729+4	0590  6F      	    LD L,A
 202:				
 203: 1733+10	0591  31FF7F  	    LD SP,0x7FFF
 204: 1743+4	0594  E9      	    JP HL
 205:				
 206:     -	0595          	CMD_IOGET:
 207: 1747+10	0595  010C40  	    LD BC,MEM_PROMPT_START + 7
 208: 1757+17	0598  CDD902  	    CALL DHEX_TO_BYTE
 209: 1774+4	059B  4F      	    LD C, A
 210:				
 211: 1778+7	059C  3E0D    	    LD A,13
 212: 1785+11	059E  D311    	    out (IO_SIO0B_D),A
 213: 1796+17	05A0  CDB803  	    call TX_EMP
 214: 1813+7	05A3  3E0A    	    LD A,10
 215: 1820+11	05A5  D311    	    out (IO_SIO0B_D),A
 216: 1831+17	05A7  CDB803  	    call TX_EMP
 217:				
 218: 1848+12	05AA  ED78    	    IN A,(C)
 219: 1860+17	05AC  CD0202  	    CALL PRINT_A_HEX
 220: 1877+7	05AF  3E68    	    LD A,'h'
 221:				
 222: 1884+11	05B1  D311    	    out (IO_SIO0B_D),A
 223: 1895+17	05B3  CDB803  	    call TX_EMP
 224: 1912+7	05B6  3E0D    	    LD A,13
 225: 1919+11	05B8  D311    	    out (IO_SIO0B_D),A
 226: 1930+17	05BA  CDB803  	    call TX_EMP
 227: 1947+7	05BD  3E0A    	    LD A,10
 228: 1954+11	05BF  D311    	    out (IO_SIO0B_D),A
 229: 1965+17	05C1  CDB803  	    call TX_EMP
 230: 1982+10	05C4  C9      	    RET
 231:				
 232:     -	05C5          	CMD_IOSET:
 233: 1992+10	05C5  010C40  	    LD BC,MEM_PROMPT_START + 7
 234: 2002+17	05C8  CDD902  	    CALL DHEX_TO_BYTE
 235: 2019+4	05CB  67      	    LD H,A
 236:				
 237: 2023+10	05CC  010F40  	    LD BC,MEM_PROMPT_START + 10
 238: 2033+17	05CF  CDD902  	    CALL DHEX_TO_BYTE
 239:				
 240:				    ;; DEBUG START
 241: 2050+11	05D2  F5      	    PUSH AF
 242:				
 243: 2061+7	05D3  3E20    	    LD A,' '
 244: 2068+11	05D5  D311    	    out (IO_SIO0B_D),A
 245: 2079+17	05D7  CDB803  	    call TX_EMP
 246:				
 247: 2096+4	05DA  7C      	    LD A,H
 248: 2100+17	05DB  CD0202  	    CALL PRINT_A_HEX
 249:				
 250: 2117+10	05DE  F1      	    POP AF
 251:				    ;; DEBUG END
 252:				
 253: 2127+4	05DF  4C      	    LD C,H
 254: 2131+12	05E0  ED79    	    OUT (C),A
 255:				
 256: 2143+7	05E2  3E0D    	    LD A,13
 257: 2150+11	05E4  D311    	    out (IO_SIO0B_D),A
 258: 2161+17	05E6  CDB803  	    call TX_EMP
 259: 2178+7	05E9  3E0A    	    LD A,10
 260: 2185+11	05EB  D311    	    out (IO_SIO0B_D),A
 261: 2196+17	05ED  CDB803  	    call TX_EMP
 262: 2213+10	05F0  C9      	    RET
 263:				
 264:     -	05F1          	CMD_MSET:
 265: 2223+10	05F1  010B40  	    LD BC,MEM_PROMPT_START + 6
 266: 2233+17	05F4  CDD902  	    CALL DHEX_TO_BYTE
 267: 2250+4	05F7  67      	    LD H,A
 268:				
 269: 2254+10	05F8  010D40  	    LD BC,MEM_PROMPT_START + 8
 270: 2264+17	05FB  CDD902  	    CALL DHEX_TO_BYTE
 271: 2281+4	05FE  6F      	    LD L,A
 272:				
 273:				    
 274: 2285+10	05FF  011040  	    LD BC,MEM_PROMPT_START + 11
 275: 2295+17	0602  CDD902  	    CALL DHEX_TO_BYTE
 276:				    
 277: 2312+7	0605  77      	    LD (HL),A
 278:				
 279: 2319+7	0606  3E0D    	    LD A,13
 280: 2326+11	0608  D311    	    out (IO_SIO0B_D),A
 281: 2337+17	060A  CDB803  	    call TX_EMP
 282: 2354+7	060D  3E0A    	    LD A,10
 283: 2361+11	060F  D311    	    out (IO_SIO0B_D),A
 284: 2372+17	0611  CDB803  	    call TX_EMP
 285: 2389+10	0614  C9      	    RET
 286:				
 287:     -	0615          	CMD_MGET:
 288: 2399+10	0615  010B40  	    LD BC,MEM_PROMPT_START + 6
 289: 2409+17	0618  CDD902  	    CALL DHEX_TO_BYTE
 290: 2426+4	061B  67      	    LD H,A
 291:				
 292: 2430+10	061C  010D40  	    LD BC,MEM_PROMPT_START + 8
 293: 2440+17	061F  CDD902  	    CALL DHEX_TO_BYTE
 294: 2457+4	0622  6F      	    LD L,A
 295:				
 296: 2461+7	0623  3E0D    	    LD A,13
 297: 2468+11	0625  D311    	    out (IO_SIO0B_D),A
 298: 2479+17	0627  CDB803  	    call TX_EMP
 299: 2496+7	062A  3E0A    	    LD A,10
 300: 2503+11	062C  D311    	    out (IO_SIO0B_D),A
 301: 2514+17	062E  CDB803  	    call TX_EMP
 302: 2531+7	0631  7E      	    LD A,(HL)
 303: 2538+17	0632  CD0202  	    CALL PRINT_A_HEX
 304: 2555+7	0635  3E68    	    LD A,'h'
 305: 2562+11	0637  D311    	    out (IO_SIO0B_D),A
 306: 2573+17	0639  CDB803  	    call TX_EMP
 307: 2590+7	063C  3E0D    	    LD A,13
 308: 2597+11	063E  D311    	    out (IO_SIO0B_D),A
 309: 2608+17	0640  CDB803  	    call TX_EMP
 310: 2625+7	0643  3E0A    	    LD A,10
 311: 2632+11	0645  D311    	    out (IO_SIO0B_D),A
 312: 2643+17	0647  CDB803  	    call TX_EMP
 313: 2660+10	064A  C9      	    RET
 314:				
 315:     -	064B          	CMD_NOT_IMPLEMENTED:
 316: 2670+10	064B  013B08  	    LD BC,[MSG_NOT_IMPLEMENTED]
 317: 2680+17	064E  CD9A03  	    CALL CONSOLE_PRINTSTR
 318: 2697+10	0651  C9      	    RET
 319:				
 320:				;-------------------------------------------------------------
 321:				; commands strings
 322:				;-------------------------------------------------------------
 323:     -	0652          	MSG_SYS_VER:
 324:     -	0652  1B5B324A	    db 27, '[2J', 27, '[H'
	              1B5B48
 325:     -	0659  5A384320	    db 'Z8C Mk IV - A Z80 Homebrew Computer',13,10
	              4D6B2049
	              56202D20
	              41205A38
	              3020486F
	              6D656272
	              65772043
	              6F6D7075
	              7465720D
	              0A
 326:     -	067E  4D6F6E69	    db 'Monitor ROM Ver. 1.0 by Dennis Gunia (2022)',13,10
	              746F7220
	              524F4D20
	              5665722E
	              20312E30
	              20627920
	              44656E6E
	              69732047
	              756E6961
	              20283230
	              3232290D
	              0A
 327:     -	06AB  34386B20	    db '48k RAM - 4MHz Z80 CPU - Stack $',0
	              52414D20
	              2D20344D
	              487A205A
	              38302043
	              5055202D
	              20537461
	              636B2024
	              00
 328:				
 329:     -	06CC          	MSG_CMD_HELP:
 330:     -	06CC  0D0A    	    db 13,10
 331:     -	06CE  68642024	    db "hd $<addr>  mget $<addr>  mset $<addr> <val>",13,10
	              3C616464
	              723E2020
	              6D676574
	              20243C61
	              6464723E
	              20206D73
	              65742024
	              3C616464
	              723E203C
	              76616C3E
	              0D0A
 332:     -	06FC  696F6765	    db "ioget $<addr>  ioset $<addr> <val>",13,10
	              7420243C
	              61646472
	              3E202069
	              6F736574
	              20243C61
	              6464723E
	              203C7661
	              6C3E0D0A
 333:     -	0720  3F202065	    db "?  exec $<addr>  clr  ver",13,10
	              78656320
	              243C6164
	              64723E20
	              20636C72
	              20207665
	              720D0A
 334:     -	073B  646C6973	    db "dlist  dgo <dir>  dload <file> ($<addr>)",13,10
	              74202064
	              676F203C
	              6469723E
	              2020646C
	              6F616420
	              3C66696C
	              653E2028
	              243C6164
	              64723E29
	              0D0A
 335:     -	0765  64736176	    db "dsave <file> $<addr> [<len>,$<addr_end>]",13,10
	              65203C66
	              696C653E
	              20243C61
	              6464723E
	              205B3C6C
	              656E3E2C
	              243C6164
	              64725F65
	              6E643E5D
	              0D0A
 336:     -	078F  646D6F75	    db "dmount  dumount  drem <file>  dinfo"
	              6E742020
	              64756D6F
	              756E7420
	              20647265
	              6D203C66
	              696C653E
	              20206469
	              6E666F
 337:     -	07B2  00      	    db 0
 338:				
 339:     -	07B3          	MSG_CMD_VER:
 340:     -	07B3  0D0A    	    db 13,10
 341:     -	07B5  5A384320	    db "Z8C Monitor Programm",13,10
	              4D6F6E69
	              746F7220
	              50726F67
	              72616D6D
	              0D0A
 342:     -	07CB  524F4D20	    db "ROM Version 1.0 - Written by Dennis Gunia, 2022",13,10
	              56657273
	              696F6E20
	              312E3020
	              2D205772
	              69747465
	              6E206279
	              2044656E
	              6E697320
	              47756E69
	              612C2032
	              3032320D
	              0A
 343:     -	07FC  332E3638	    db "3.686411MHz CPU, 48K RAM System, John 3,16",13,10
	              36343131
	              4D487A20
	              4350552C
	              2034384B
	              2052414D
	              20537973
	              74656D2C
	              204A6F68
	              6E20332C
	              31360D0A
 344:     -	0828  7777772E	    db "www.dennisgunia.de"
	              64656E6E
	              69736775
	              6E69612E
	              6465
 345:     -	083A  00      	    db 0
 346:				
 347:     -	083B          	MSG_NOT_IMPLEMENTED:
 348:     -	083B  0D0A    	    db 13,10
 349:     -	083D  4E6F7420	    db "Not implemented yet",13,10
	              696D706C
	              656D656E
	              74656420
	              7965740D
	              0A
**** main.asm ****
  19:     -	0852  00      	    db 0
  20:				
  21:				; include subroutines
  22:				;.include "sub_soundtest.s"
  23:				
  24:     -	0853          	INT_VEC:
  25:     -	000C          	    org 0Ch
  26:     -	000C  4104    	    DEFW RX_CHA_AVAILABLE
  27:     -	000E          	    org 0Eh
  28:     -	000E  5001    	    DEFW SPEC_RX_CONDITON
  29:				    
  30:     -	0010          	init:
  31:     -	0000          	    org 0x0000
  32: 2707+10	0000  C30001  	    jp PROG_ROM_START
  33:				
  34:     -	0003          	init_led:
  35:     -	0100          	    org PROG_ROM_START
  36: 2717+7	0100  3E00    	    LD A,0x00
  37: 2724+11	0102  D320    	    OUT (IO_REG0),A
  38:				
  39:     -	0104          	init_console:
  40: 2735+17	0104  CDC703  	    CALL CONSOLE_INIT
  41:				
  42: 2752+7	0107  1608    	    LD	  D,0x08	; Select register #8
  43: 2759+7	0109  3E00    	    LD	  A,0x00	; Volume channel A 0
  44: 2766+17	010B  CD2704  	    CALL AY0_WRITE_REG
  45: 2783+7	010E  1609    	    LD	  D,0x09	; Select register #9
  46: 2790+7	0110  3E00    	    LD	  A,0x00	; Volume channel B 0
  47: 2797+17	0112  CD2704  	    CALL AY0_WRITE_REG
  48: 2814+7	0115  160A    	    LD	  D,0x0A	; Select register #10
  49: 2821+7	0117  3E00    	    LD	  A,0x00	; Volume channel C 0
  50: 2828+17	0119  CD2704  	    CALL AY0_WRITE_REG
  51:				    
  52:				
  53:				;INT_INI:
  54:				;    ld A,0
  55:				;    ld I,A  ;load I reg with zero
  56:				;    im 2    ;set int mode 2
  57:				;    ei      ;enable interupt
  58:				
  59: 2845+7	011C  3E00    	    LD A,0x00
  60: 2852+11	011E  D311    	    OUT (IO_SIO0B_D),A
  61: 2863+17	0120  CDB803  	    CALL TX_EMP
  62:				
  63: 2880+17	0123  CD3804  	    call A_RTS_ON
  64:				
  65:				    ; PRINT BANNER
  66: 2897+10	0126  015206  	    LD BC, [MSG_SYS_VER]
  67: 2907+17	0129  CD9A03  	    CALL CONSOLE_PRINTSTR
  68:				
  69: 2924+10	012C  31FF7F  	    LD SP,07FFFh
  70:				    ; Print SP Location
  71: 2934+20	012F  ED730040	    LD (0x4000),SP
  72: 2954+13	0133  3A0140  	    LD A,(0x4001)
  73: 2967+17	0136  CD0202  	    CALL PRINT_A_HEX
  74: 2984+13	0139  3A0040  	    LD A,(0x4000)
  75: 2997+17	013C  CD0202  	    CALL PRINT_A_HEX
  76:				
  77: 3014+7	013F  3E0D    	    LD A,13
  78: 3021+11	0141  D311    	    out (IO_SIO0B_D),A
  79: 3032+17	0143  CDB803  	    call TX_EMP
  80: 3049+7	0146  3E0A    	    LD A,10
  81: 3056+11	0148  D311    	    out (IO_SIO0B_D),A
  82: 3067+17	014A  CDB803  	    call TX_EMP
  83:				
  84: 3084+10	014D  C36501  	    JP CONSOLE_PROMPT
  85:				
  86:				
  87:				
  88:				
  89:     -	0150          	SPEC_RX_CONDITON:
  90:				    
  91: 3094+10	0150  C30000  	    jp 0000h
  92:				
  93:				
  94:     -	0153          	DELAY:
  95: 3104+15	0153  DDE5    	    PUSH IX
  96: 3119+11	0155  C5      	    PUSH BC
  97: 3130+14	0156  DD210040	    LD IX,0x4000
  98: 3144+10	015A  010100  	    LD BC,1
  99:     -	015D          	DELAY_LOOP:
 100: 3154+15	015D  DD09    	    ADD IX,BC
 101: 3169+7+5	015F  30FC    	    JR NC, DELAY_LOOP
 102: 3176+10	0161  C1      	    POP BC
 103: 3186+14	0162  DDE1    	    POP IX
 104: 3200+10	0164  C9      	    RET
 105:				
 106:				; Console Functions
 107:				
 108:				
 109:     -	0165          	CONSOLE_PROMPT:
 110:				    ;Console Prompt
 111: 3210+7	0165  3E0A    	    LD A, 10
 112: 3217+11	0167  D311    	    out (IO_SIO0B_D),A
 113: 3228+17	0169  CDB803  	    call TX_EMP
 114: 3245+7	016C  3E3F    	    LD A,'?'
 115: 3252+11	016E  D311    	    out (IO_SIO0B_D),A
 116: 3263+17	0170  CDB803  	    call TX_EMP
 117: 3280+7	0173  3E3E    	    LD A,'>'
 118: 3287+11	0175  D311    	    out (IO_SIO0B_D),A
 119: 3298+17	0177  CDB803  	    call TX_EMP
 120: 3315+7	017A  3E20    	    LD A,' '
 121: 3322+11	017C  D311    	    out (IO_SIO0B_D),A
 122: 3333+17	017E  CDB803  	    call TX_EMP
 123:				    ;LD A,"_"
 124:				    ;out (IO_SIO0B_D),A 
 125:				    ;call TX_EMP
 126:				
 127:				    ; Blinking Cursor
 128:				    ;LD IX,CMD_CRS_SPEED
 129:				    ;LD BC,1
 130:				    ;LD A,0
 131:				    ;LD (MEM_CURSOR_STATE),A
 132:				    ; SET PROMPT LENGTH TO 0
 133:				
 134:				    ;Enable Cursor
 135: 3350+7	0181  3E01    	    LD A,1
 136: 3357+17	0183  CD0704  	    CALL CONSOLE_CURSOR
 137:				
 138: 3374+7	0186  3E00    	    LD A,0
 139: 3381+13	0188  320340  	    LD (MEM_PROMPT_SIZE),A
 140:				
 141:     -	018B          	CONSOLE_PROMPT_LOOP:
 142:				    ; READ INPUT
 143:				    ; Delete Cursor if input Avail
 144:				    ;JP CONSOLE_PROMPT_LOOP_2
 145: 3394+17	018B  CDAD03  	    CALL CONSOLE_READ_CHAR
 146: 3411+4	018E  A7      	    AND A
 147: 3415+13	018F  320140  	    LD (MEM_LAST_CHAR),A
 148:				
 149: 3428+10	0192  CAFF01  	    JP Z, CONSOLE_PROMPT_LOOP_2
 150:				    ; if newline
 151: 3438+7	0195  160D    	    LD D, 13
 152: 3445+4	0197  BA      	    CP D
 153: 3449+7+5	0198  2019    	    JR NZ, CONSOLE_PROMPT_LOOP_1
 154:				    
 155:				    ;Add NULL termination
 156: 3456+10	019A  210540  	    LD HL,MEM_PROMPT_START
 157: 3466+7	019D  0600    	    LD B,0
 158: 3473+13	019F  3A0340  	    LD A,(MEM_PROMPT_SIZE)
 159: 3486+4	01A2  4F      	    LD C,A
 160: 3490+15	01A3  ED4A    	    ADC HL, BC
 161: 3505+7	01A5  3E00    	    LD A, 0x00
 162: 3512+7	01A7  77      	    LD (HL), A
 163:				
 164:				    ;Disable Cursor
 165: 3519+7	01A8  3E00    	    LD A,0
 166: 3526+17	01AA  CD0704  	    CALL CONSOLE_CURSOR
 167:				    ; Parse CMD
 168: 3543+17	01AD  CD0005  	    CALL PARSE_CMD
 169:				
 170: 3560+10	01B0  C36501  	    JP CONSOLE_PROMPT
 171:				
 172:     -	01B3          	CONSOLE_PROMPT_LOOP_1: ; Not new line
 173:				   
 174: 3570+13	01B3  3A0140  	    LD A,(MEM_LAST_CHAR)
 175: 3583+7	01B6  167F    	    LD D, 0x7F
 176: 3590+4	01B8  BA      	    CP D
 177: 3594+7+5	01B9  2023    	    JR NZ, CONSOLE_PROMPT_LOOP_1B
 178:				
 179:				    ; if Backspace
 180: 3601+13	01BB  3A0340  	    LD A,(MEM_PROMPT_SIZE); test if 0
 181: 3614+4	01BE  A7      	    AND A
 182: 3618+10	01BF  CAFF01  	    JP Z,CONSOLE_PROMPT_LOOP_2; no action if buffer empty
 183:				
 184:				    ;EXEC this if backspace (08d)
 185: 3628+4	01C2  3D      	    DEC A
 186: 3632+13	01C3  320340  	    LD (MEM_PROMPT_SIZE),A  ; store size to mem
 187:				
 188:				    ;LD A, 0x7F
 189:				    ;out (IO_SIO0B_D),A
 190:				    ;call TX_EMP
 191:				
 192: 3645+7	01C6  3E08    	    LD A,0x08
 193: 3652+11	01C8  D311    	    out (IO_SIO0B_D),A
 194: 3663+17	01CA  CDB803  	    call TX_EMP
 195: 3680+7	01CD  3E20    	    LD A,0x20
 196: 3687+11	01CF  D311    	    out (IO_SIO0B_D),A
 197: 3698+17	01D1  CDB803  	    call TX_EMP
 198: 3715+7	01D4  3E08    	    LD A,0x08
 199: 3722+11	01D6  D311    	    out (IO_SIO0B_D),A
 200: 3733+17	01D8  CDB803  	    call TX_EMP
 201:				    ;LD A," "
 202:				    ;out (IO_SIO0B_D),A 
 203:				    ;call TX_EMP
 204:				
 205: 3750+10	01DB  C3FF01  	    JP CONSOLE_PROMPT_LOOP_2
 206:				
 207:     -	01DE          	CONSOLE_PROMPT_LOOP_1B: ;IF not Backspace 
 208:				
 209:				
 210:				    ; CHECK if Controll Sequence
 211:				    
 212:				
 213:				    ; Continue
 214:				
 215: 3760+13	01DE  3A0340  	    LD A,(MEM_PROMPT_SIZE)
 216: 3773+4	01E1  3C      	    INC A
 217: 3777+13	01E2  320340  	    LD (MEM_PROMPT_SIZE),A  ; store size to mem
 218:				
 219:				    ;LD A, 0x7F
 220:				    ;out (IO_SIO0B_D),A
 221:				    ;call TX_EMP
 222:				
 223: 3790+13	01E5  3A0140  	    LD A,(MEM_LAST_CHAR)
 224: 3803+11	01E8  D311    	    out (IO_SIO0B_D),A
 225: 3814+17	01EA  CDB803  	    call TX_EMP
 226:				
 227:				    ;LD A," "
 228:				    ;out (IO_SIO0B_D),A 
 229:				    ;call TX_EMP
 230:				
 231:				    ;APPEND CHAR TO BUFFER
 232: 3831+11	01ED  C5      	    PUSH BC
 233: 3842+10	01EE  210540  	    LD HL,MEM_PROMPT_START
 234: 3852+7	01F1  0600    	    LD B,0
 235: 3859+13	01F3  3A0340  	    LD A,(MEM_PROMPT_SIZE)
 236: 3872+4	01F6  3D      	    DEC A
 237: 3876+4	01F7  4F      	    LD C,A
 238: 3880+15	01F8  ED4A    	    ADC HL, BC
 239: 3895+13	01FA  3A0140  	    LD A, (MEM_LAST_CHAR)
 240: 3908+7	01FD  77      	    LD (HL), A
 241: 3915+10	01FE  C1      	    POP BC
 242:				    
 243:				
 244:				
 245:     -	01FF          	CONSOLE_PROMPT_LOOP_2:
 246:				    ; Print Cursor
 247:				    ;ADD IX,BC
 248:				    ;JR NC, CONSOLE_PROMPT_LOOP
 249:				    ; Toggle cycle
 250:				    ;LD A,(MEM_CURSOR_STATE)
 251:				    ;XOR 1
 252:				    ;JR Z,CONSOLE_PROMPT_LOOP_3
 253:				    ;LD (MEM_CURSOR_STATE),A
 254:				
 255:				    ;LD A, 0x7F
 256:				    ;out (IO_SIO0B_D),A
 257:				    ;call TX_EMP
 258:				    ;LD A,'_'
 259:				    ;out (IO_SIO0B_D),A
 260:				    ;call TX_EMP
 261:				    ;LD IX,CMD_CRS_SPEED
 262:				    ;JP CONSOLE_PROMPT_LOOP
 263:				
 264:     -	01FF          	CONSOLE_PROMPT_LOOP_3:
 265:				    ;LD (MEM_CURSOR_STATE),A
 266:				    ;LD A, 0x7F
 267:				    ;out (IO_SIO0B_D),A
 268:				    ;call TX_EMP
 269:				    ;LD A,' '
 270:				    ;out (IO_SIO0B_D),A
 271:				    ;call TX_EMP
 272:				    ;LD IX,CMD_CRS_SPEED
 273: 3925+10	01FF  C38B01  	    JP CONSOLE_PROMPT_LOOP
 274:				
 275:				; A Contains Byte
 276:     -	0202          	PRINT_A_HEX:
 277: 3935+11	0202  C5      	    PUSH BC
 278: 3946+11	0203  D5      	    PUSH DE
 279: 3957+17	0204  CD8003  	    CALL STRCONV_BYTES_TO_HEX   ; New Kernel Call
 280: 3974+4	0207  78      	    LD A,B
 281: 3978+11	0208  D311    	    out (IO_SIO0B_D),A
 282: 3989+17	020A  CDB803  	    call TX_EMP
 283: 4006+4	020D  79      	    LD A,C
 284: 4010+11	020E  D311    	    out (IO_SIO0B_D),A
 285: 4021+17	0210  CDB803  	    call TX_EMP
 286: 4038+10	0213  D1      	    POP DE
 287: 4048+10	0214  C1      	    POP BC
 288: 4058+10	0215  C9      	    RET
 289:				
 290:     -	0216          	MSG_HEXDUMP_HEADER:
 291:     -	0216  0D0A4241	    db 13,10,'BASE   0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F',0
	              53452020
	              20302020
	              31202032
	              20203320
	              20342020
	              35202036
	              20203720
	              20382020
	              39202041
	              20204220
	              20432020
	              44202045
	              20204600
 292:				
 293:				; HL contains Start ADDR
 294:     -	024E          	PRINT_HEXDUMP:
 295: 4068+11	024E  F5      	    PUSH AF
 296: 4079+11	024F  C5      	    PUSH BC
 297: 4090+11	0250  E5      	    PUSH HL
 298:				    ; PRINT Header
 299: 4101+10	0251  011602  	    LD BC, [MSG_HEXDUMP_HEADER]
 300: 4111+17	0254  CD9A03  	    CALL CONSOLE_PRINTSTR
 301: 4128+7	0257  0E00    	    LD C,0  ; Line Counter
 302:				
 303:     -	0259          	PRINT_HEXDUMP_SOL: ; Start of Line
 304: 4135+7	0259  3E0D    	    LD A,13
 305: 4142+11	025B  D311    	    out (IO_SIO0B_D),A
 306: 4153+17	025D  CDB803  	    call TX_EMP
 307: 4170+7	0260  3E0A    	    LD A,10
 308: 4177+11	0262  D311    	    out (IO_SIO0B_D),A
 309: 4188+17	0264  CDB803  	    call TX_EMP
 310:				
 311: 4205+4	0267  7C      	    LD A,H
 312: 4209+17	0268  CD0202  	    CALL PRINT_A_HEX
 313: 4226+4	026B  7D      	    LD A,L
 314: 4230+17	026C  CD0202  	    CALL PRINT_A_HEX
 315:				
 316: 4247+7	026F  3E68    	    LD A, 'h'
 317: 4254+11	0271  D311    	    out (IO_SIO0B_D),A
 318: 4265+17	0273  CDB803  	    call TX_EMP
 319: 4282+7	0276  3E3A    	    LD A, ':'
 320: 4289+11	0278  D311    	    out (IO_SIO0B_D),A
 321: 4300+17	027A  CDB803  	    call TX_EMP
 322: 4317+7	027D  3E20    	    LD A, ' '
 323: 4324+11	027F  D311    	    out (IO_SIO0B_D),A
 324: 4335+17	0281  CDB803  	    call TX_EMP
 325:				
 326: 4352+7	0284  0600    	    LD B,0  ; Column Counter
 327:     -	0286          	PRINT_HEXDUMP_LOOP1:
 328: 4359+7	0286  7E      	    LD A,(HL)
 329: 4366+17	0287  CD0202  	    CALL PRINT_A_HEX
 330: 4383+7	028A  3E20    	    LD A, ' '
 331: 4390+11	028C  D311    	    out (IO_SIO0B_D),A
 332: 4401+17	028E  CDB803  	    call TX_EMP
 333:				
 334: 4418+4	0291  04      	    INC B
 335: 4422+6	0292  23      	    INC HL
 336:				    ; Check If 16 columns
 337: 4428+4	0293  78      	    LD A,B
 338: 4432+7	0294  E610    	    AND 0x10
 339: 4439+10	0296  CA8602  	    JP Z, PRINT_HEXDUMP_LOOP1; IF less than 8
 340:				
 341: 4449+4	0299  0C      	    INC C
 342: 4453+4	029A  79      	    LD A,C
 343: 4457+7	029B  E610    	    AND 0x10
 344:				
 345: 4464+10	029D  CA5902  	    JP Z, PRINT_HEXDUMP_SOL; IF less than 8
 346:				
 347: 4474+7	02A0  3E0D    	    LD A,13
 348: 4481+11	02A2  D311    	    out (IO_SIO0B_D),A
 349: 4492+17	02A4  CDB803  	    call TX_EMP
 350: 4509+7	02A7  3E0A    	    LD A,10
 351: 4516+11	02A9  D311    	    out (IO_SIO0B_D),A
 352: 4527+17	02AB  CDB803  	    call TX_EMP
 353:				
 354: 4544+10	02AE  E1      	    POP HL
 355: 4554+10	02AF  C1      	    POP BC
 356: 4564+10	02B0  F1      	    POP AF
 357: 4574+10	02B1  C9      	    RET
 358:				
 359:				
 360:				; HL = String to compare
 361:				; DE = String Pattern
 362:     -	02B2          	CMP_STRING_START:
 363: 4584+7	02B2  1A      	    LD A,(DE)
 364: 4591+4	02B3  A7      	    AND A
 365: 4595+5+6	02B4  C8      	    RET Z; RETURN Z=1 if reached END wizhout mismatch
 366: 4600+7	02B5  BE      	    CP (HL)
 367: 4607+5+6	02B6  C0      	    RET NZ; If not Match (z=0) exit
 368:     -	02B7          	CMP_STRING_START_MATCHED:
 369: 4612+7	02B7  7E      	    LD A,(HL)
 370: 4619+4	02B8  A7      	    AND A; String to compare reached end
 371: 4623+5+6	02B9  C8      	    RET Z
 372:     -	02BA          	CMP_STRING_START_CONTINUE:
 373: 4628+6	02BA  23      	    INC HL
 374: 4634+6	02BB  13      	    INC DE
 375: 4640+10	02BC  C3B202  	    JP CMP_STRING_START
 376:				    
 377:				; REG A Contains CHAR-Low
 378:				; If failed, Carry is set
 379:     -	02BF          	HEX_TO_BIN:
 380: 4650+7	02BF  D630    	    SUB 48 ; 0 is 0
 381: 4657+10	02C1  EAD402  	    JP PE, HEX_TO_INVALID_2; to low (SUB overflow)
 382: 4667+7	02C4  FE0A    	    CP 10 ; Value is between 0 and 9
 383: 4674+7+5	02C6  3805    	    JR C, HEX_TO_BIN_2
 384: 4681+7	02C8  D607    	    SUB 7
 385: 4688+10	02CA  EAD402  	    JP PE, HEX_TO_INVALID_2; to low (SUB overflow)
 386:     -	02CD          	HEX_TO_BIN_2:
 387: 4698+7	02CD  FE10    	    CP 16
 388: 4705+7+5	02CF  3003    	    JR NC, HEX_TO_INVALID_2; if bigger than 15-> fail
 389: 4712+7	02D1  E60F    	    AND 0x0F
 390: 4719+10	02D3  C9      	    RET
 391:     -	02D4          	HEX_TO_INVALID_2:
 392: 4729+7	02D4  3E01    	    LD A,1
 393: 4736+7	02D6  C6FF    	    ADD 255
 394: 4743+10	02D8  C9      	    RET
 395:				
 396:				; BC Contains Address to string
 397:				; E is 0xFF if error
 398:				; E is 0x00 if okay
 399:     -	02D9          	DHEX_TO_BYTE:
 400: 4753+11	02D9  C5      	    PUSH BC
 401:				    ; Load First Byte
 402: 4764+7	02DA  0A      	    LD A,(BC)
 403: 4771+17	02DB  CDBF02  	    CALL HEX_TO_BIN
 404:				    ;JP C,DHEX_TO_BYTE_FAILED
 405: 4788+8	02DE  CB27    	    SLA A
 406: 4796+8	02E0  CB27    	    SLA A
 407: 4804+8	02E2  CB27    	    SLA A
 408: 4812+8	02E4  CB27    	    SLA A
 409: 4820+4	02E6  57      	    LD D,A
 410:				
 411: 4824+6	02E7  03      	    INC BC
 412: 4830+7	02E8  0A      	    LD A,(BC)
 413: 4837+17	02E9  CDBF02  	    CALL HEX_TO_BIN
 414:				    ;JP C,DHEX_TO_BYTE_FAILED
 415: 4854+4	02EC  B2      	    OR D ; Merge
 416:				    
 417: 4858+10	02ED  C1      	    POP BC
 418: 4868+7	02EE  1E00    	    LD E,0x00
 419: 4875+10	02F0  C9      	    RET
 420:     -	02F1          	DHEX_TO_BYTE_FAILED:
 421: 4885+7	02F1  1EFF    	    LD E,0xFF
 422:				    ;LD A,0x00
 423: 4892+10	02F3  C1      	    POP BC
 424: 4902+10	02F4  C9      	    RET
 425:				
 426:				.include "ascii.s"
**** functions/ascii.s ****
   1:				; ASCII table TMS9918A text mode example program
   2:				; by J.B. Langston
   3:				
   4:     -	0020          	LineLen:                equ 32
   5:     -	00CD          	DoubleHorizontal:       equ 205
   6:     -	00BA          	DoubleVertical:         equ 186
   7:     -	00C9          	DoubleTopLeft:          equ 201
   8:     -	00BB          	DoubleTopRight:         equ 187
   9:     -	00C8          	DoubleBottomLeft:       equ 200
  10:     -	00BC          	DoubleBottomRight:      equ 188
  11:				
  12:     -	02F5          	TMS:
  13:     -	1000          	    org     0x1000
  14: 4912+17	1000  CD0020  	    call    setup_vars
  15:				
  16:				;    call    TmsSetWait                      ; set VDP wait loop based on clock multiple
  17:				
  18:				;    call    TmsProbe                        ; find what port TMS9918A listens on
  19:				;    jp      z, NoTms
  20:				    ;jp      CONSOLE_PROMPT
  21: 4929+10	1003  21EF22  	    ld      hl, TmsFont                     ; pointer to font
  22: 4939+17	1006  CD4621  	    call    TmsTextMode                     ; initialize text mode
  23:				
  24: 4956+7	1009  3E04    	    ld      a, TmsDarkBlue                  ; set colors
  25: 4963+17	100B  CDAB20  	    call    TmsBackground
  26: 4980+7	100E  3E0F    	    ld      a, TmsWhite
  27: 4987+17	1010  CD5C22  	    call    TmsTextColor
  28:				
  29: 5004+17	1013  CD4810  	    call    TextBorder
  30:				
  31: 5021+7	1016  3E0B    	    ld      a, 11                           ; put title at 11, 1
  32: 5028+7	1018  1E02    	    ld      e, 2
  33: 5035+17	101A  CD6F22  	    call    TmsTextPos
  34: 5052+10	101D  21EF2A  	    ld      hl, TitleMessage                ; output title
  35: 5062+17	1020  CD8622  	    call    TmsStrOut
  36:				
  37: 5079+7	1023  3E00    	    ld      a, 0                            ; start at character 0
  38: 5086+7	1025  0620    	    ld      b, LineLen                      ; 32 chars per line
  39: 5093+7	1027  0E06    	    ld      c, 6                            ; start at line 6
  40: 5100+11	1029  F5      	    push    af                              ; save current character
  41:     -	102A          	NextLine:
  42: 5111+7	102A  3E04    	    ld      a, 0+(40-LineLen)/2             ; center text
  43: 5118+4	102C  59      	    ld      e, c                            ; on current line
  44: 5122+17	102D  CD6F22  	    call    TmsTextPos
  45: 5139+10	1030  F1      	    pop     af                              ; get current character
  46:     -	1031          	NextChar:
  47: 5149+17	1031  CD8F20  	    call    TmsRamOut
  48: 5166+4	1034  3C      	    inc     a                               ; BorderLoop character
  49: 5170+10	1035  CA4510  	    jp      z, Exit
  50: 5180+4	1038  B8      	    cp      b                               ; time for a new line?
  51: 5184+10	1039  C23110  	    jp      nz, NextChar                    ; if not, output the BorderLoop character
  52: 5194+11	103C  F5      	    push    af                              ; if so, save the BorderLoop character
  53: 5205+7	103D  C620    	    add     a, LineLen                      ; 32 characters on the BorderLoop line
  54: 5212+4	103F  47      	    ld      b, a
  55: 5216+4	1040  0C      	    inc     c                               ; skip two lines
  56: 5220+4	1041  0C      	    inc     c
  57: 5224+10	1042  C32A10  	    jp      NextLine                        ; do the BorderLoop line
  58:				
  59:     -	1045          	Exit:
  60: 5234+10	1045  C30001  	    jp      0x0100
  61:				
  62:     -	1048          	TextBorder:
  63: 5244+7	1048  3E00    	    ld      a, 0                            ; start at upper left
  64: 5251+7	104A  1E00    	    ld      e, 0
  65: 5258+17	104C  CD6F22  	    call    TmsTextPos
  66: 5275+7	104F  3EC9    	    ld      a, DoubleTopLeft                ; output corner
  67: 5282+17	1051  CD8F20  	    call    TmsChrOut
  68: 5299+7	1054  0626    	    ld      b, 38                           ; output top border
  69: 5306+7	1056  3ECD    	    ld      a, DoubleHorizontal
  70: 5313+17	1058  CD9122  	    call    TmsRepeat
  71: 5330+7	105B  3EBB    	    ld      a, DoubleTopRight               ; output corner
  72: 5337+17	105D  CD8F20  	    call    TmsChrOut
  73: 5354+7	1060  0E16    	    ld      c, 22                           ; output left/right borders for 22 lines
  74:     -	1062          	BorderLoop:
  75: 5361+7	1062  3EBA    	    ld      a, DoubleVertical               ; vertical border
  76: 5368+17	1064  CD8F20  	    call    TmsChrOut
  77: 5385+7	1067  3E20    	    ld      a, ' '                          ; space
  78: 5392+7	1069  0626    	    ld      b, 38
  79: 5399+17	106B  CD9122  	    call    TmsRepeat
  80: 5416+7	106E  3EBA    	    ld      a, DoubleVertical               ; vertical border
  81: 5423+17	1070  CD8F20  	    call    TmsChrOut
  82: 5440+4	1073  0D      	    dec     c
  83: 5444+7+5	1074  20EC    	    jr      nz, BorderLoop
  84: 5451+7	1076  3EC8    	    ld      a, DoubleBottomLeft             ; bottom right
  85: 5458+17	1078  CD8F20  	    call    TmsChrOut
  86: 5475+7	107B  3ECD    	    ld      a, DoubleHorizontal
  87: 5482+7	107D  0626    	    ld      b, 38
  88: 5489+17	107F  CD9122  	    call    TmsRepeat
  89: 5506+7	1082  3EBC    	    ld      a, DoubleBottomRight
  90: 5513+17	1084  CD8F20  	    call    TmsChrOut
  91: 5530+10	1087  C9      	    ret
  92:				
  93:				
  94:     -	1088          	TmsSubs:
  95:				    .include "tms.s"                       ; TMS graphics routines
**** functions/tms.s ****
   1:				; TMS9918A graphics subroutines
   2:				; Copyright 2018-2020 J.B. Langston
   3:				;
   4:				; Permission is hereby granted, free of charge, to any person obtaining a 
   5:				; copy of this software and associated documentation files (the "Software"), 
   6:				; to deal in the Software without restriction, including without limitation 
   7:				; the rights to use, copy, modify, merge, publish, distribute, sublicense, 
   8:				; and/or sell copies of the Software, and to permit persons to whom the 
   9:				; Software is furnished to do so, subject to the following conditions:
  10:				; 
  11:				; The above copyright notice and this permission notice shall be included in
  12:				; all copies or substantial portions of the Software.
  13:				; 
  14:				; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  15:				; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
  16:				; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  17:				; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
  18:				; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
  19:				; FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
  20:				; DEALINGS IN THE SOFTWARE.
  21:				
  22:				; VDP Programmer's Guide: http://map.grauw.nl/resources/video/ti-vdp-programmers-guide.pdf
  23:				
  24:     -	E400          	     org 0xE400
  25:				; ---------------------------------------------------------------------------
  26:				; configuration parameters; can be changed at runtime
  27:     -	E400          	TmsPort:
  28:     -	E400  80      	        defb    0x80            ; port for TMS vram (reg is 1 higher)
  29:     -	E401          	TmsWait:
  30:     -	E401  1F      	        defb    31              ; iterations to wait after ram access
  31:     -	E402          	TmsMode:
  32:     -	E402  0000    	        defw    0               ; mode registers
  33:     -	E404          	TmsNameAddr:
  34:     -	E404  0038    	        defw    3800h           ; name table address (multiples of 400H)
  35:     -	E406          	TmsColorAddr:
  36:     -	E406  0020    	        defw    2000h           ; color table address (multiples of 40H)
  37:     -	E408          	TmsPatternAddr:
  38:     -	E408  0000    	        defw    0               ; pattern table (multiples of 800H)
  39:     -	E40A          	TmsSpritePatternAddr:
  40:     -	E40A  0018    	        defw    1800h           ; sprite attribute table (multiples of 80H)
  41:     -	E40C          	TmsSpriteAttrAddr:
  42:     -	E40C  C03B    	        defw    3bc0h           ; sprite pattern table (multiples of 800H)
  43:     -	E40E          	TmsScreenColors:
  44:     -	E40E  00      	        defb    0               ; background (low nybble), text color (high nybble)
  45:				; ---------------------------------------------------------------------------
  46:				; register constants
  47:     -	2000          	    org 0x2000
  48:     -	2000          	setup_vars:
  49:				    
  50: 5540+7	2000  3E80    	    ld a,0x80
  51: 5547+13	2002  3200E4  	    ld (TmsPort),a
  52:				
  53: 5560+7	2005  3E01    	    ld a,1
  54: 5567+13	2007  3201E4  	    ld (TmsWait),a
  55:				
  56: 5580+7	200A  3E00    	    ld a,0
  57: 5587+13	200C  3202E4  	    ld (TmsMode),a
  58: 5600+7	200F  3E00    	    ld a,0
  59: 5607+13	2011  3203E4  	    ld (TmsMode+1),a
  60:				
  61: 5620+7	2014  3E00    	    ld a,0
  62: 5627+13	2016  3204E4  	    ld (TmsNameAddr),a
  63: 5640+7	2019  3E38    	    ld a,38h
  64: 5647+13	201B  3205E4  	    ld (TmsNameAddr+1),a
  65:				
  66: 5660+7	201E  3E00    	    ld a,0
  67: 5667+13	2020  3208E4  	    ld (TmsPatternAddr),a
  68: 5680+7	2023  3E00    	    ld a,0
  69: 5687+13	2025  3209E4  	    ld (TmsPatternAddr+1),a
  70:				
  71: 5700+7	2028  3E00    	    ld a,0
  72: 5707+13	202A  3206E4  	    ld (TmsColorAddr),a
  73: 5720+7	202D  3E20    	    ld a,20h
  74: 5727+13	202F  3207E4  	    ld (TmsColorAddr+1),a
  75:				
  76:				
  77: 5740+7	2032  3E00    	    ld a,0
  78: 5747+13	2034  320AE4  	    ld (TmsSpritePatternAddr),a
  79: 5760+7	2037  3E18    	    ld a,0x18
  80: 5767+13	2039  320BE4  	    ld (TmsSpritePatternAddr+1),a
  81:				
  82:				
  83: 5780+7	203C  3EC0    	    ld a,0xc0
  84: 5787+13	203E  320CE4  	    ld (TmsSpriteAttrAddr),a
  85: 5800+7	2041  3E3B    	    ld a,0x3b
  86: 5807+13	2043  320DE4  	    ld (TmsSpriteAttrAddr+1),a
  87:				
  88: 5820+10	2046  C9      	    ret
  89:				
  90:     -	0040          	TmsWriteBit:            equ 40h                 ; bit to indicate memory write
  91:				
  92:				; Registers
  93:     -	0080          	TmsCtrl0Reg:            equ 80h
  94:     -	0081          	TmsCtrl1Reg:            equ 81h
  95:     -	0082          	TmsNameReg:             equ 82h
  96:     -	0083          	TmsColorTableReg:       equ 83h
  97:     -	0084          	TmsPatternReg:          equ 84h
  98:     -	0085          	TmsSpriteAttrReg:       equ 85h
  99:     -	0086          	TmsSpritePatternReg:    equ 86h
 100:     -	0087          	TmsColorReg:            equ 87h
 101:				
 102:				; Control Register Bits
 103:     -	0200          	TmsM3:                  equ 200h
 104:     -	0100          	TmsExtVideo:            equ 100h
 105:     -	0080          	Tms16k:                 equ 80h
 106:     -	0040          	TmsDisplayEnable:       equ 40h
 107:     -	0020          	TmsIntEnableBit:        equ 20h
 108:     -	0010          	TmsM1:                  equ 10h
 109:     -	0008          	TmsM2:                  equ 8
 110:     -	0002          	TmsSprite32:            equ 2
 111:     -	0001          	TmsSpriteMag:           equ 1
 112:				
 113:				; ---------------------------------------------------------------------------
 114:				; table lengths
 115:				
 116:     -	0300          	TmsTileNameLen:         equ 300h
 117:     -	03C0          	TmsTextNameLen:         equ 3c0h
 118:				
 119:     -	0020          	TmsTileColorLen:        equ 20h
 120:     -	0800          	TmsBitmapColorLen:      equ 800h
 121:				
 122:     -	0800          	TmsTilePatternLen:      equ 800h
 123:     -	0800          	TmsTextPatternLen:      equ 800h
 124:     -	0600          	TmsMulticolorPatternLen: equ 600h
 125:     -	1800          	TmsBitmapPatternLen:    equ 1800h
 126:				
 127:				; ---------------------------------------------------------------------------
 128:				; color constants
 129:				
 130:     -	0000          	TmsTransparent:         equ 0
 131:     -	0001          	TmsBlack:               equ 1
 132:     -	0002          	TmsMediumGreen:         equ 2
 133:     -	0003          	TmsLightGreen:          equ 3
 134:     -	0004          	TmsDarkBlue:            equ 4
 135:     -	0005          	TmsLightBlue:           equ 5
 136:     -	0006          	TmsDarkRed:             equ 6
 137:     -	0007          	TmsCyan:                equ 7
 138:     -	0008          	TmsMediumRed:           equ 8
 139:     -	0009          	TmsLightRed:            equ 9
 140:     -	000A          	TmsDarkYellow:          equ 0ah
 141:     -	000B          	TmsLightYellow:         equ 0bh
 142:     -	000C          	TmsDarkGreen:           equ 0ch
 143:     -	000D          	TmsMagenta:             equ 0dh
 144:     -	000E          	TmsGray:                equ 0eh
 145:     -	000F          	TmsWhite:               equ 0fh
 146:				
 147:				; ---------------------------------------------------------------------------
 148:				; port I/O routines
 149:				
 150:				; These routines access the ports configured in TmsPort.
 151:				
 152:				; These memory locations can be set at runtime to support different hardware
 153:				; configurations from the same binary. TmsProbe automatically detects the
 154:				; TMS9918A on common ports.
 155:				
 156:				; The TMS9918A RAM must not be accessed more than once every 8 us or display 
 157:				; corruption may occur.  During vblank and with the display disabled, 
 158:				; accesses can be 2 us apart, but we will always use 8 us minimum delay.
 159:				
 160:				; TmsRamIn/TmsRamOut include a configurable delay loop, which waits for the
 161:				; configured iterations between VRAM writes to work properly with faster CPUs
 162:				
 163:				; Minimum time to execute each procedure call:
 164:				; Z80: 88 cycles, 8.8 us @ 10 MHz
 165:				; Z180: 80 cycles, 8.64 us @ 9.216 MHz, 4.32 us @ 18.432, 2.16 us @ 36.864
 166:				;
 167:				; Additional delay per djnz iteration:
 168:				; Z80: 8 cycles * (iterations - 1)
 169:				;       0.8 us @ 10 MHz
 170:				; Z180: 7 cycles * (iterations - 1)
 171:				;       0.756 us @ 9.216 MHz, 0.378 us @ 18.432, 0.189 us @ 36.864
 172:				
 173:				; Delay loop iterations required for different CPU speeds:
 174:				; Z80 @ 10 MHz or less: 1
 175:				; Z180 @ 9.216 MHz or less: 1
 176:				; Z180 @ 18.432 MHz: 10
 177:				; Z180 @ 36.864 MHz: 31
 178:     -	2047  010A1F  	TmsWaits:       defb 1, 10, 31          ; wait iterations to add for different CPU speeds
 179:				
 180:				; set up wait time based on clock multiplier in E
 181:     -	204A          	TmsSetWait:
 182: 5830+7	204A  3E01    	        ld a,1
 183: 5837+13	204C  3201E4  	        ld      (TmsWait), a
 184: 5850+10	204F  C9      	        ret
 185:				
 186:				; try to find TMS9918A on common ports
 187:     -	2050          	TmsProbe:
 188: 5860+10	2050  217420  	        ld      hl, TmsPorts
 189: 5870+7	2053  0603    	        ld      b, TmsNumPorts
 190:     -	2055          	TmsProbeNext:       
 191: 5877+7	2055  7E      	        ld      a, (hl)
 192: 5884+13	2056  3200E4  	        ld      (TmsPort), a
 193: 5897+17	2059  CD8520  	        call    TmsRegIn                ; clear vsync bit
 194: 5914+17	205C  CD8520  	        call    TmsRegIn                ; check it again
 195: 5931+10	205F  FA6F20  	        jp      m, TmsProbeFailed       ; if still set, not a TMS9918A
 196: 5941+10	2062  11FFFF  	        ld      de, 0ffffh              ; long enough for another vsync
 197:     -	2065          	TmsProbeWait:
 198: 5951+17	2065  CD8520  	        call    TmsRegIn                ; check vsync bit again
 199: 5968+5+6	2068  F8      	        ret     m                       ; if set, it's a TMS9918A (and Z is clear)
 200: 5973+6	2069  1B      	        dec     de                      ; otherwise, keep waiting
 201: 5979+4	206A  7B      	        ld      a, e
 202: 5983+4	206B  B2      	        or      d
 203: 5987+10	206C  C26520  	        jp      nz, TmsProbeWait
 204:     -	206F          	TmsProbeFailed:
 205: 5997+6	206F  23      	        inc     hl                      ; if still clear after this long, try next port
 206: 6003+8+5	2070  10E3    	        djnz    TmsProbeNext
 207: 6011+4	2072  AF      	        xor     a                       ; set Z if we ran out of ports to check
 208: 6015+10	2073  C9      	        ret
 209:				
 210:     -	2074          	TmsPorts:                               ; List of ports to probe:
 211:     -	2074  80      	        defb 0x80                       ; ColecoVision / SG-1000
 212:     -	2075  98      	        defb 98h                        ; MSX
 213:     -	2076  10      	        defb 10h                        ; Sord M5 (conflicts with z80ctrl SIO port)
 214:				        ;defb 8                         ; Tatung Einstein (conflicts with z80ctrl drive ports)
 215:				        ;defb 1                         ; MTX (not supported by TMS9918A video card)
 216:				        ; add additional ports to check here
 217:     -	0003          	TmsNumPorts:    equ $ - TmsPorts
 218:				
 219:				; set a single register value
 220:				;       A = register value
 221:				;       E = register to set
 222:     -	2077          	TmsSetReg:
 223: 6025+17	2077  CD7B20  	        call    TmsRegOut
 224: 6042+4	207A  7B      	        ld      a, e
 225:				        ; fallthrough to TmsRegOut
 226:				
 227:				; write to configured register port
 228:				; parameters:
 229:				;       A = value to write
 230:     -	207B          	TmsRegOut:
 231: 6046+11	207B  C5      	        push    bc
 232: 6057+20	207C  ED4B00E4	        ld      bc, (TmsPort)
 233: 6077+4	2080  0C      	        inc     c
 234: 6081+12	2081  ED79    	        out     (c), a
 235: 6093+10	2083  C1      	        pop     bc
 236: 6103+10	2084  C9      	        ret
 237:				
 238:				; read from configured register port
 239:				; returns:
 240:				;       A = value read
 241:     -	2085          	TmsRegIn:
 242: 6113+11	2085  C5      	        push    bc
 243: 6124+20	2086  ED4B00E4	        ld      bc, (TmsPort)
 244: 6144+4	208A  0C      	        inc     c
 245: 6148+12	208B  ED78    	        in      a, (c)
 246: 6160+10	208D  C1      	        pop     bc
 247: 6170+10	208E  C9      	        ret
 248:				
 249:				; write to configured VRAM port
 250:				; parameters:
 251:				;       A = value to write
 252:				                                        ; Z80 | Z180 cycles...
 253:     -	208F          	TmsRamOut:                              ; 17  | 16 (call)
 254: 6180+11	208F  C5      	        push    bc                      ; 11  | 11
 255: 6191+20	2090  ED4B00E4	        ld      bc, (TmsPort)           ; 20  | 18
 256: 6211+12	2094  ED79    	        out     (c), a                  ; 12  | 10
 257:     -	2096          	TmsRamOutDelay:
 258: 6223+8+5	2096  10FE    	        djnz    TmsRamOutDelay          ; 8   | 7  plus (13 | 9) * (iterations-1)
 259: 6231+10	2098  C1      	        pop     bc                      ; 10  | 9
 260: 6241+10	2099  C9      	        ret                             ; 10  | 9
 261:				
 262:				; read from configured VRAM port
 263:				; returns:
 264:				;       A = value read
 265:     -	209A          	TmsRamIn:
 266: 6251+11	209A  C5      	        push    bc
 267: 6262+20	209B  ED4B00E4	        ld      bc, (TmsPort)
 268:     -	209F          	TmsRamInDelay:
 269: 6282+8+5	209F  10FE    	        djnz    TmsRamInDelay
 270: 6290+12	20A1  ED78    	        in      a, (c)
 271: 6302+20	20A3  ED4B00E4	        ld      bc, (TmsPort)
 272:     -	20A7          	TmsRamInDelay2:
 273: 6322+8+5	20A7  10FE    	        djnz    TmsRamInDelay2
 274: 6330+10	20A9  C1      	        pop     bc
 275: 6340+10	20AA  C9      	        ret
 276:				
 277:				; ---------------------------------------------------------------------------
 278:				; register configuration routines
 279:				
 280:				; set the background color
 281:				;       A = requested color
 282:     -	20AB          	TmsBackground:
 283: 6350+7	20AB  E60F    	        and     0fh
 284: 6357+4	20AD  47      	        ld      b, a
 285: 6361+13	20AE  3A0EE4  	        ld      a, (TmsScreenColors)
 286: 6374+7	20B1  E6F0    	        and     0f0h
 287: 6381+4	20B3  B0      	        or      b
 288: 6385+13	20B4  320EE4  	        ld      (TmsScreenColors), a
 289: 6398+7	20B7  1E87    	        ld      e, TmsColorReg
 290: 6405+10	20B9  C37720  	        jp      TmsSetReg
 291:				
 292:				; set the sprite configuration
 293:				;       A = sprite options
 294:     -	20BC          	TmsSpriteConfig:
 295: 6415+7	20BC  E603    	        and     TmsSprite32|TmsSpriteMag
 296: 6422+4	20BE  47      	        ld      b, a
 297: 6426+13	20BF  3A02E4  	        ld      a, (TmsMode)
 298: 6439+7	20C2  E6FC    	        and     ~(TmsSprite32|TmsSpriteMag)
 299: 6446+4	20C4  B0      	        or      b
 300: 6450+13	20C5  3202E4  	        ld      (TmsMode), a
 301: 6463+7	20C8  1E81    	        ld      e, TmsCtrl1Reg
 302: 6470+10	20CA  C37720  	        jp      TmsSetReg
 303:				
 304:				
 305:				; enable vblank interrupts
 306:     -	20CD          	TmsIntEnable:
 307: 6480+13	20CD  3A02E4  	        ld      a, (TmsMode)
 308: 6493+7	20D0  F620    	        or      TmsIntEnableBit
 309: 6500+13	20D2  3202E4  	        ld      (TmsMode), a
 310: 6513+7	20D5  1E81    	        ld      e, TmsCtrl1Reg
 311: 6520+10	20D7  C37720  	        jp      TmsSetReg
 312:				
 313:				; disable vblank interrupts
 314:     -	20DA          	TmsIntDisable:
 315: 6530+13	20DA  3A02E4  	        ld      a, (TmsMode)
 316: 6543+7	20DD  E6DF    	        and     ~TmsIntEnableBit
 317: 6550+13	20DF  3202E4  	        ld      (TmsMode), a
 318: 6563+7	20E2  1E81    	        ld      e, TmsCtrl1Reg
 319: 6570+10	20E4  C37720  	        jp      TmsSetReg
 320:				
 321:				; ---------------------------------------------------------------------------
 322:				; initialization routines
 323:				
 324:     -	0080          	TmsBlankFlags:          equ     Tms16k
 325:     -	00C0          	TmsTileFlags:           equ     Tms16k | TmsDisplayEnable
 326:     -	00D0          	TmsTextFlags:           equ     Tms16k | TmsDisplayEnable | TmsM1
 327:     -	00C8          	TmsMulticolorFlags:     equ     Tms16k | TmsDisplayEnable | TmsM2
 328:     -	02C0          	TmsBitmapFlags:         equ     Tms16k | TmsDisplayEnable | TmsM3
 329:				
 330:				; reset registers and clear all 16KB of video memory
 331:     -	20E7          	TmsReset:
 332: 6580+10	20E7  218000  	        ld      hl, TmsBlankFlags       ; blank the screen with 16KB enabled
 333: 6590+16	20EA  2202E4  	        ld      (TmsMode), hl
 334: 6606+4	20ED  7D      	        ld      a, l
 335: 6610+7	20EE  1E81    	        ld      e, TmsCtrl1Reg
 336: 6617+17	20F0  CD7720  	        call    TmsSetReg
 337: 6634+4	20F3  7C      	        ld      a, h
 338: 6638+7	20F4  1E80    	        ld      e, TmsCtrl0Reg
 339: 6645+17	20F6  CD7720  	        call    TmsSetReg
 340: 6662+7	20F9  3E00    	        ld      a, TmsTransparent
 341: 6669+17	20FB  CDAB20  	        call    TmsBackground
 342: 6686+7	20FE  3E00    	        ld      a, TmsTransparent
 343: 6693+17	2100  CD5C22  	        call    TmsTextColor
 344: 6710+10	2103  110000  	        ld      de, 0                   ; clear entire VRAM
 345: 6720+10	2106  010040  	        ld      bc, 4000h
 346: 6730+7	2109  3E00    	        ld      a, 0
 347: 6737+17	210B  CD4D22  	        call    TmsFill
 348: 6754+10	210E  C9      	        ret
 349:				
 350:				; initialize for multicolor mode 
 351:     -	210F          	TmsMulticolor:
 352: 6764+17	210F  CDE720  	        call    TmsReset
 353: 6781+20	2112  ED5B04E4	        ld      de, (TmsNameAddr)
 354: 6801+17	2116  CD2622  	        call    TmsWriteAddr
 355: 6818+7	2119  1606    	        ld      d, 6                    ; name table has 6 sections
 356: 6825+7	211B  1E00    	        ld      e, 0                    ; lines in first section start at 0
 357:     -	211D          	TmsSectionLoop:
 358: 6832+7	211D  0E04    	        ld      c, 4                    ; each section has 4 identical lines
 359:     -	211F          	TmsLineLoop:
 360: 6839+7	211F  0620    	        ld      b, 32                   ; each line is 32 bytes long
 361: 6846+4	2121  7B      	        ld      a, e                    ; same starting value for each line in section
 362:     -	2122          	TmsByteLoop: 
 363: 6850+17	2122  CD8F20  	        call    TmsRamOut
 364: 6867+4	2125  3C      	        inc     a                       ; byte value
 365: 6871+8+5	2126  10FA    	        djnz    TmsByteLoop
 366: 6879+4	2128  0D      	        dec     c                       ; line counter
 367: 6883+10	2129  C21F21  	        jp      nz, TmsLineLoop
 368: 6893+4	212C  5F      	        ld      e, a                    ; next starting value = current + 32
 369: 6897+4	212D  15      	        dec     d                       ; section counter
 370: 6901+10	212E  C21D21  	        jp      nz, TmsSectionLoop
 371: 6911+10	2131  21C800  	        ld      hl, TmsMulticolorFlags
 372: 6921+16	2134  2202E4  	        ld      (TmsMode), hl
 373: 6937+10	2137  C35B21  	        jp      TmsInitNonBitmap
 374:				
 375:				; initialize for tiled graphics
 376:     -	213A          	TmsTile:
 377: 6947+17	213A  CDE720  	        call    TmsReset
 378: 6964+10	213D  21C000  	        ld      hl, TmsTileFlags
 379: 6974+16	2140  2202E4  	        ld      (TmsMode), hl
 380: 6990+10	2143  C35B21  	        jp      TmsInitNonBitmap
 381:				
 382:				; initialize for text mode
 383:				;       HL = address of font to load
 384:     -	2146          	TmsTextMode:
 385: 7000+11	2146  E5      	        push    hl
 386: 7011+17	2147  CDE720  	        call    TmsReset
 387: 7028+10	214A  E1      	        pop     hl
 388: 7038+20	214B  ED5B08E4	        ld      de, (TmsPatternAddr)    ; load font from address in hl
 389: 7058+10	214F  010008  	        ld      bc, TmsTextPatternLen
 390: 7068+17	2152  CD3E22  	        call    TmsWrite
 391: 7085+10	2155  21D000  	        ld      hl, TmsTextFlags
 392: 7095+16	2158  2202E4  	        ld      (TmsMode), hl
 393:				        ; fallthrough to TmsInitNonBitmap
 394:				
 395:				; non-bitmap color and pattern table configuration
 396:     -	215B          	TmsInitNonBitmap:
 397:				        ; set up color table address (register = address / 400H)
 398: 7111+13	215B  3A06E4  	        ld      a, (TmsColorAddr)
 399: 7124+7	215E  E6C0    	        and     0c0h
 400: 7131+13	2160  3206E4  	        ld      (TmsColorAddr), a
 401: 7144+4	2163  57      	        ld      d, a
 402: 7148+13	2164  3A07E4  	        ld      a, (TmsColorAddr+1)
 403: 7161+7	2167  E63F    	        and     3fh
 404: 7168+13	2169  3207E4  	        ld      (TmsColorAddr+1), a
 405: 7181+8	216C  CB12    	        rl      d
 406: 7189+4	216E  17      	        rla
 407: 7193+8	216F  CB12    	        rl      d
 408: 7201+4	2171  17      	        rla
 409: 7205+7	2172  1E83    	        ld      e, TmsColorTableReg
 410: 7212+17	2174  CD7720  	        call    TmsSetReg
 411:				
 412:				        ; set up pattern table address (register = address / 800H)
 413: 7229+4	2177  AF      	        xor     a
 414: 7233+13	2178  3208E4  	        ld      (TmsPatternAddr), a
 415: 7246+13	217B  3A09E4  	        ld      a, (TmsPatternAddr+1) 
 416: 7259+7	217E  E638    	        and     38h
 417: 7266+13	2180  3209E4  	        ld      (TmsPatternAddr+1), a
 418: 7279+4	2183  0F      	        rrca
 419: 7283+4	2184  0F      	        rrca
 420: 7287+4	2185  0F      	        rrca
 421: 7291+7	2186  1E84    	        ld      e, TmsPatternReg
 422: 7298+17	2188  CD7720  	        call    TmsSetReg
 423: 7315+10	218B  C3D921  	        jp      TmsInitCommon
 424:				
 425:				; initialize for bitmapped graphics
 426:     -	218E          	TmsBitmap:
 427: 7325+17	218E  CDE720  	        call    TmsReset
 428: 7342+20	2191  ED5B04E4	        ld      de, (TmsNameAddr)       ; initialize name table with 3 sets
 429: 7362+17	2195  CD2622  	        call    TmsWriteAddr            ; of 256 bytes ranging from 00-FF
 430: 7379+7	2198  0603    	        ld      b, 3
 431: 7386+4	219A  AF      	        xor     a
 432:     -	219B          	TmsBitmapLoop:
 433: 7390+17	219B  CD8F20  	        call    TmsRamOut
 434: 7407+4	219E  3C      	        inc     a
 435: 7411+10	219F  C29B21  	        jp      nz, TmsBitmapLoop
 436: 7421+8+5	21A2  10F7    	        djnz    TmsBitmapLoop
 437: 7429+10	21A4  21C002  	        ld      hl, TmsBitmapFlags
 438: 7439+16	21A7  2202E4  	        ld      (TmsMode), hl
 439:				
 440:				        ; set up color table at 0H (register = 7FH) or 2000H (register = 0FFH)
 441: 7455+4	21AA  AF      	        xor     a
 442: 7459+13	21AB  3206E4  	        ld      (TmsColorAddr), a
 443: 7472+13	21AE  3208E4  	        ld      (TmsPatternAddr), a
 444: 7485+13	21B1  3A07E4  	        ld      a, (TmsColorAddr+1)
 445: 7498+7	21B4  E620    	        and     20h
 446: 7505+13	21B6  3207E4  	        ld      (TmsColorAddr+1), a
 447: 7518+7	21B9  3EFF    	        ld      a, 0ffh                 ; color table at 2000H
 448: 7525+10	21BB  C2C021  	        jp      nz, TmsColorTableHigh
 449: 7535+7	21BE  3E7F    	        ld      a, 7fh                  ; color table at 0H
 450:     -	21C0          	TmsColorTableHigh:
 451: 7542+7	21C0  1E83    	        ld      e, TmsColorTableReg
 452: 7549+17	21C2  CD7720  	        call    TmsSetReg
 453:				
 454:				        ; set up pattern table at 0H (register = 3) or 2000H (register = 7)
 455: 7566+13	21C5  3A09E4  	        ld      a, (TmsPatternAddr+1)
 456: 7579+7	21C8  E620    	        and     20h
 457: 7586+13	21CA  3209E4  	        ld      (TmsPatternAddr+1), a
 458: 7599+7	21CD  3E07    	        ld      a, 7                    ; pattern table at 2000H
 459: 7606+10	21CF  C2D421  	        jp      nz, TmsPatternTableHigh
 460: 7616+7	21D2  3E03    	        ld      a, 3                    ; pattern table at 0H
 461:     -	21D4          	TmsPatternTableHigh:
 462: 7623+7	21D4  1E84    	        ld      e, TmsPatternReg
 463: 7630+17	21D6  CD7720  	        call    TmsSetReg
 464:				        ; fall through to TmsInitCommon
 465:				
 466:				
 467:				; common initialization for all modes
 468:     -	21D9          	TmsInitCommon:
 469:				        ; set up name table address (register = address / 400H)
 470: 7647+4	21D9  AF      	        xor     a
 471: 7651+13	21DA  3204E4  	        ld      (TmsNameAddr), a
 472: 7664+13	21DD  3A05E4  	        ld      a, (TmsNameAddr+1)
 473: 7677+7	21E0  E63C    	        and     3ch
 474: 7684+13	21E2  3205E4  	        ld      (TmsNameAddr+1), a
 475: 7697+4	21E5  0F      	        rrca
 476: 7701+4	21E6  0F      	        rrca
 477: 7705+7	21E7  1E82    	        ld      e, TmsNameReg
 478: 7712+17	21E9  CD7720  	        call    TmsSetReg
 479:				
 480:				        ; set up sprite pattern table address (register = address / 80H)
 481: 7729+13	21EC  3A0CE4  	        ld      a, (TmsSpriteAttrAddr)
 482: 7742+7	21EF  E680    	        and     80h
 483: 7749+13	21F1  320CE4  	        ld      (TmsSpriteAttrAddr), a
 484: 7762+4	21F4  57      	        ld      d, a
 485: 7766+13	21F5  3A0DE4  	        ld      a, (TmsSpriteAttrAddr+1)
 486: 7779+7	21F8  E67F    	        and     7fh
 487: 7786+8	21FA  CB12    	        rl      d
 488: 7794+4	21FC  17      	        rla
 489: 7798+7	21FD  1E85    	        ld      e, TmsSpriteAttrReg
 490: 7805+17	21FF  CD7720  	        call    TmsSetReg
 491:				
 492:				        ; set up sprite attribute table address (register = address / 800H)
 493: 7822+4	2202  AF      	        xor     a                       
 494: 7826+13	2203  320AE4  	        ld      (TmsSpritePatternAddr), a
 495: 7839+13	2206  3A0BE4  	        ld      a, (TmsSpritePatternAddr+1)
 496: 7852+7	2209  E638    	        and     38h
 497: 7859+13	220B  320BE4  	        ld      (TmsSpritePatternAddr+1), a
 498: 7872+4	220E  0F      	        rrca
 499: 7876+4	220F  0F      	        rrca
 500: 7880+4	2210  0F      	        rrca
 501: 7884+7	2211  1E86    	        ld      e, TmsSpritePatternReg
 502: 7891+17	2213  CD7720  	        call    TmsSetReg
 503:				
 504:				        ; set up control registers
 505: 7908+7	2216  1E81    	        ld      e, TmsCtrl1Reg
 506: 7915+13	2218  3A02E4  	        ld      a, (TmsMode)
 507: 7928+17	221B  CD7720  	        call    TmsSetReg
 508: 7945+13	221E  3A03E4  	        ld      a, (TmsMode+1)
 509: 7958+7	2221  1E80    	        ld      e, TmsCtrl0Reg
 510: 7965+10	2223  C37720  	        jp      TmsSetReg
 511:				
 512:				; ---------------------------------------------------------------------------
 513:				; memory access routines
 514:				
 515:				; set the next address of vram to write
 516:				;       DE = address
 517:     -	2226          	TmsWriteAddr:
 518: 7975+4	2226  7B      	        ld      a, e                    ; send lsb
 519: 7979+17	2227  CD7B20  	        call    TmsRegOut
 520: 7996+4	222A  7A      	        ld      a, d                    ; mask off msb to max of 16KB
 521: 8000+7	222B  E63F    	        and     3fh
 522: 8007+7	222D  F640    	        or      TmsWriteBit             ; indicate that this is a write
 523: 8014+17	222F  CD7B20  	        call    TmsRegOut
 524: 8031+10	2232  C9      	        ret
 525:				
 526:				; set the next address of vram to read
 527:				;       DE = address
 528:     -	2233          	TmsReadAddr:
 529: 8041+4	2233  7B      	        ld      a, e                    ; send lsb
 530: 8045+17	2234  CD7B20  	        call    TmsRegOut
 531: 8062+4	2237  7A      	        ld      a, d                    ; mask off msb to max of 16KB
 532: 8066+7	2238  E63F    	        and     3Fh
 533: 8073+17	223A  CD7B20  	        call    TmsRegOut
 534: 8090+10	223D  C9      	        ret
 535:				
 536:				; copy bytes from ram to vram
 537:				;       HL = ram source address
 538:				;       DE = vram destination address
 539:				;       BC = byte count
 540:     -	223E          	TmsWrite:
 541: 8100+17	223E  CD2622  	        call    TmsWriteAddr
 542:     -	2241          	TmsWriteLoop:
 543: 8117+7	2241  7E      	        ld      a, (hl)
 544: 8124+17	2242  CD8F20  	        call    TmsRamOut
 545: 8141+6	2245  23      	        inc     hl
 546: 8147+6	2246  0B      	        dec     bc
 547: 8153+4	2247  78      	        ld      a, b
 548: 8157+4	2248  B1      	        or      c
 549: 8161+10	2249  C24122  	        jp      nz, TmsWriteLoop
 550: 8171+10	224C  C9      	        ret
 551:				
 552:				; fill a section of memory with a single value
 553:				;       A = value to fill
 554:				;       DE = vram destination address
 555:				;       BC = byte count
 556:     -	224D          	TmsFill:
 557: 8181+11	224D  F5      	        push    af
 558: 8192+17	224E  CD2622  	        call    TmsWriteAddr
 559: 8209+10	2251  F1      	        pop     af
 560:     -	2252          	TmsFillLoop:
 561: 8219+17	2252  CD8F20  	        call    TmsRamOut
 562: 8236+4	2255  0D      	        dec     c
 563: 8240+10	2256  C25222  	        jp      nz, TmsFillLoop
 564: 8250+8+5	2259  10F7    	        djnz    TmsFillLoop
 565: 8258+10	225B  C9      	        ret
 566:				
 567:				; ---------------------------------------------------------------------------
 568:				; text routines
 569:				; set text color
 570:				;       A = requested color
 571:     -	225C          	TmsTextColor:
 572: 8268+4	225C  87      	        add     a, a                    ; text color into high nybble
 573: 8272+4	225D  87      	        add     a, a
 574: 8276+4	225E  87      	        add     a, a
 575: 8280+4	225F  87      	        add     a, a
 576: 8284+4	2260  47      	        ld      b, a                    ; save for later
 577: 8288+13	2261  3A0EE4  	        ld      a, (TmsScreenColors)    ; get current colors
 578: 8301+7	2264  E60F    	        and     0fh                     ; mask off old text color
 579: 8308+4	2266  B0      	        or      b                       ; set new text color
 580: 8312+13	2267  320EE4  	        ld      (TmsScreenColors), a
 581: 8325+7	226A  1E87    	        ld      e, TmsColorReg
 582: 8332+10	226C  C37720  	        jp      TmsSetReg               ; save it back
 583:				
 584:				; set the address to place text at X/Y coordinate
 585:				;       A = X
 586:				;       E = Y
 587:     -	226F          	TmsTextPos:
 588: 8342+7	226F  1600    	        ld      d, 0
 589: 8349+10	2271  210000  	        ld      hl, 0
 590: 8359+11	2274  19      	        add     hl, de                  ; Y x 1
 591: 8370+11	2275  29      	        add     hl, hl                  ; Y x 2
 592: 8381+11	2276  29      	        add     hl, hl                  ; Y x 4
 593: 8392+11	2277  19      	        add     hl, de                  ; Y x 5
 594: 8403+11	2278  29      	        add     hl, hl                  ; Y x 10
 595: 8414+11	2279  29      	        add     hl, hl                  ; Y x 20
 596: 8425+11	227A  29      	        add     hl, hl                  ; Y x 40
 597: 8436+4	227B  5F      	        ld      e, a
 598: 8440+11	227C  19      	        add     hl, de                  ; add X for final address
 599: 8451+20	227D  ED5B04E4	        ld      de, (TmsNameAddr)       ; add name table base address
 600: 8471+11	2281  19      	        add     hl, de
 601: 8482+4	2282  EB      	        ex      de, hl
 602: 8486+10	2283  C32622  	        jp      TmsWriteAddr
 603:				
 604:				; copy a null-terminated string to VRAM
 605:				;       HL = ram source address
 606:     -	2286          	TmsStrOut:
 607: 8496+7	2286  7E      	        ld      a, (hl)
 608: 8503+7	2287  FE00    	        cp      0                       ; return when NULL is encountered
 609: 8510+5+6	2289  C8      	        ret     z
 610: 8515+17	228A  CD8F20  	        call    TmsRamOut
 611: 8532+6	228D  23      	        inc     hl
 612: 8538+10	228E  C38622  	        jp      TmsStrOut
 613:				
 614:				; repeat a character a certain number of times
 615:				;       A = character to output
 616:				;       B = count
 617:     -	2291          	TmsRepeat:
 618: 8548+17	2291  CD8F20  	        call    TmsRamOut
 619: 8565+8+5	2294  10FB    	        djnz    TmsRepeat
 620: 8573+10	2296  C9      	        ret
 621:				
 622:				; output a character
 623:				;       A = character to output
 624:     -	208F          	TmsChrOut:      equ TmsRamOut
 625:				
 626:				; ---------------------------------------------------------------------------
 627:				; bitmap routines
 628:				
 629:     -	A02F          	TmsClearPixel:  equ 0A02Fh              ; cpl, and b
 630:     -	00B0          	TmsSetPixel:    equ 0B0h                ; nop, or b
 631:				
 632:				; set operation for TmsPlotPixel to perform
 633:				;       HL = pixel operation (TmsClearPixel, TmsSetPixel)
 634:     -	2297          	TmsPixelOp:
 635: 8583+16	2297  22B822  	        ld      (TmsPixelOpPlaceHolder), hl
 636: 8599+10	229A  C9      	        ret
 637:				
 638:				; set or clear pixel at X, Y position
 639:				;       B = Y position
 640:				;       C = X position
 641:     -	229B          	TmsPlotPixel:
 642: 8609+4	229B  78      	        ld      a, b                    ; bail out if Y coord > 191
 643: 8613+7	229C  FEC0    	        cp      192
 644: 8620+5+6	229E  D0      	        ret     nc
 645: 8625+17	229F  CDDE22  	        call    TmsXYAddr               ; get address in DE for X/Y coord in BC
 646: 8642+4	22A2  79      	        ld      a, c                    ; get lower 3 bits of X coord
 647: 8646+7	22A3  E607    	        and     7
 648: 8653+7	22A5  0600    	        ld      b, 0
 649: 8660+4	22A7  4F      	        ld      c, a
 650: 8664+10	22A8  21C222  	        ld      hl, TmsMaskLookup       ; address of mask in table
 651: 8674+11	22AB  09      	        add     hl, bc
 652: 8685+7	22AC  46      	        ld      b, (hl)                 ; save mask in B
 653: 8692+16	22AD  2A08E4  	        ld      hl, (TmsPatternAddr)    ; get base address for pattern table
 654: 8708+11	22B0  19      	        add     hl, de
 655: 8719+4	22B1  EB      	        ex      de, hl
 656: 8723+17	22B2  CD3322  	        call    TmsReadAddr             ; set read within pattern table
 657: 8740+17	22B5  CD9A20  	        call    TmsRamIn
 658:     -	22B8          	TmsPixelOpPlaceHolder:
 659: 8757+4	22B8  B0      	        or      b                       ; mask bit in previous byte
 660: 8761+4	22B9  00      	        nop                             ; place holder for 2 byte mask operation
 661: 8765+11	22BA  F5      	        push    af
 662: 8776+17	22BB  CD2622  	        call    TmsWriteAddr            ; set write address within pattern table
 663: 8793+10	22BE  F1      	        pop     af
 664: 8803+10	22BF  C38F20  	        jp      TmsRamOut
 665:				
 666:     -	22C2          	TmsMaskLookup:
 667:     -	22C2  80402010	        defb 80h, 40h, 20h, 10h, 8h, 4h, 2h, 1h
	              08040201
 668:				
 669:				; set the color for a block of pixels in bitmap mode
 670:				;       B = Y position
 671:				;       C = X position
 672:				;       A = foreground/background color to set
 673:     -	22CA          	TmsPixelColor:
 674: 8813+11	22CA  F5      	        push    af
 675: 8824+4	22CB  78      	        ld      a, b                    ; bail out if Y coord > 191
 676: 8828+7	22CC  FEC0    	        cp      192
 677: 8835+5+6	22CE  D0      	        ret     nc
 678: 8840+17	22CF  CDDE22  	        call    TmsXYAddr               ; get address in DE for X/Y coord in BC
 679: 8857+16	22D2  2A06E4  	        ld      hl, (TmsColorAddr)      ; add the color table base address
 680: 8873+11	22D5  19      	        add     hl, de
 681: 8884+4	22D6  EB      	        ex      de, hl
 682: 8888+17	22D7  CD2622  	        call    TmsWriteAddr            ; set write address within color table
 683: 8905+10	22DA  F1      	        pop     af
 684: 8915+10	22DB  C38F20  	        jp      TmsRamOut
 685:				
 686:				; calculate address byte containing X/Y coordinate
 687:				;       B = Y position
 688:				;       C = X position
 689:				;       returns address in DE
 690:     -	22DE          	TmsXYAddr:
 691: 8925+4	22DE  78      	        ld      a, b                    ; d = (y / 8)
 692: 8929+4	22DF  0F      	        rrca
 693: 8933+4	22E0  0F      	        rrca
 694: 8937+4	22E1  0F      	        rrca
 695: 8941+7	22E2  E61F    	        and     1fh
 696: 8948+4	22E4  57      	        ld      d, a
 697:				
 698: 8952+4	22E5  79      	        ld      a, c                    ; e = (x & f8)
 699: 8956+7	22E6  E6F8    	        and     0f8h
 700: 8963+4	22E8  5F      	        ld      e, a
 701:				
 702: 8967+4	22E9  78      	        ld      a, b                    ; e += (y & 7)
 703: 8971+7	22EA  E607    	        and     7
 704: 8978+4	22EC  B3      	        or      e
 705: 8982+4	22ED  5F      	        ld      e, a
**** functions/ascii.s ****
  96: 8986+10	22EE  C9      	        ret
  97:				;        .include "utility.s"                   ; BDOS utility routines
  98:				    .include "font1.s"
**** functions/font1.s ****
   1:     -	22EF          	TmsFont:
   2:				    ; 6x8 bitmap font by Oleg Kosenkov
   3:				    ; Source: https://github.com/idispatch/raster-fonts/blob/master/font-6x8.c
   4:				
   5:				    ; code=0, hex=0x00, ascii="^@"
   6:     -	22EF  00      	    defb 00000000b
   7:     -	22F0  00      	    defb 00000000b
   8:     -	22F1  00      	    defb 00000000b
   9:     -	22F2  00      	    defb 00000000b
  10:     -	22F3  00      	    defb 00000000b
  11:     -	22F4  00      	    defb 00000000b
  12:     -	22F5  00      	    defb 00000000b
  13:     -	22F6  00      	    defb 00000000b
  14:				
  15:				    ; code=1, hex=0x01, ascii="^A"
  16:     -	22F7  38      	    defb 00111000b
  17:     -	22F8  44      	    defb 01000100b
  18:     -	22F9  6C      	    defb 01101100b
  19:     -	22FA  44      	    defb 01000100b
  20:     -	22FB  54      	    defb 01010100b
  21:     -	22FC  44      	    defb 01000100b
  22:     -	22FD  38      	    defb 00111000b
  23:     -	22FE  00      	    defb 00000000b
  24:				
  25:				    ; code=2, hex=0x02, ascii="^B"
  26:     -	22FF  38      	    defb 00111000b
  27:     -	2300  7C      	    defb 01111100b
  28:     -	2301  54      	    defb 01010100b
  29:     -	2302  7C      	    defb 01111100b
  30:     -	2303  44      	    defb 01000100b
  31:     -	2304  7C      	    defb 01111100b
  32:     -	2305  38      	    defb 00111000b
  33:     -	2306  00      	    defb 00000000b
  34:				
  35:				    ; code=3, hex=0x03, ascii="^C"
  36:     -	2307  00      	    defb 00000000b
  37:     -	2308  28      	    defb 00101000b
  38:     -	2309  7C      	    defb 01111100b
  39:     -	230A  7C      	    defb 01111100b
  40:     -	230B  7C      	    defb 01111100b
  41:     -	230C  38      	    defb 00111000b
  42:     -	230D  10      	    defb 00010000b
  43:     -	230E  00      	    defb 00000000b
  44:				
  45:				    ; code=4, hex=0x04, ascii="^D"
  46:     -	230F  00      	    defb 00000000b
  47:     -	2310  10      	    defb 00010000b
  48:     -	2311  38      	    defb 00111000b
  49:     -	2312  7C      	    defb 01111100b
  50:     -	2313  7C      	    defb 01111100b
  51:     -	2314  38      	    defb 00111000b
  52:     -	2315  10      	    defb 00010000b
  53:     -	2316  00      	    defb 00000000b
  54:				
  55:				    ; code=5, hex=0x05, ascii="^E"
  56:     -	2317  10      	    defb 00010000b
  57:     -	2318  38      	    defb 00111000b
  58:     -	2319  38      	    defb 00111000b
  59:     -	231A  10      	    defb 00010000b
  60:     -	231B  7C      	    defb 01111100b
  61:     -	231C  7C      	    defb 01111100b
  62:     -	231D  10      	    defb 00010000b
  63:     -	231E  00      	    defb 00000000b
  64:				
  65:				    ; code=6, hex=0x06, ascii="^F"
  66:     -	231F  00      	    defb 00000000b
  67:     -	2320  10      	    defb 00010000b
  68:     -	2321  38      	    defb 00111000b
  69:     -	2322  7C      	    defb 01111100b
  70:     -	2323  7C      	    defb 01111100b
  71:     -	2324  10      	    defb 00010000b
  72:     -	2325  38      	    defb 00111000b
  73:     -	2326  00      	    defb 00000000b
  74:				
  75:				    ; code=7, hex=0x07, ascii="^G"
  76:     -	2327  00      	    defb 00000000b
  77:     -	2328  00      	    defb 00000000b
  78:     -	2329  00      	    defb 00000000b
  79:     -	232A  30      	    defb 00110000b
  80:     -	232B  30      	    defb 00110000b
  81:     -	232C  00      	    defb 00000000b
  82:     -	232D  00      	    defb 00000000b
  83:     -	232E  00      	    defb 00000000b
  84:				
  85:				    ; code=8, hex=0x08, ascii="^H"
  86:     -	232F  FC      	    defb 11111100b
  87:     -	2330  FC      	    defb 11111100b
  88:     -	2331  FC      	    defb 11111100b
  89:     -	2332  CC      	    defb 11001100b
  90:     -	2333  CC      	    defb 11001100b
  91:     -	2334  FC      	    defb 11111100b
  92:     -	2335  FC      	    defb 11111100b
  93:     -	2336  FC      	    defb 11111100b
  94:				
  95:				    ; code=9, hex=0x09, ascii="^I"
  96:     -	2337  00      	    defb 00000000b
  97:     -	2338  00      	    defb 00000000b
  98:     -	2339  78      	    defb 01111000b
  99:     -	233A  48      	    defb 01001000b
 100:     -	233B  48      	    defb 01001000b
 101:     -	233C  78      	    defb 01111000b
 102:     -	233D  00      	    defb 00000000b
 103:     -	233E  00      	    defb 00000000b
 104:				
 105:				    ; code=10, hex=0x0A, ascii="^J"
 106:     -	233F  FC      	    defb 11111100b
 107:     -	2340  FC      	    defb 11111100b
 108:     -	2341  84      	    defb 10000100b
 109:     -	2342  B4      	    defb 10110100b
 110:     -	2343  B4      	    defb 10110100b
 111:     -	2344  84      	    defb 10000100b
 112:     -	2345  FC      	    defb 11111100b
 113:     -	2346  FC      	    defb 11111100b
 114:				
 115:				    ; code=11, hex=0x0b, ascii="^K"
 116:     -	2347  00      	    defb 00000000b
 117:     -	2348  1C      	    defb 00011100b
 118:     -	2349  0C      	    defb 00001100b
 119:     -	234A  34      	    defb 00110100b
 120:     -	234B  48      	    defb 01001000b
 121:     -	234C  48      	    defb 01001000b
 122:     -	234D  30      	    defb 00110000b
 123:     -	234E  00      	    defb 00000000b
 124:				
 125:				    ; code=12, hex=0x0C, ascii="^L"
 126:     -	234F  38      	    defb 00111000b
 127:     -	2350  44      	    defb 01000100b
 128:     -	2351  44      	    defb 01000100b
 129:     -	2352  38      	    defb 00111000b
 130:     -	2353  10      	    defb 00010000b
 131:     -	2354  38      	    defb 00111000b
 132:     -	2355  10      	    defb 00010000b
 133:     -	2356  00      	    defb 00000000b
 134:				
 135:				    ; code=13, hex=0x0D, ascii="^M"
 136:     -	2357  10      	    defb 00010000b
 137:     -	2358  18      	    defb 00011000b
 138:     -	2359  14      	    defb 00010100b
 139:     -	235A  10      	    defb 00010000b
 140:     -	235B  30      	    defb 00110000b
 141:     -	235C  70      	    defb 01110000b
 142:     -	235D  60      	    defb 01100000b
 143:     -	235E  00      	    defb 00000000b
 144:				
 145:				    ; code=14, hex=0x0E, ascii="^N"
 146:     -	235F  0C      	    defb 00001100b
 147:     -	2360  34      	    defb 00110100b
 148:     -	2361  2C      	    defb 00101100b
 149:     -	2362  34      	    defb 00110100b
 150:     -	2363  2C      	    defb 00101100b
 151:     -	2364  6C      	    defb 01101100b
 152:     -	2365  60      	    defb 01100000b
 153:     -	2366  00      	    defb 00000000b
 154:				
 155:				    ; code=15, hex=0x0F, ascii="^O"
 156:     -	2367  00      	    defb 00000000b
 157:     -	2368  54      	    defb 01010100b
 158:     -	2369  38      	    defb 00111000b
 159:     -	236A  6C      	    defb 01101100b
 160:     -	236B  38      	    defb 00111000b
 161:     -	236C  54      	    defb 01010100b
 162:     -	236D  00      	    defb 00000000b
 163:     -	236E  00      	    defb 00000000b
 164:				
 165:				    ; code=16, hex=0x10, ascii="^P"
 166:     -	236F  20      	    defb 00100000b
 167:     -	2370  30      	    defb 00110000b
 168:     -	2371  38      	    defb 00111000b
 169:     -	2372  3C      	    defb 00111100b
 170:     -	2373  38      	    defb 00111000b
 171:     -	2374  30      	    defb 00110000b
 172:     -	2375  20      	    defb 00100000b
 173:     -	2376  00      	    defb 00000000b
 174:				
 175:				    ; code=17, hex=0x11, ascii="^Q"
 176:     -	2377  08      	    defb 00001000b
 177:     -	2378  18      	    defb 00011000b
 178:     -	2379  38      	    defb 00111000b
 179:     -	237A  78      	    defb 01111000b
 180:     -	237B  38      	    defb 00111000b
 181:     -	237C  18      	    defb 00011000b
 182:     -	237D  08      	    defb 00001000b
 183:     -	237E  00      	    defb 00000000b
 184:				
 185:				    ; code=18, hex=0x12, ascii="^R"
 186:     -	237F  10      	    defb 00010000b
 187:     -	2380  38      	    defb 00111000b
 188:     -	2381  7C      	    defb 01111100b
 189:     -	2382  10      	    defb 00010000b
 190:     -	2383  7C      	    defb 01111100b
 191:     -	2384  38      	    defb 00111000b
 192:     -	2385  10      	    defb 00010000b
 193:     -	2386  00      	    defb 00000000b
 194:				
 195:				    ; code=19, hex=0x13, ascii="^S"
 196:     -	2387  28      	    defb 00101000b
 197:     -	2388  28      	    defb 00101000b
 198:     -	2389  28      	    defb 00101000b
 199:     -	238A  28      	    defb 00101000b
 200:     -	238B  28      	    defb 00101000b
 201:     -	238C  00      	    defb 00000000b
 202:     -	238D  28      	    defb 00101000b
 203:     -	238E  00      	    defb 00000000b
 204:				
 205:				    ; code=20, hex=0x14, ascii="^T"
 206:     -	238F  3C      	    defb 00111100b
 207:     -	2390  54      	    defb 01010100b
 208:     -	2391  54      	    defb 01010100b
 209:     -	2392  34      	    defb 00110100b
 210:     -	2393  14      	    defb 00010100b
 211:     -	2394  14      	    defb 00010100b
 212:     -	2395  14      	    defb 00010100b
 213:     -	2396  00      	    defb 00000000b
 214:				
 215:				    ; code=21, hex=0x15, ascii="^U"
 216:     -	2397  38      	    defb 00111000b
 217:     -	2398  44      	    defb 01000100b
 218:     -	2399  30      	    defb 00110000b
 219:     -	239A  28      	    defb 00101000b
 220:     -	239B  18      	    defb 00011000b
 221:     -	239C  44      	    defb 01000100b
 222:     -	239D  38      	    defb 00111000b
 223:     -	239E  00      	    defb 00000000b
 224:				
 225:				    ; code=22, hex=0x16, ascii="^V"
 226:     -	239F  00      	    defb 00000000b
 227:     -	23A0  00      	    defb 00000000b
 228:     -	23A1  00      	    defb 00000000b
 229:     -	23A2  00      	    defb 00000000b
 230:     -	23A3  00      	    defb 00000000b
 231:     -	23A4  78      	    defb 01111000b
 232:     -	23A5  78      	    defb 01111000b
 233:     -	23A6  00      	    defb 00000000b
 234:				
 235:				    ; code=23, hex=0x17, ascii="^W"
 236:     -	23A7  10      	    defb 00010000b
 237:     -	23A8  38      	    defb 00111000b
 238:     -	23A9  7C      	    defb 01111100b
 239:     -	23AA  10      	    defb 00010000b
 240:     -	23AB  7C      	    defb 01111100b
 241:     -	23AC  38      	    defb 00111000b
 242:     -	23AD  10      	    defb 00010000b
 243:     -	23AE  38      	    defb 00111000b
 244:				
 245:				    ; code=24, hex=0x18, ascii="^X"
 246:     -	23AF  10      	    defb 00010000b
 247:     -	23B0  38      	    defb 00111000b
 248:     -	23B1  7C      	    defb 01111100b
 249:     -	23B2  10      	    defb 00010000b
 250:     -	23B3  10      	    defb 00010000b
 251:     -	23B4  10      	    defb 00010000b
 252:     -	23B5  10      	    defb 00010000b
 253:     -	23B6  00      	    defb 00000000b
 254:				
 255:				    ; code=25, hex=0x19, ascii="^Y"
 256:     -	23B7  10      	    defb 00010000b
 257:     -	23B8  10      	    defb 00010000b
 258:     -	23B9  10      	    defb 00010000b
 259:     -	23BA  10      	    defb 00010000b
 260:     -	23BB  7C      	    defb 01111100b
 261:     -	23BC  38      	    defb 00111000b
 262:     -	23BD  10      	    defb 00010000b
 263:     -	23BE  00      	    defb 00000000b
 264:				
 265:				    ; code=26, hex=0x1A, ascii="^Z"
 266:     -	23BF  00      	    defb 00000000b
 267:     -	23C0  10      	    defb 00010000b
 268:     -	23C1  18      	    defb 00011000b
 269:     -	23C2  7C      	    defb 01111100b
 270:     -	23C3  18      	    defb 00011000b
 271:     -	23C4  10      	    defb 00010000b
 272:     -	23C5  00      	    defb 00000000b
 273:     -	23C6  00      	    defb 00000000b
 274:				
 275:				    ; code=27, hex=0x1B, ascii="^["
 276:     -	23C7  00      	    defb 00000000b
 277:     -	23C8  10      	    defb 00010000b
 278:     -	23C9  30      	    defb 00110000b
 279:     -	23CA  7C      	    defb 01111100b
 280:     -	23CB  30      	    defb 00110000b
 281:     -	23CC  10      	    defb 00010000b
 282:     -	23CD  00      	    defb 00000000b
 283:     -	23CE  00      	    defb 00000000b
 284:				
 285:				    ; code=28, hex=0x1C, ascii="^\"
 286:     -	23CF  00      	    defb 00000000b
 287:     -	23D0  00      	    defb 00000000b
 288:     -	23D1  00      	    defb 00000000b
 289:     -	23D2  40      	    defb 01000000b
 290:     -	23D3  40      	    defb 01000000b
 291:     -	23D4  40      	    defb 01000000b
 292:     -	23D5  7C      	    defb 01111100b
 293:     -	23D6  00      	    defb 00000000b
 294:				
 295:				    ; code=29, hex=0x1D, ascii="^]"
 296:     -	23D7  00      	    defb 00000000b
 297:     -	23D8  28      	    defb 00101000b
 298:     -	23D9  28      	    defb 00101000b
 299:     -	23DA  7C      	    defb 01111100b
 300:     -	23DB  28      	    defb 00101000b
 301:     -	23DC  28      	    defb 00101000b
 302:     -	23DD  00      	    defb 00000000b
 303:     -	23DE  00      	    defb 00000000b
 304:				
 305:				    ; code=30, hex=0x1E, ascii="^^"
 306:     -	23DF  10      	    defb 00010000b
 307:     -	23E0  10      	    defb 00010000b
 308:     -	23E1  38      	    defb 00111000b
 309:     -	23E2  38      	    defb 00111000b
 310:     -	23E3  7C      	    defb 01111100b
 311:     -	23E4  7C      	    defb 01111100b
 312:     -	23E5  00      	    defb 00000000b
 313:     -	23E6  00      	    defb 00000000b
 314:				
 315:				    ; code=31, hex=0x1F, ascii="^_"
 316:     -	23E7  7C      	    defb 01111100b
 317:     -	23E8  7C      	    defb 01111100b
 318:     -	23E9  38      	    defb 00111000b
 319:     -	23EA  38      	    defb 00111000b
 320:     -	23EB  10      	    defb 00010000b
 321:     -	23EC  10      	    defb 00010000b
 322:     -	23ED  00      	    defb 00000000b
 323:     -	23EE  00      	    defb 00000000b
 324:				
 325:				    ; code=32, hex=0x20, ascii=" "
 326:     -	23EF  00      	    defb 00000000b
 327:     -	23F0  00      	    defb 00000000b
 328:     -	23F1  00      	    defb 00000000b
 329:     -	23F2  00      	    defb 00000000b
 330:     -	23F3  00      	    defb 00000000b
 331:     -	23F4  00      	    defb 00000000b
 332:     -	23F5  00      	    defb 00000000b
 333:     -	23F6  00      	    defb 00000000b
 334:				
 335:				    ; code=33, hex=0x21, ascii="!"
 336:     -	23F7  10      	    defb 00010000b
 337:     -	23F8  38      	    defb 00111000b
 338:     -	23F9  38      	    defb 00111000b
 339:     -	23FA  10      	    defb 00010000b
 340:     -	23FB  10      	    defb 00010000b
 341:     -	23FC  00      	    defb 00000000b
 342:     -	23FD  10      	    defb 00010000b
 343:     -	23FE  00      	    defb 00000000b
 344:				
 345:				    ; code=34, hex=0x22, ascii="""
 346:     -	23FF  6C      	    defb 01101100b
 347:     -	2400  6C      	    defb 01101100b
 348:     -	2401  48      	    defb 01001000b
 349:     -	2402  00      	    defb 00000000b
 350:     -	2403  00      	    defb 00000000b
 351:     -	2404  00      	    defb 00000000b
 352:     -	2405  00      	    defb 00000000b
 353:     -	2406  00      	    defb 00000000b
 354:				
 355:				    ; code=35, hex=0x23, ascii="#"
 356:     -	2407  00      	    defb 00000000b
 357:     -	2408  28      	    defb 00101000b
 358:     -	2409  7C      	    defb 01111100b
 359:     -	240A  28      	    defb 00101000b
 360:     -	240B  28      	    defb 00101000b
 361:     -	240C  7C      	    defb 01111100b
 362:     -	240D  28      	    defb 00101000b
 363:     -	240E  00      	    defb 00000000b
 364:				
 365:				    ; code=36, hex=0x24, ascii="$"
 366:     -	240F  20      	    defb 00100000b
 367:     -	2410  38      	    defb 00111000b
 368:     -	2411  40      	    defb 01000000b
 369:     -	2412  30      	    defb 00110000b
 370:     -	2413  08      	    defb 00001000b
 371:     -	2414  70      	    defb 01110000b
 372:     -	2415  10      	    defb 00010000b
 373:     -	2416  00      	    defb 00000000b
 374:				
 375:				    ; code=37, hex=0x25, ascii=""
 376:     -	2417  64      	    defb 01100100b
 377:     -	2418  64      	    defb 01100100b
 378:     -	2419  08      	    defb 00001000b
 379:     -	241A  10      	    defb 00010000b
 380:     -	241B  20      	    defb 00100000b
 381:     -	241C  4C      	    defb 01001100b
 382:     -	241D  4C      	    defb 01001100b
 383:     -	241E  00      	    defb 00000000b
 384:				
 385:				    ; code=38, hex=0x26, ascii="&"
 386:     -	241F  20      	    defb 00100000b
 387:     -	2420  50      	    defb 01010000b
 388:     -	2421  50      	    defb 01010000b
 389:     -	2422  20      	    defb 00100000b
 390:     -	2423  54      	    defb 01010100b
 391:     -	2424  48      	    defb 01001000b
 392:     -	2425  34      	    defb 00110100b
 393:     -	2426  00      	    defb 00000000b
 394:				
 395:				    ; code=39, hex=0x27, ascii="'"
 396:     -	2427  30      	    defb 00110000b
 397:     -	2428  30      	    defb 00110000b
 398:     -	2429  20      	    defb 00100000b
 399:     -	242A  00      	    defb 00000000b
 400:     -	242B  00      	    defb 00000000b
 401:     -	242C  00      	    defb 00000000b
 402:     -	242D  00      	    defb 00000000b
 403:     -	242E  00      	    defb 00000000b
 404:				
 405:				    ; code=40, hex=0x28, ascii="("
 406:     -	242F  10      	    defb 00010000b
 407:     -	2430  20      	    defb 00100000b
 408:     -	2431  20      	    defb 00100000b
 409:     -	2432  20      	    defb 00100000b
 410:     -	2433  20      	    defb 00100000b
 411:     -	2434  20      	    defb 00100000b
 412:     -	2435  10      	    defb 00010000b
 413:     -	2436  00      	    defb 00000000b
 414:				
 415:				    ; code=41, hex=0x29, ascii=")"
 416:     -	2437  20      	    defb 00100000b
 417:     -	2438  10      	    defb 00010000b
 418:     -	2439  10      	    defb 00010000b
 419:     -	243A  10      	    defb 00010000b
 420:     -	243B  10      	    defb 00010000b
 421:     -	243C  10      	    defb 00010000b
 422:     -	243D  20      	    defb 00100000b
 423:     -	243E  00      	    defb 00000000b
 424:				
 425:				    ; code=42, hex=0x2A, ascii="*"
 426:     -	243F  00      	    defb 00000000b
 427:     -	2440  28      	    defb 00101000b
 428:     -	2441  38      	    defb 00111000b
 429:     -	2442  7C      	    defb 01111100b
 430:     -	2443  38      	    defb 00111000b
 431:     -	2444  28      	    defb 00101000b
 432:     -	2445  00      	    defb 00000000b
 433:     -	2446  00      	    defb 00000000b
 434:				
 435:				    ; code=43, hex=0x2B, ascii="+"
 436:     -	2447  00      	    defb 00000000b
 437:     -	2448  10      	    defb 00010000b
 438:     -	2449  10      	    defb 00010000b
 439:     -	244A  7C      	    defb 01111100b
 440:     -	244B  10      	    defb 00010000b
 441:     -	244C  10      	    defb 00010000b
 442:     -	244D  00      	    defb 00000000b
 443:     -	244E  00      	    defb 00000000b
 444:				
 445:				    ; code=44, hex=0x2C, ascii=","
 446:     -	244F  00      	    defb 00000000b
 447:     -	2450  00      	    defb 00000000b
 448:     -	2451  00      	    defb 00000000b
 449:     -	2452  00      	    defb 00000000b
 450:     -	2453  00      	    defb 00000000b
 451:     -	2454  30      	    defb 00110000b
 452:     -	2455  30      	    defb 00110000b
 453:     -	2456  20      	    defb 00100000b
 454:				
 455:				    ; code=45, hex=0x2D, ascii="-"
 456:     -	2457  00      	    defb 00000000b
 457:     -	2458  00      	    defb 00000000b
 458:     -	2459  00      	    defb 00000000b
 459:     -	245A  7C      	    defb 01111100b
 460:     -	245B  00      	    defb 00000000b
 461:     -	245C  00      	    defb 00000000b
 462:     -	245D  00      	    defb 00000000b
 463:     -	245E  00      	    defb 00000000b
 464:				
 465:				    ; code=46, hex=0x2E, ascii="."
 466:     -	245F  00      	    defb 00000000b
 467:     -	2460  00      	    defb 00000000b
 468:     -	2461  00      	    defb 00000000b
 469:     -	2462  00      	    defb 00000000b
 470:     -	2463  00      	    defb 00000000b
 471:     -	2464  30      	    defb 00110000b
 472:     -	2465  30      	    defb 00110000b
 473:     -	2466  00      	    defb 00000000b
 474:				
 475:				    ; code=47, hex=0x2F, ascii="/"
 476:     -	2467  00      	    defb 00000000b
 477:     -	2468  04      	    defb 00000100b
 478:     -	2469  08      	    defb 00001000b
 479:     -	246A  10      	    defb 00010000b
 480:     -	246B  20      	    defb 00100000b
 481:     -	246C  40      	    defb 01000000b
 482:     -	246D  00      	    defb 00000000b
 483:     -	246E  00      	    defb 00000000b
 484:				
 485:				    ; code=48, hex=0x30, ascii="0"
 486:     -	246F  38      	    defb 00111000b
 487:     -	2470  44      	    defb 01000100b
 488:     -	2471  4C      	    defb 01001100b
 489:     -	2472  54      	    defb 01010100b
 490:     -	2473  64      	    defb 01100100b
 491:     -	2474  44      	    defb 01000100b
 492:     -	2475  38      	    defb 00111000b
 493:     -	2476  00      	    defb 00000000b
 494:				
 495:				    ; code=49, hex=0x31, ascii="1"
 496:     -	2477  10      	    defb 00010000b
 497:     -	2478  30      	    defb 00110000b
 498:     -	2479  10      	    defb 00010000b
 499:     -	247A  10      	    defb 00010000b
 500:     -	247B  10      	    defb 00010000b
 501:     -	247C  10      	    defb 00010000b
 502:     -	247D  38      	    defb 00111000b
 503:     -	247E  00      	    defb 00000000b
 504:				
 505:				    ; code=50, hex=0x32, ascii="2"
 506:     -	247F  38      	    defb 00111000b
 507:     -	2480  44      	    defb 01000100b
 508:     -	2481  04      	    defb 00000100b
 509:     -	2482  18      	    defb 00011000b
 510:     -	2483  20      	    defb 00100000b
 511:     -	2484  40      	    defb 01000000b
 512:     -	2485  7C      	    defb 01111100b
 513:     -	2486  00      	    defb 00000000b
 514:				
 515:				    ; code=51, hex=0x33, ascii="3"
 516:     -	2487  38      	    defb 00111000b
 517:     -	2488  44      	    defb 01000100b
 518:     -	2489  04      	    defb 00000100b
 519:     -	248A  38      	    defb 00111000b
 520:     -	248B  04      	    defb 00000100b
 521:     -	248C  44      	    defb 01000100b
 522:     -	248D  38      	    defb 00111000b
 523:     -	248E  00      	    defb 00000000b
 524:				
 525:				    ; code=52, hex=0x34, ascii="4"
 526:     -	248F  08      	    defb 00001000b
 527:     -	2490  18      	    defb 00011000b
 528:     -	2491  28      	    defb 00101000b
 529:     -	2492  48      	    defb 01001000b
 530:     -	2493  7C      	    defb 01111100b
 531:     -	2494  08      	    defb 00001000b
 532:     -	2495  08      	    defb 00001000b
 533:     -	2496  00      	    defb 00000000b
 534:				
 535:				    ; code=53, hex=0x35, ascii="5"
 536:     -	2497  7C      	    defb 01111100b
 537:     -	2498  40      	    defb 01000000b
 538:     -	2499  40      	    defb 01000000b
 539:     -	249A  78      	    defb 01111000b
 540:     -	249B  04      	    defb 00000100b
 541:     -	249C  44      	    defb 01000100b
 542:     -	249D  38      	    defb 00111000b
 543:     -	249E  00      	    defb 00000000b
 544:				
 545:				    ; code=54, hex=0x36, ascii="6"
 546:     -	249F  18      	    defb 00011000b
 547:     -	24A0  20      	    defb 00100000b
 548:     -	24A1  40      	    defb 01000000b
 549:     -	24A2  78      	    defb 01111000b
 550:     -	24A3  44      	    defb 01000100b
 551:     -	24A4  44      	    defb 01000100b
 552:     -	24A5  38      	    defb 00111000b
 553:     -	24A6  00      	    defb 00000000b
 554:				
 555:				    ; code=55, hex=0x37, ascii="7"
 556:     -	24A7  7C      	    defb 01111100b
 557:     -	24A8  04      	    defb 00000100b
 558:     -	24A9  08      	    defb 00001000b
 559:     -	24AA  10      	    defb 00010000b
 560:     -	24AB  20      	    defb 00100000b
 561:     -	24AC  20      	    defb 00100000b
 562:     -	24AD  20      	    defb 00100000b
 563:     -	24AE  00      	    defb 00000000b
 564:				
 565:				    ; code=56, hex=0x38, ascii="8"
 566:     -	24AF  38      	    defb 00111000b
 567:     -	24B0  44      	    defb 01000100b
 568:     -	24B1  44      	    defb 01000100b
 569:     -	24B2  38      	    defb 00111000b
 570:     -	24B3  44      	    defb 01000100b
 571:     -	24B4  44      	    defb 01000100b
 572:     -	24B5  38      	    defb 00111000b
 573:     -	24B6  00      	    defb 00000000b
 574:				
 575:				    ; code=57, hex=0x39, ascii="9"
 576:     -	24B7  38      	    defb 00111000b
 577:     -	24B8  44      	    defb 01000100b
 578:     -	24B9  44      	    defb 01000100b
 579:     -	24BA  3C      	    defb 00111100b
 580:     -	24BB  04      	    defb 00000100b
 581:     -	24BC  08      	    defb 00001000b
 582:     -	24BD  30      	    defb 00110000b
 583:     -	24BE  00      	    defb 00000000b
 584:				
 585:				    ; code=58, hex=0x3A, ascii=":"
 586:     -	24BF  00      	    defb 00000000b
 587:     -	24C0  00      	    defb 00000000b
 588:     -	24C1  30      	    defb 00110000b
 589:     -	24C2  30      	    defb 00110000b
 590:     -	24C3  00      	    defb 00000000b
 591:     -	24C4  30      	    defb 00110000b
 592:     -	24C5  30      	    defb 00110000b
 593:     -	24C6  00      	    defb 00000000b
 594:				
 595:				    ; code=59, hex=0x3B, ascii=";"
 596:     -	24C7  00      	    defb 00000000b
 597:     -	24C8  00      	    defb 00000000b
 598:     -	24C9  30      	    defb 00110000b
 599:     -	24CA  30      	    defb 00110000b
 600:     -	24CB  00      	    defb 00000000b
 601:     -	24CC  30      	    defb 00110000b
 602:     -	24CD  30      	    defb 00110000b
 603:     -	24CE  20      	    defb 00100000b
 604:				
 605:				    ; code=60, hex=0x3C, ascii="<"
 606:     -	24CF  08      	    defb 00001000b
 607:     -	24D0  10      	    defb 00010000b
 608:     -	24D1  20      	    defb 00100000b
 609:     -	24D2  40      	    defb 01000000b
 610:     -	24D3  20      	    defb 00100000b
 611:     -	24D4  10      	    defb 00010000b
 612:     -	24D5  08      	    defb 00001000b
 613:     -	24D6  00      	    defb 00000000b
 614:				
 615:				    ; code=61, hex=0x3D, ascii="="
 616:     -	24D7  00      	    defb 00000000b
 617:     -	24D8  00      	    defb 00000000b
 618:     -	24D9  7C      	    defb 01111100b
 619:     -	24DA  00      	    defb 00000000b
 620:     -	24DB  00      	    defb 00000000b
 621:     -	24DC  7C      	    defb 01111100b
 622:     -	24DD  00      	    defb 00000000b
 623:     -	24DE  00      	    defb 00000000b
 624:				
 625:				    ; code=62, hex=0x3E, ascii=">"
 626:     -	24DF  20      	    defb 00100000b
 627:     -	24E0  10      	    defb 00010000b
 628:     -	24E1  08      	    defb 00001000b
 629:     -	24E2  04      	    defb 00000100b
 630:     -	24E3  08      	    defb 00001000b
 631:     -	24E4  10      	    defb 00010000b
 632:     -	24E5  20      	    defb 00100000b
 633:     -	24E6  00      	    defb 00000000b
 634:				
 635:				    ; code=63, hex=0x3F, ascii="?"
 636:     -	24E7  38      	    defb 00111000b
 637:     -	24E8  44      	    defb 01000100b
 638:     -	24E9  04      	    defb 00000100b
 639:     -	24EA  18      	    defb 00011000b
 640:     -	24EB  10      	    defb 00010000b
 641:     -	24EC  00      	    defb 00000000b
 642:     -	24ED  10      	    defb 00010000b
 643:     -	24EE  00      	    defb 00000000b
 644:				
 645:				    ; code=64, hex=0x40, ascii="@"
 646:     -	24EF  38      	    defb 00111000b
 647:     -	24F0  44      	    defb 01000100b
 648:     -	24F1  5C      	    defb 01011100b
 649:     -	24F2  54      	    defb 01010100b
 650:     -	24F3  5C      	    defb 01011100b
 651:     -	24F4  40      	    defb 01000000b
 652:     -	24F5  38      	    defb 00111000b
 653:     -	24F6  00      	    defb 00000000b
 654:				
 655:				    ; code=65, hex=0x41, ascii="A"
 656:     -	24F7  38      	    defb 00111000b
 657:     -	24F8  44      	    defb 01000100b
 658:     -	24F9  44      	    defb 01000100b
 659:     -	24FA  44      	    defb 01000100b
 660:     -	24FB  7C      	    defb 01111100b
 661:     -	24FC  44      	    defb 01000100b
 662:     -	24FD  44      	    defb 01000100b
 663:     -	24FE  00      	    defb 00000000b
 664:				
 665:				    ; code=66, hex=0x42, ascii="B"
 666:     -	24FF  78      	    defb 01111000b
 667:     -	2500  44      	    defb 01000100b
 668:     -	2501  44      	    defb 01000100b
 669:     -	2502  78      	    defb 01111000b
 670:     -	2503  44      	    defb 01000100b
 671:     -	2504  44      	    defb 01000100b
 672:     -	2505  78      	    defb 01111000b
 673:     -	2506  00      	    defb 00000000b
 674:				
 675:				    ; code=67, hex=0x43, ascii="C"
 676:     -	2507  38      	    defb 00111000b
 677:     -	2508  44      	    defb 01000100b
 678:     -	2509  40      	    defb 01000000b
 679:     -	250A  40      	    defb 01000000b
 680:     -	250B  40      	    defb 01000000b
 681:     -	250C  44      	    defb 01000100b
 682:     -	250D  38      	    defb 00111000b
 683:     -	250E  00      	    defb 00000000b
 684:				
 685:				    ; code=68, hex=0x44, ascii="D"
 686:     -	250F  78      	    defb 01111000b
 687:     -	2510  44      	    defb 01000100b
 688:     -	2511  44      	    defb 01000100b
 689:     -	2512  44      	    defb 01000100b
 690:     -	2513  44      	    defb 01000100b
 691:     -	2514  44      	    defb 01000100b
 692:     -	2515  78      	    defb 01111000b
 693:     -	2516  00      	    defb 00000000b
 694:				
 695:				    ; code=69, hex=0x45, ascii="E"
 696:     -	2517  7C      	    defb 01111100b
 697:     -	2518  40      	    defb 01000000b
 698:     -	2519  40      	    defb 01000000b
 699:     -	251A  78      	    defb 01111000b
 700:     -	251B  40      	    defb 01000000b
 701:     -	251C  40      	    defb 01000000b
 702:     -	251D  7C      	    defb 01111100b
 703:     -	251E  00      	    defb 00000000b
 704:				
 705:				    ; code=70, hex=0x46, ascii="F"
 706:     -	251F  7C      	    defb 01111100b
 707:     -	2520  40      	    defb 01000000b
 708:     -	2521  40      	    defb 01000000b
 709:     -	2522  78      	    defb 01111000b
 710:     -	2523  40      	    defb 01000000b
 711:     -	2524  40      	    defb 01000000b
 712:     -	2525  40      	    defb 01000000b
 713:     -	2526  00      	    defb 00000000b
 714:				
 715:				    ; code=71, hex=0x47, ascii="G"
 716:     -	2527  38      	    defb 00111000b
 717:     -	2528  44      	    defb 01000100b
 718:     -	2529  40      	    defb 01000000b
 719:     -	252A  5C      	    defb 01011100b
 720:     -	252B  44      	    defb 01000100b
 721:     -	252C  44      	    defb 01000100b
 722:     -	252D  3C      	    defb 00111100b
 723:     -	252E  00      	    defb 00000000b
 724:				
 725:				    ; code=72, hex=0x48, ascii="H"
 726:     -	252F  44      	    defb 01000100b
 727:     -	2530  44      	    defb 01000100b
 728:     -	2531  44      	    defb 01000100b
 729:     -	2532  7C      	    defb 01111100b
 730:     -	2533  44      	    defb 01000100b
 731:     -	2534  44      	    defb 01000100b
 732:     -	2535  44      	    defb 01000100b
 733:     -	2536  00      	    defb 00000000b
 734:				
 735:				    ; code=73, hex=0x49, ascii="I"
 736:     -	2537  38      	    defb 00111000b
 737:     -	2538  10      	    defb 00010000b
 738:     -	2539  10      	    defb 00010000b
 739:     -	253A  10      	    defb 00010000b
 740:     -	253B  10      	    defb 00010000b
 741:     -	253C  10      	    defb 00010000b
 742:     -	253D  38      	    defb 00111000b
 743:     -	253E  00      	    defb 00000000b
 744:				
 745:				    ; code=74, hex=0x4A, ascii="J"
 746:     -	253F  04      	    defb 00000100b
 747:     -	2540  04      	    defb 00000100b
 748:     -	2541  04      	    defb 00000100b
 749:     -	2542  04      	    defb 00000100b
 750:     -	2543  44      	    defb 01000100b
 751:     -	2544  44      	    defb 01000100b
 752:     -	2545  38      	    defb 00111000b
 753:     -	2546  00      	    defb 00000000b
 754:				
 755:				    ; code=75, hex=0x4B, ascii="K"
 756:     -	2547  44      	    defb 01000100b
 757:     -	2548  48      	    defb 01001000b
 758:     -	2549  50      	    defb 01010000b
 759:     -	254A  60      	    defb 01100000b
 760:     -	254B  50      	    defb 01010000b
 761:     -	254C  48      	    defb 01001000b
 762:     -	254D  44      	    defb 01000100b
 763:     -	254E  00      	    defb 00000000b
 764:				
 765:				    ; code=76, hex=0x4C, ascii="L"
 766:     -	254F  40      	    defb 01000000b
 767:     -	2550  40      	    defb 01000000b
 768:     -	2551  40      	    defb 01000000b
 769:     -	2552  40      	    defb 01000000b
 770:     -	2553  40      	    defb 01000000b
 771:     -	2554  40      	    defb 01000000b
 772:     -	2555  7C      	    defb 01111100b
 773:     -	2556  00      	    defb 00000000b
 774:				
 775:				    ; code=77, hex=0x4D, ascii="M"
 776:     -	2557  44      	    defb 01000100b
 777:     -	2558  6C      	    defb 01101100b
 778:     -	2559  54      	    defb 01010100b
 779:     -	255A  44      	    defb 01000100b
 780:     -	255B  44      	    defb 01000100b
 781:     -	255C  44      	    defb 01000100b
 782:     -	255D  44      	    defb 01000100b
 783:     -	255E  00      	    defb 00000000b
 784:				
 785:				    ; code=78, hex=0x4E, ascii="N"
 786:     -	255F  44      	    defb 01000100b
 787:     -	2560  64      	    defb 01100100b
 788:     -	2561  54      	    defb 01010100b
 789:     -	2562  4C      	    defb 01001100b
 790:     -	2563  44      	    defb 01000100b
 791:     -	2564  44      	    defb 01000100b
 792:     -	2565  44      	    defb 01000100b
 793:     -	2566  00      	    defb 00000000b
 794:				
 795:				    ; code=79, hex=0x4F, ascii="O"
 796:     -	2567  38      	    defb 00111000b
 797:     -	2568  44      	    defb 01000100b
 798:     -	2569  44      	    defb 01000100b
 799:     -	256A  44      	    defb 01000100b
 800:     -	256B  44      	    defb 01000100b
 801:     -	256C  44      	    defb 01000100b
 802:     -	256D  38      	    defb 00111000b
 803:     -	256E  00      	    defb 00000000b
 804:				
 805:				    ; code=80, hex=0x50, ascii="P"
 806:     -	256F  78      	    defb 01111000b
 807:     -	2570  44      	    defb 01000100b
 808:     -	2571  44      	    defb 01000100b
 809:     -	2572  78      	    defb 01111000b
 810:     -	2573  40      	    defb 01000000b
 811:     -	2574  40      	    defb 01000000b
 812:     -	2575  40      	    defb 01000000b
 813:     -	2576  00      	    defb 00000000b
 814:				
 815:				    ; code=81, hex=0x51, ascii="Q"
 816:     -	2577  38      	    defb 00111000b
 817:     -	2578  44      	    defb 01000100b
 818:     -	2579  44      	    defb 01000100b
 819:     -	257A  44      	    defb 01000100b
 820:     -	257B  54      	    defb 01010100b
 821:     -	257C  48      	    defb 01001000b
 822:     -	257D  34      	    defb 00110100b
 823:     -	257E  00      	    defb 00000000b
 824:				
 825:				    ; code=82, hex=0x52, ascii="R"
 826:     -	257F  78      	    defb 01111000b
 827:     -	2580  44      	    defb 01000100b
 828:     -	2581  44      	    defb 01000100b
 829:     -	2582  78      	    defb 01111000b
 830:     -	2583  48      	    defb 01001000b
 831:     -	2584  44      	    defb 01000100b
 832:     -	2585  44      	    defb 01000100b
 833:     -	2586  00      	    defb 00000000b
 834:				
 835:				    ; code=83, hex=0x53, ascii="S"
 836:     -	2587  38      	    defb 00111000b
 837:     -	2588  44      	    defb 01000100b
 838:     -	2589  40      	    defb 01000000b
 839:     -	258A  38      	    defb 00111000b
 840:     -	258B  04      	    defb 00000100b
 841:     -	258C  44      	    defb 01000100b
 842:     -	258D  38      	    defb 00111000b
 843:     -	258E  00      	    defb 00000000b
 844:				
 845:				    ; code=84, hex=0x54, ascii="T"
 846:     -	258F  7C      	    defb 01111100b
 847:     -	2590  10      	    defb 00010000b
 848:     -	2591  10      	    defb 00010000b
 849:     -	2592  10      	    defb 00010000b
 850:     -	2593  10      	    defb 00010000b
 851:     -	2594  10      	    defb 00010000b
 852:     -	2595  10      	    defb 00010000b
 853:     -	2596  00      	    defb 00000000b
 854:				
 855:				    ; code=85, hex=0x55, ascii="U"
 856:     -	2597  44      	    defb 01000100b
 857:     -	2598  44      	    defb 01000100b
 858:     -	2599  44      	    defb 01000100b
 859:     -	259A  44      	    defb 01000100b
 860:     -	259B  44      	    defb 01000100b
 861:     -	259C  44      	    defb 01000100b
 862:     -	259D  38      	    defb 00111000b
 863:     -	259E  00      	    defb 00000000b
 864:				
 865:				    ; code=86, hex=0x56, ascii="V"
 866:     -	259F  44      	    defb 01000100b
 867:     -	25A0  44      	    defb 01000100b
 868:     -	25A1  44      	    defb 01000100b
 869:     -	25A2  44      	    defb 01000100b
 870:     -	25A3  44      	    defb 01000100b
 871:     -	25A4  28      	    defb 00101000b
 872:     -	25A5  10      	    defb 00010000b
 873:     -	25A6  00      	    defb 00000000b
 874:				
 875:				    ; code=87, hex=0x57, ascii="W"
 876:     -	25A7  44      	    defb 01000100b
 877:     -	25A8  44      	    defb 01000100b
 878:     -	25A9  54      	    defb 01010100b
 879:     -	25AA  54      	    defb 01010100b
 880:     -	25AB  54      	    defb 01010100b
 881:     -	25AC  54      	    defb 01010100b
 882:     -	25AD  28      	    defb 00101000b
 883:     -	25AE  00      	    defb 00000000b
 884:				
 885:				    ; code=88, hex=0x58, ascii="X"
 886:     -	25AF  44      	    defb 01000100b
 887:     -	25B0  44      	    defb 01000100b
 888:     -	25B1  28      	    defb 00101000b
 889:     -	25B2  10      	    defb 00010000b
 890:     -	25B3  28      	    defb 00101000b
 891:     -	25B4  44      	    defb 01000100b
 892:     -	25B5  44      	    defb 01000100b
 893:     -	25B6  00      	    defb 00000000b
 894:				
 895:				    ; code=89, hex=0x59, ascii="Y"
 896:     -	25B7  44      	    defb 01000100b
 897:     -	25B8  44      	    defb 01000100b
 898:     -	25B9  44      	    defb 01000100b
 899:     -	25BA  28      	    defb 00101000b
 900:     -	25BB  10      	    defb 00010000b
 901:     -	25BC  10      	    defb 00010000b
 902:     -	25BD  10      	    defb 00010000b
 903:     -	25BE  00      	    defb 00000000b
 904:				
 905:				    ; code=90, hex=0x5A, ascii="Z"
 906:     -	25BF  78      	    defb 01111000b
 907:     -	25C0  08      	    defb 00001000b
 908:     -	25C1  10      	    defb 00010000b
 909:     -	25C2  20      	    defb 00100000b
 910:     -	25C3  40      	    defb 01000000b
 911:     -	25C4  40      	    defb 01000000b
 912:     -	25C5  78      	    defb 01111000b
 913:     -	25C6  00      	    defb 00000000b
 914:				
 915:				    ; code=91, hex=0x5B, ascii="["
 916:     -	25C7  38      	    defb 00111000b
 917:     -	25C8  20      	    defb 00100000b
 918:     -	25C9  20      	    defb 00100000b
 919:     -	25CA  20      	    defb 00100000b
 920:     -	25CB  20      	    defb 00100000b
 921:     -	25CC  20      	    defb 00100000b
 922:     -	25CD  38      	    defb 00111000b
 923:     -	25CE  00      	    defb 00000000b
 924:				
 925:				    ; code=92, hex=0x5C, ascii="\"
 926:     -	25CF  00      	    defb 00000000b
 927:     -	25D0  40      	    defb 01000000b
 928:     -	25D1  20      	    defb 00100000b
 929:     -	25D2  10      	    defb 00010000b
 930:     -	25D3  08      	    defb 00001000b
 931:     -	25D4  04      	    defb 00000100b
 932:     -	25D5  00      	    defb 00000000b
 933:     -	25D6  00      	    defb 00000000b
 934:				
 935:				    ; code=93, hex=0x5D, ascii="]"
 936:     -	25D7  38      	    defb 00111000b
 937:     -	25D8  08      	    defb 00001000b
 938:     -	25D9  08      	    defb 00001000b
 939:     -	25DA  08      	    defb 00001000b
 940:     -	25DB  08      	    defb 00001000b
 941:     -	25DC  08      	    defb 00001000b
 942:     -	25DD  38      	    defb 00111000b
 943:     -	25DE  00      	    defb 00000000b
 944:				
 945:				    ; code=94, hex=0x5E, ascii="^"
 946:     -	25DF  10      	    defb 00010000b
 947:     -	25E0  28      	    defb 00101000b
 948:     -	25E1  44      	    defb 01000100b
 949:     -	25E2  00      	    defb 00000000b
 950:     -	25E3  00      	    defb 00000000b
 951:     -	25E4  00      	    defb 00000000b
 952:     -	25E5  00      	    defb 00000000b
 953:     -	25E6  00      	    defb 00000000b
 954:				
 955:				    ; code=95, hex=0x5F, ascii="_"
 956:     -	25E7  00      	    defb 00000000b
 957:     -	25E8  00      	    defb 00000000b
 958:     -	25E9  00      	    defb 00000000b
 959:     -	25EA  00      	    defb 00000000b
 960:     -	25EB  00      	    defb 00000000b
 961:     -	25EC  00      	    defb 00000000b
 962:     -	25ED  00      	    defb 00000000b
 963:     -	25EE  FC      	    defb 11111100b
 964:				
 965:				    ; code=96, hex=0x60, ascii="`"
 966:     -	25EF  30      	    defb 00110000b
 967:     -	25F0  30      	    defb 00110000b
 968:     -	25F1  10      	    defb 00010000b
 969:     -	25F2  00      	    defb 00000000b
 970:     -	25F3  00      	    defb 00000000b
 971:     -	25F4  00      	    defb 00000000b
 972:     -	25F5  00      	    defb 00000000b
 973:     -	25F6  00      	    defb 00000000b
 974:				
 975:				    ; code=97, hex=0x61, ascii="a"
 976:     -	25F7  00      	    defb 00000000b
 977:     -	25F8  00      	    defb 00000000b
 978:     -	25F9  38      	    defb 00111000b
 979:     -	25FA  04      	    defb 00000100b
 980:     -	25FB  3C      	    defb 00111100b
 981:     -	25FC  44      	    defb 01000100b
 982:     -	25FD  3C      	    defb 00111100b
 983:     -	25FE  00      	    defb 00000000b
 984:				
 985:				    ; code=98, hex=0x62, ascii="b"
 986:     -	25FF  40      	    defb 01000000b
 987:     -	2600  40      	    defb 01000000b
 988:     -	2601  78      	    defb 01111000b
 989:     -	2602  44      	    defb 01000100b
 990:     -	2603  44      	    defb 01000100b
 991:     -	2604  44      	    defb 01000100b
 992:     -	2605  78      	    defb 01111000b
 993:     -	2606  00      	    defb 00000000b
 994:				
 995:				    ; code=99, hex=0x63, ascii="c"
 996:     -	2607  00      	    defb 00000000b
 997:     -	2608  00      	    defb 00000000b
 998:     -	2609  38      	    defb 00111000b
 999:     -	260A  44      	    defb 01000100b
1000:     -	260B  40      	    defb 01000000b
1001:     -	260C  44      	    defb 01000100b
1002:     -	260D  38      	    defb 00111000b
1003:     -	260E  00      	    defb 00000000b
1004:				
1005:				    ; code=100, hex=0x64, ascii="d"
1006:     -	260F  04      	    defb 00000100b
1007:     -	2610  04      	    defb 00000100b
1008:     -	2611  3C      	    defb 00111100b
1009:     -	2612  44      	    defb 01000100b
1010:     -	2613  44      	    defb 01000100b
1011:     -	2614  44      	    defb 01000100b
1012:     -	2615  3C      	    defb 00111100b
1013:     -	2616  00      	    defb 00000000b
1014:				
1015:				    ; code=101, hex=0x65, ascii="e"
1016:     -	2617  00      	    defb 00000000b
1017:     -	2618  00      	    defb 00000000b
1018:     -	2619  38      	    defb 00111000b
1019:     -	261A  44      	    defb 01000100b
1020:     -	261B  78      	    defb 01111000b
1021:     -	261C  40      	    defb 01000000b
1022:     -	261D  38      	    defb 00111000b
1023:     -	261E  00      	    defb 00000000b
1024:				
1025:				    ; code=102, hex=0x66, ascii="f"
1026:     -	261F  18      	    defb 00011000b
1027:     -	2620  20      	    defb 00100000b
1028:     -	2621  20      	    defb 00100000b
1029:     -	2622  78      	    defb 01111000b
1030:     -	2623  20      	    defb 00100000b
1031:     -	2624  20      	    defb 00100000b
1032:     -	2625  20      	    defb 00100000b
1033:     -	2626  00      	    defb 00000000b
1034:				
1035:				    ; code=103, hex=0x67, ascii="g"
1036:     -	2627  00      	    defb 00000000b
1037:     -	2628  00      	    defb 00000000b
1038:     -	2629  3C      	    defb 00111100b
1039:     -	262A  44      	    defb 01000100b
1040:     -	262B  44      	    defb 01000100b
1041:     -	262C  3C      	    defb 00111100b
1042:     -	262D  04      	    defb 00000100b
1043:     -	262E  38      	    defb 00111000b
1044:				
1045:				    ; code=104, hex=0x68, ascii="h"
1046:     -	262F  40      	    defb 01000000b
1047:     -	2630  40      	    defb 01000000b
1048:     -	2631  70      	    defb 01110000b
1049:     -	2632  48      	    defb 01001000b
1050:     -	2633  48      	    defb 01001000b
1051:     -	2634  48      	    defb 01001000b
1052:     -	2635  48      	    defb 01001000b
1053:     -	2636  00      	    defb 00000000b
1054:				
1055:				    ; code=105, hex=0x69, ascii="i"
1056:     -	2637  10      	    defb 00010000b
1057:     -	2638  00      	    defb 00000000b
1058:     -	2639  10      	    defb 00010000b
1059:     -	263A  10      	    defb 00010000b
1060:     -	263B  10      	    defb 00010000b
1061:     -	263C  10      	    defb 00010000b
1062:     -	263D  18      	    defb 00011000b
1063:     -	263E  00      	    defb 00000000b
1064:				
1065:				    ; code=106, hex=0x6A, ascii="j"
1066:     -	263F  08      	    defb 00001000b
1067:     -	2640  00      	    defb 00000000b
1068:     -	2641  18      	    defb 00011000b
1069:     -	2642  08      	    defb 00001000b
1070:     -	2643  08      	    defb 00001000b
1071:     -	2644  08      	    defb 00001000b
1072:     -	2645  48      	    defb 01001000b
1073:     -	2646  30      	    defb 00110000b
1074:				
1075:				    ; code=107, hex=0x6B, ascii="k"
1076:     -	2647  40      	    defb 01000000b
1077:     -	2648  40      	    defb 01000000b
1078:     -	2649  48      	    defb 01001000b
1079:     -	264A  50      	    defb 01010000b
1080:     -	264B  60      	    defb 01100000b
1081:     -	264C  50      	    defb 01010000b
1082:     -	264D  48      	    defb 01001000b
1083:     -	264E  00      	    defb 00000000b
1084:				
1085:				    ; code=108, hex=0x6C, ascii="l"
1086:     -	264F  10      	    defb 00010000b
1087:     -	2650  10      	    defb 00010000b
1088:     -	2651  10      	    defb 00010000b
1089:     -	2652  10      	    defb 00010000b
1090:     -	2653  10      	    defb 00010000b
1091:     -	2654  10      	    defb 00010000b
1092:     -	2655  18      	    defb 00011000b
1093:     -	2656  00      	    defb 00000000b
1094:				
1095:				    ; code=109, hex=0x6D, ascii="m"
1096:     -	2657  00      	    defb 00000000b
1097:     -	2658  00      	    defb 00000000b
1098:     -	2659  68      	    defb 01101000b
1099:     -	265A  54      	    defb 01010100b
1100:     -	265B  54      	    defb 01010100b
1101:     -	265C  44      	    defb 01000100b
1102:     -	265D  44      	    defb 01000100b
1103:     -	265E  00      	    defb 00000000b
1104:				
1105:				    ; code=110, hex=0x6E, ascii="n"
1106:     -	265F  00      	    defb 00000000b
1107:     -	2660  00      	    defb 00000000b
1108:     -	2661  70      	    defb 01110000b
1109:     -	2662  48      	    defb 01001000b
1110:     -	2663  48      	    defb 01001000b
1111:     -	2664  48      	    defb 01001000b
1112:     -	2665  48      	    defb 01001000b
1113:     -	2666  00      	    defb 00000000b
1114:				
1115:				    ; code=111, hex=0x6F, ascii="o"
1116:     -	2667  00      	    defb 00000000b
1117:     -	2668  00      	    defb 00000000b
1118:     -	2669  38      	    defb 00111000b
1119:     -	266A  44      	    defb 01000100b
1120:     -	266B  44      	    defb 01000100b
1121:     -	266C  44      	    defb 01000100b
1122:     -	266D  38      	    defb 00111000b
1123:     -	266E  00      	    defb 00000000b
1124:				
1125:				    ; code=112, hex=0x70, ascii="p"
1126:     -	266F  00      	    defb 00000000b
1127:     -	2670  00      	    defb 00000000b
1128:     -	2671  78      	    defb 01111000b
1129:     -	2672  44      	    defb 01000100b
1130:     -	2673  44      	    defb 01000100b
1131:     -	2674  44      	    defb 01000100b
1132:     -	2675  78      	    defb 01111000b
1133:     -	2676  40      	    defb 01000000b
1134:				
1135:				    ; code=113, hex=0x71, ascii="q"
1136:     -	2677  00      	    defb 00000000b
1137:     -	2678  00      	    defb 00000000b
1138:     -	2679  3C      	    defb 00111100b
1139:     -	267A  44      	    defb 01000100b
1140:     -	267B  44      	    defb 01000100b
1141:     -	267C  44      	    defb 01000100b
1142:     -	267D  3C      	    defb 00111100b
1143:     -	267E  04      	    defb 00000100b
1144:				
1145:				    ; code=114, hex=0x72, ascii="r"
1146:     -	267F  00      	    defb 00000000b
1147:     -	2680  00      	    defb 00000000b
1148:     -	2681  58      	    defb 01011000b
1149:     -	2682  24      	    defb 00100100b
1150:     -	2683  20      	    defb 00100000b
1151:     -	2684  20      	    defb 00100000b
1152:     -	2685  70      	    defb 01110000b
1153:     -	2686  00      	    defb 00000000b
1154:				
1155:				    ; code=115, hex=0x73, ascii="s"
1156:     -	2687  00      	    defb 00000000b
1157:     -	2688  00      	    defb 00000000b
1158:     -	2689  38      	    defb 00111000b
1159:     -	268A  40      	    defb 01000000b
1160:     -	268B  38      	    defb 00111000b
1161:     -	268C  04      	    defb 00000100b
1162:     -	268D  38      	    defb 00111000b
1163:     -	268E  00      	    defb 00000000b
1164:				
1165:				    ; code=116, hex=0x74, ascii="t"
1166:     -	268F  00      	    defb 00000000b
1167:     -	2690  20      	    defb 00100000b
1168:     -	2691  78      	    defb 01111000b
1169:     -	2692  20      	    defb 00100000b
1170:     -	2693  20      	    defb 00100000b
1171:     -	2694  28      	    defb 00101000b
1172:     -	2695  10      	    defb 00010000b
1173:     -	2696  00      	    defb 00000000b
1174:				
1175:				    ; code=117, hex=0x75, ascii="u"
1176:     -	2697  00      	    defb 00000000b
1177:     -	2698  00      	    defb 00000000b
1178:     -	2699  48      	    defb 01001000b
1179:     -	269A  48      	    defb 01001000b
1180:     -	269B  48      	    defb 01001000b
1181:     -	269C  58      	    defb 01011000b
1182:     -	269D  28      	    defb 00101000b
1183:     -	269E  00      	    defb 00000000b
1184:				
1185:				    ; code=118, hex=0x76, ascii="v"
1186:     -	269F  00      	    defb 00000000b
1187:     -	26A0  00      	    defb 00000000b
1188:     -	26A1  44      	    defb 01000100b
1189:     -	26A2  44      	    defb 01000100b
1190:     -	26A3  44      	    defb 01000100b
1191:     -	26A4  28      	    defb 00101000b
1192:     -	26A5  10      	    defb 00010000b
1193:     -	26A6  00      	    defb 00000000b
1194:				
1195:				    ; code=119, hex=0x77, ascii="w"
1196:     -	26A7  00      	    defb 00000000b
1197:     -	26A8  00      	    defb 00000000b
1198:     -	26A9  44      	    defb 01000100b
1199:     -	26AA  44      	    defb 01000100b
1200:     -	26AB  54      	    defb 01010100b
1201:     -	26AC  7C      	    defb 01111100b
1202:     -	26AD  28      	    defb 00101000b
1203:     -	26AE  00      	    defb 00000000b
1204:				
1205:				    ; code=120, hex=0x78, ascii="x"
1206:     -	26AF  00      	    defb 00000000b
1207:     -	26B0  00      	    defb 00000000b
1208:     -	26B1  48      	    defb 01001000b
1209:     -	26B2  48      	    defb 01001000b
1210:     -	26B3  30      	    defb 00110000b
1211:     -	26B4  48      	    defb 01001000b
1212:     -	26B5  48      	    defb 01001000b
1213:     -	26B6  00      	    defb 00000000b
1214:				
1215:				    ; code=121, hex=0x79, ascii="y"
1216:     -	26B7  00      	    defb 00000000b
1217:     -	26B8  00      	    defb 00000000b
1218:     -	26B9  48      	    defb 01001000b
1219:     -	26BA  48      	    defb 01001000b
1220:     -	26BB  48      	    defb 01001000b
1221:     -	26BC  38      	    defb 00111000b
1222:     -	26BD  10      	    defb 00010000b
1223:     -	26BE  60      	    defb 01100000b
1224:				
1225:				    ; code=122, hex=0x7A, ascii="z"
1226:     -	26BF  00      	    defb 00000000b
1227:     -	26C0  00      	    defb 00000000b
1228:     -	26C1  78      	    defb 01111000b
1229:     -	26C2  08      	    defb 00001000b
1230:     -	26C3  30      	    defb 00110000b
1231:     -	26C4  40      	    defb 01000000b
1232:     -	26C5  78      	    defb 01111000b
1233:     -	26C6  00      	    defb 00000000b
1234:				
1235:				    ; code=123, hex=0x7B, ascii="{"
1236:     -	26C7  18      	    defb 00011000b
1237:     -	26C8  20      	    defb 00100000b
1238:     -	26C9  20      	    defb 00100000b
1239:     -	26CA  60      	    defb 01100000b
1240:     -	26CB  20      	    defb 00100000b
1241:     -	26CC  20      	    defb 00100000b
1242:     -	26CD  18      	    defb 00011000b
1243:     -	26CE  00      	    defb 00000000b
1244:				
1245:				    ; code=124, hex=0x7C, ascii="|"
1246:     -	26CF  10      	    defb 00010000b
1247:     -	26D0  10      	    defb 00010000b
1248:     -	26D1  10      	    defb 00010000b
1249:     -	26D2  00      	    defb 00000000b
1250:     -	26D3  10      	    defb 00010000b
1251:     -	26D4  10      	    defb 00010000b
1252:     -	26D5  10      	    defb 00010000b
1253:     -	26D6  00      	    defb 00000000b
1254:				
1255:				    ; code=125, hex=0x7D, ascii="}"
1256:     -	26D7  30      	    defb 00110000b
1257:     -	26D8  08      	    defb 00001000b
1258:     -	26D9  08      	    defb 00001000b
1259:     -	26DA  0C      	    defb 00001100b
1260:     -	26DB  08      	    defb 00001000b
1261:     -	26DC  08      	    defb 00001000b
1262:     -	26DD  30      	    defb 00110000b
1263:     -	26DE  00      	    defb 00000000b
1264:				
1265:				    ; code=126, hex=0x7E, ascii="~"
1266:     -	26DF  28      	    defb 00101000b
1267:     -	26E0  50      	    defb 01010000b
1268:     -	26E1  00      	    defb 00000000b
1269:     -	26E2  00      	    defb 00000000b
1270:     -	26E3  00      	    defb 00000000b
1271:     -	26E4  00      	    defb 00000000b
1272:     -	26E5  00      	    defb 00000000b
1273:     -	26E6  00      	    defb 00000000b
1274:				
1275:				    ; code=127, hex=0x7F, ascii="^?"
1276:     -	26E7  10      	    defb 00010000b
1277:     -	26E8  38      	    defb 00111000b
1278:     -	26E9  6C      	    defb 01101100b
1279:     -	26EA  44      	    defb 01000100b
1280:     -	26EB  44      	    defb 01000100b
1281:     -	26EC  7C      	    defb 01111100b
1282:     -	26ED  00      	    defb 00000000b
1283:     -	26EE  00      	    defb 00000000b
1284:				
1285:				    ; code=128, hex=0x80, ascii="!^@"
1286:     -	26EF  38      	    defb 00111000b
1287:     -	26F0  44      	    defb 01000100b
1288:     -	26F1  40      	    defb 01000000b
1289:     -	26F2  40      	    defb 01000000b
1290:     -	26F3  44      	    defb 01000100b
1291:     -	26F4  38      	    defb 00111000b
1292:     -	26F5  10      	    defb 00010000b
1293:     -	26F6  30      	    defb 00110000b
1294:				
1295:				    ; code=129, hex=0x81, ascii="!^A"
1296:     -	26F7  48      	    defb 01001000b
1297:     -	26F8  00      	    defb 00000000b
1298:     -	26F9  48      	    defb 01001000b
1299:     -	26FA  48      	    defb 01001000b
1300:     -	26FB  48      	    defb 01001000b
1301:     -	26FC  58      	    defb 01011000b
1302:     -	26FD  28      	    defb 00101000b
1303:     -	26FE  00      	    defb 00000000b
1304:				
1305:				    ; code=130, hex=0x82, ascii="!^B"
1306:     -	26FF  0C      	    defb 00001100b
1307:     -	2700  00      	    defb 00000000b
1308:     -	2701  38      	    defb 00111000b
1309:     -	2702  44      	    defb 01000100b
1310:     -	2703  78      	    defb 01111000b
1311:     -	2704  40      	    defb 01000000b
1312:     -	2705  38      	    defb 00111000b
1313:     -	2706  00      	    defb 00000000b
1314:				
1315:				    ; code=131, hex=0x83, ascii="!^C"
1316:     -	2707  38      	    defb 00111000b
1317:     -	2708  00      	    defb 00000000b
1318:     -	2709  38      	    defb 00111000b
1319:     -	270A  04      	    defb 00000100b
1320:     -	270B  3C      	    defb 00111100b
1321:     -	270C  44      	    defb 01000100b
1322:     -	270D  3C      	    defb 00111100b
1323:     -	270E  00      	    defb 00000000b
1324:				
1325:				    ; code=132, hex=0x84, ascii="!^D"
1326:     -	270F  28      	    defb 00101000b
1327:     -	2710  00      	    defb 00000000b
1328:     -	2711  38      	    defb 00111000b
1329:     -	2712  04      	    defb 00000100b
1330:     -	2713  3C      	    defb 00111100b
1331:     -	2714  44      	    defb 01000100b
1332:     -	2715  3C      	    defb 00111100b
1333:     -	2716  00      	    defb 00000000b
1334:				
1335:				    ; code=133, hex=0x85, ascii="!^E"
1336:     -	2717  30      	    defb 00110000b
1337:     -	2718  00      	    defb 00000000b
1338:     -	2719  38      	    defb 00111000b
1339:     -	271A  04      	    defb 00000100b
1340:     -	271B  3C      	    defb 00111100b
1341:     -	271C  44      	    defb 01000100b
1342:     -	271D  3C      	    defb 00111100b
1343:     -	271E  00      	    defb 00000000b
1344:				
1345:				    ; code=134, hex=0x86, ascii="!^F"
1346:     -	271F  38      	    defb 00111000b
1347:     -	2720  28      	    defb 00101000b
1348:     -	2721  38      	    defb 00111000b
1349:     -	2722  04      	    defb 00000100b
1350:     -	2723  3C      	    defb 00111100b
1351:     -	2724  44      	    defb 01000100b
1352:     -	2725  3C      	    defb 00111100b
1353:     -	2726  00      	    defb 00000000b
1354:				
1355:				    ; code=135, hex=0x87, ascii="!^G"
1356:     -	2727  00      	    defb 00000000b
1357:     -	2728  38      	    defb 00111000b
1358:     -	2729  44      	    defb 01000100b
1359:     -	272A  40      	    defb 01000000b
1360:     -	272B  44      	    defb 01000100b
1361:     -	272C  38      	    defb 00111000b
1362:     -	272D  10      	    defb 00010000b
1363:     -	272E  30      	    defb 00110000b
1364:				
1365:				    ; code=136, hex=0x88, ascii="!^H"
1366:     -	272F  38      	    defb 00111000b
1367:     -	2730  00      	    defb 00000000b
1368:     -	2731  38      	    defb 00111000b
1369:     -	2732  44      	    defb 01000100b
1370:     -	2733  78      	    defb 01111000b
1371:     -	2734  40      	    defb 01000000b
1372:     -	2735  38      	    defb 00111000b
1373:     -	2736  00      	    defb 00000000b
1374:				
1375:				    ; code=137, hex=0x89, ascii="!^I"
1376:     -	2737  28      	    defb 00101000b
1377:     -	2738  00      	    defb 00000000b
1378:     -	2739  38      	    defb 00111000b
1379:     -	273A  44      	    defb 01000100b
1380:     -	273B  78      	    defb 01111000b
1381:     -	273C  40      	    defb 01000000b
1382:     -	273D  38      	    defb 00111000b
1383:     -	273E  00      	    defb 00000000b
1384:				
1385:				    ; code=138, hex=0x8A, ascii="!^J"
1386:     -	273F  30      	    defb 00110000b
1387:     -	2740  00      	    defb 00000000b
1388:     -	2741  38      	    defb 00111000b
1389:     -	2742  44      	    defb 01000100b
1390:     -	2743  78      	    defb 01111000b
1391:     -	2744  40      	    defb 01000000b
1392:     -	2745  38      	    defb 00111000b
1393:     -	2746  00      	    defb 00000000b
1394:				
1395:				    ; code=139, hex=0x8B, ascii="!^K"
1396:     -	2747  28      	    defb 00101000b
1397:     -	2748  00      	    defb 00000000b
1398:     -	2749  10      	    defb 00010000b
1399:     -	274A  10      	    defb 00010000b
1400:     -	274B  10      	    defb 00010000b
1401:     -	274C  10      	    defb 00010000b
1402:     -	274D  18      	    defb 00011000b
1403:     -	274E  00      	    defb 00000000b
1404:				
1405:				    ; code=140, hex=0x8C, ascii="!^L"
1406:     -	274F  10      	    defb 00010000b
1407:     -	2750  28      	    defb 00101000b
1408:     -	2751  00      	    defb 00000000b
1409:     -	2752  10      	    defb 00010000b
1410:     -	2753  10      	    defb 00010000b
1411:     -	2754  10      	    defb 00010000b
1412:     -	2755  18      	    defb 00011000b
1413:     -	2756  00      	    defb 00000000b
1414:				
1415:				    ; code=141, hex=0x8D, ascii="!^M"
1416:     -	2757  20      	    defb 00100000b
1417:     -	2758  00      	    defb 00000000b
1418:     -	2759  10      	    defb 00010000b
1419:     -	275A  10      	    defb 00010000b
1420:     -	275B  10      	    defb 00010000b
1421:     -	275C  10      	    defb 00010000b
1422:     -	275D  18      	    defb 00011000b
1423:     -	275E  00      	    defb 00000000b
1424:				
1425:				    ; code=142, hex=0x8E, ascii="!^N"
1426:     -	275F  28      	    defb 00101000b
1427:     -	2760  00      	    defb 00000000b
1428:     -	2761  10      	    defb 00010000b
1429:     -	2762  28      	    defb 00101000b
1430:     -	2763  44      	    defb 01000100b
1431:     -	2764  7C      	    defb 01111100b
1432:     -	2765  44      	    defb 01000100b
1433:     -	2766  00      	    defb 00000000b
1434:				
1435:				    ; code=143, hex=0x8F, ascii="!^O"
1436:     -	2767  38      	    defb 00111000b
1437:     -	2768  28      	    defb 00101000b
1438:     -	2769  38      	    defb 00111000b
1439:     -	276A  6C      	    defb 01101100b
1440:     -	276B  44      	    defb 01000100b
1441:     -	276C  7C      	    defb 01111100b
1442:     -	276D  44      	    defb 01000100b
1443:     -	276E  00      	    defb 00000000b
1444:				
1445:				    ; code=144, hex=0x90, ascii="!^P"
1446:     -	276F  0C      	    defb 00001100b
1447:     -	2770  00      	    defb 00000000b
1448:     -	2771  7C      	    defb 01111100b
1449:     -	2772  40      	    defb 01000000b
1450:     -	2773  78      	    defb 01111000b
1451:     -	2774  40      	    defb 01000000b
1452:     -	2775  7C      	    defb 01111100b
1453:     -	2776  00      	    defb 00000000b
1454:				
1455:				    ; code=145, hex=0x91, ascii="!^Q"
1456:     -	2777  00      	    defb 00000000b
1457:     -	2778  00      	    defb 00000000b
1458:     -	2779  78      	    defb 01111000b
1459:     -	277A  14      	    defb 00010100b
1460:     -	277B  7C      	    defb 01111100b
1461:     -	277C  50      	    defb 01010000b
1462:     -	277D  3C      	    defb 00111100b
1463:     -	277E  00      	    defb 00000000b
1464:				
1465:				    ; code=146, hex=0x92, ascii="!^R"
1466:     -	277F  3C      	    defb 00111100b
1467:     -	2780  50      	    defb 01010000b
1468:     -	2781  50      	    defb 01010000b
1469:     -	2782  7C      	    defb 01111100b
1470:     -	2783  50      	    defb 01010000b
1471:     -	2784  50      	    defb 01010000b
1472:     -	2785  5C      	    defb 01011100b
1473:     -	2786  00      	    defb 00000000b
1474:				
1475:				    ; code=147, hex=0x93, ascii="!^S"
1476:     -	2787  38      	    defb 00111000b
1477:     -	2788  00      	    defb 00000000b
1478:     -	2789  30      	    defb 00110000b
1479:     -	278A  48      	    defb 01001000b
1480:     -	278B  48      	    defb 01001000b
1481:     -	278C  48      	    defb 01001000b
1482:     -	278D  30      	    defb 00110000b
1483:     -	278E  00      	    defb 00000000b
1484:				
1485:				    ; code=148, hex=0x94, ascii="!^T"
1486:     -	278F  28      	    defb 00101000b
1487:     -	2790  00      	    defb 00000000b
1488:     -	2791  30      	    defb 00110000b
1489:     -	2792  48      	    defb 01001000b
1490:     -	2793  48      	    defb 01001000b
1491:     -	2794  48      	    defb 01001000b
1492:     -	2795  30      	    defb 00110000b
1493:     -	2796  00      	    defb 00000000b
1494:				
1495:				    ; code=149, hex=0x95, ascii="!^U"
1496:     -	2797  60      	    defb 01100000b
1497:     -	2798  00      	    defb 00000000b
1498:     -	2799  30      	    defb 00110000b
1499:     -	279A  48      	    defb 01001000b
1500:     -	279B  48      	    defb 01001000b
1501:     -	279C  48      	    defb 01001000b
1502:     -	279D  30      	    defb 00110000b
1503:     -	279E  00      	    defb 00000000b
1504:				
1505:				    ; code=150, hex=0x96, ascii="!^V"
1506:     -	279F  38      	    defb 00111000b
1507:     -	27A0  00      	    defb 00000000b
1508:     -	27A1  48      	    defb 01001000b
1509:     -	27A2  48      	    defb 01001000b
1510:     -	27A3  48      	    defb 01001000b
1511:     -	27A4  58      	    defb 01011000b
1512:     -	27A5  28      	    defb 00101000b
1513:     -	27A6  00      	    defb 00000000b
1514:				
1515:				    ; code=151, hex=0x97, ascii="!^W"
1516:     -	27A7  60      	    defb 01100000b
1517:     -	27A8  00      	    defb 00000000b
1518:     -	27A9  48      	    defb 01001000b
1519:     -	27AA  48      	    defb 01001000b
1520:     -	27AB  48      	    defb 01001000b
1521:     -	27AC  58      	    defb 01011000b
1522:     -	27AD  28      	    defb 00101000b
1523:     -	27AE  00      	    defb 00000000b
1524:				
1525:				    ; code=152, hex=0x98, ascii="!^X"
1526:     -	27AF  28      	    defb 00101000b
1527:     -	27B0  00      	    defb 00000000b
1528:     -	27B1  48      	    defb 01001000b
1529:     -	27B2  48      	    defb 01001000b
1530:     -	27B3  48      	    defb 01001000b
1531:     -	27B4  38      	    defb 00111000b
1532:     -	27B5  10      	    defb 00010000b
1533:     -	27B6  60      	    defb 01100000b
1534:				
1535:				    ; code=153, hex=0x99, ascii="!^Y"
1536:     -	27B7  48      	    defb 01001000b
1537:     -	27B8  30      	    defb 00110000b
1538:     -	27B9  48      	    defb 01001000b
1539:     -	27BA  48      	    defb 01001000b
1540:     -	27BB  48      	    defb 01001000b
1541:     -	27BC  48      	    defb 01001000b
1542:     -	27BD  30      	    defb 00110000b
1543:     -	27BE  00      	    defb 00000000b
1544:				
1545:				    ; code=154, hex=0x9A, ascii="!^Z"
1546:     -	27BF  28      	    defb 00101000b
1547:     -	27C0  00      	    defb 00000000b
1548:     -	27C1  48      	    defb 01001000b
1549:     -	27C2  48      	    defb 01001000b
1550:     -	27C3  48      	    defb 01001000b
1551:     -	27C4  48      	    defb 01001000b
1552:     -	27C5  30      	    defb 00110000b
1553:     -	27C6  00      	    defb 00000000b
1554:				
1555:				    ; code=155, hex=0x9B, ascii="!^["
1556:     -	27C7  00      	    defb 00000000b
1557:     -	27C8  10      	    defb 00010000b
1558:     -	27C9  38      	    defb 00111000b
1559:     -	27CA  40      	    defb 01000000b
1560:     -	27CB  40      	    defb 01000000b
1561:     -	27CC  38      	    defb 00111000b
1562:     -	27CD  10      	    defb 00010000b
1563:     -	27CE  00      	    defb 00000000b
1564:				
1565:				    ; code=156, hex=0x9C, ascii="!^\"
1566:     -	27CF  18      	    defb 00011000b
1567:     -	27D0  24      	    defb 00100100b
1568:     -	27D1  20      	    defb 00100000b
1569:     -	27D2  78      	    defb 01111000b
1570:     -	27D3  20      	    defb 00100000b
1571:     -	27D4  24      	    defb 00100100b
1572:     -	27D5  5C      	    defb 01011100b
1573:     -	27D6  00      	    defb 00000000b
1574:				
1575:				    ; code=157, hex=0x9D, ascii="!^]"
1576:     -	27D7  44      	    defb 01000100b
1577:     -	27D8  28      	    defb 00101000b
1578:     -	27D9  10      	    defb 00010000b
1579:     -	27DA  7C      	    defb 01111100b
1580:     -	27DB  10      	    defb 00010000b
1581:     -	27DC  7C      	    defb 01111100b
1582:     -	27DD  10      	    defb 00010000b
1583:     -	27DE  00      	    defb 00000000b
1584:				
1585:				    ; code=158, hex=0x9E, ascii="!^^"
1586:     -	27DF  60      	    defb 01100000b
1587:     -	27E0  50      	    defb 01010000b
1588:     -	27E1  50      	    defb 01010000b
1589:     -	27E2  68      	    defb 01101000b
1590:     -	27E3  5C      	    defb 01011100b
1591:     -	27E4  48      	    defb 01001000b
1592:     -	27E5  48      	    defb 01001000b
1593:     -	27E6  00      	    defb 00000000b
1594:				
1595:				    ; code=159, hex=0x9F, ascii="!^_"
1596:     -	27E7  08      	    defb 00001000b
1597:     -	27E8  14      	    defb 00010100b
1598:     -	27E9  10      	    defb 00010000b
1599:     -	27EA  38      	    defb 00111000b
1600:     -	27EB  10      	    defb 00010000b
1601:     -	27EC  10      	    defb 00010000b
1602:     -	27ED  50      	    defb 01010000b
1603:     -	27EE  20      	    defb 00100000b
1604:				
1605:				    ; code=160, hex=0xA0, ascii="! "
1606:     -	27EF  18      	    defb 00011000b
1607:     -	27F0  00      	    defb 00000000b
1608:     -	27F1  38      	    defb 00111000b
1609:     -	27F2  04      	    defb 00000100b
1610:     -	27F3  3C      	    defb 00111100b
1611:     -	27F4  44      	    defb 01000100b
1612:     -	27F5  3C      	    defb 00111100b
1613:     -	27F6  00      	    defb 00000000b
1614:				
1615:				    ; code=161, hex=0xA1, ascii="!!"
1616:     -	27F7  18      	    defb 00011000b
1617:     -	27F8  00      	    defb 00000000b
1618:     -	27F9  10      	    defb 00010000b
1619:     -	27FA  10      	    defb 00010000b
1620:     -	27FB  10      	    defb 00010000b
1621:     -	27FC  10      	    defb 00010000b
1622:     -	27FD  18      	    defb 00011000b
1623:     -	27FE  00      	    defb 00000000b
1624:				
1625:				    ; code=162, hex=0xA2, ascii="!""
1626:     -	27FF  18      	    defb 00011000b
1627:     -	2800  00      	    defb 00000000b
1628:     -	2801  30      	    defb 00110000b
1629:     -	2802  48      	    defb 01001000b
1630:     -	2803  48      	    defb 01001000b
1631:     -	2804  48      	    defb 01001000b
1632:     -	2805  30      	    defb 00110000b
1633:     -	2806  00      	    defb 00000000b
1634:				
1635:				    ; code=163, hex=0xA3, ascii="!#"
1636:     -	2807  18      	    defb 00011000b
1637:     -	2808  00      	    defb 00000000b
1638:     -	2809  48      	    defb 01001000b
1639:     -	280A  48      	    defb 01001000b
1640:     -	280B  48      	    defb 01001000b
1641:     -	280C  58      	    defb 01011000b
1642:     -	280D  28      	    defb 00101000b
1643:     -	280E  00      	    defb 00000000b
1644:				
1645:				    ; code=164, hex=0xA4, ascii="!$"
1646:     -	280F  28      	    defb 00101000b
1647:     -	2810  50      	    defb 01010000b
1648:     -	2811  00      	    defb 00000000b
1649:     -	2812  70      	    defb 01110000b
1650:     -	2813  48      	    defb 01001000b
1651:     -	2814  48      	    defb 01001000b
1652:     -	2815  48      	    defb 01001000b
1653:     -	2816  00      	    defb 00000000b
1654:				
1655:				    ; code=165, hex=0xA5, ascii="!"
1656:     -	2817  28      	    defb 00101000b
1657:     -	2818  50      	    defb 01010000b
1658:     -	2819  00      	    defb 00000000b
1659:     -	281A  48      	    defb 01001000b
1660:     -	281B  68      	    defb 01101000b
1661:     -	281C  58      	    defb 01011000b
1662:     -	281D  48      	    defb 01001000b
1663:     -	281E  00      	    defb 00000000b
1664:				
1665:				    ; code=166, hex=0xA6, ascii="!&"
1666:     -	281F  38      	    defb 00111000b
1667:     -	2820  04      	    defb 00000100b
1668:     -	2821  3C      	    defb 00111100b
1669:     -	2822  44      	    defb 01000100b
1670:     -	2823  3C      	    defb 00111100b
1671:     -	2824  00      	    defb 00000000b
1672:     -	2825  3C      	    defb 00111100b
1673:     -	2826  00      	    defb 00000000b
1674:				
1675:				    ; code=167, hex=0xA7, ascii="!'"
1676:     -	2827  30      	    defb 00110000b
1677:     -	2828  48      	    defb 01001000b
1678:     -	2829  48      	    defb 01001000b
1679:     -	282A  48      	    defb 01001000b
1680:     -	282B  30      	    defb 00110000b
1681:     -	282C  00      	    defb 00000000b
1682:     -	282D  78      	    defb 01111000b
1683:     -	282E  00      	    defb 00000000b
1684:				
1685:				    ; code=168, hex=0xA8, ascii="!("
1686:     -	282F  10      	    defb 00010000b
1687:     -	2830  00      	    defb 00000000b
1688:     -	2831  10      	    defb 00010000b
1689:     -	2832  30      	    defb 00110000b
1690:     -	2833  40      	    defb 01000000b
1691:     -	2834  44      	    defb 01000100b
1692:     -	2835  38      	    defb 00111000b
1693:     -	2836  00      	    defb 00000000b
1694:				
1695:				    ; code=169, hex=0xA9, ascii="!)"
1696:     -	2837  00      	    defb 00000000b
1697:     -	2838  00      	    defb 00000000b
1698:     -	2839  7C      	    defb 01111100b
1699:     -	283A  40      	    defb 01000000b
1700:     -	283B  40      	    defb 01000000b
1701:     -	283C  40      	    defb 01000000b
1702:     -	283D  00      	    defb 00000000b
1703:     -	283E  00      	    defb 00000000b
1704:				
1705:				    ; code=170, hex=0xAA, ascii="!*"
1706:     -	283F  00      	    defb 00000000b
1707:     -	2840  00      	    defb 00000000b
1708:     -	2841  FC      	    defb 11111100b
1709:     -	2842  04      	    defb 00000100b
1710:     -	2843  04      	    defb 00000100b
1711:     -	2844  00      	    defb 00000000b
1712:     -	2845  00      	    defb 00000000b
1713:     -	2846  00      	    defb 00000000b
1714:				
1715:				    ; code=171, hex=0xAB, ascii="!+"
1716:     -	2847  40      	    defb 01000000b
1717:     -	2848  48      	    defb 01001000b
1718:     -	2849  50      	    defb 01010000b
1719:     -	284A  38      	    defb 00111000b
1720:     -	284B  44      	    defb 01000100b
1721:     -	284C  08      	    defb 00001000b
1722:     -	284D  1C      	    defb 00011100b
1723:     -	284E  00      	    defb 00000000b
1724:				
1725:				    ; code=172, hex=0xAC, ascii="!,"
1726:     -	284F  40      	    defb 01000000b
1727:     -	2850  48      	    defb 01001000b
1728:     -	2851  50      	    defb 01010000b
1729:     -	2852  2C      	    defb 00101100b
1730:     -	2853  54      	    defb 01010100b
1731:     -	2854  1C      	    defb 00011100b
1732:     -	2855  04      	    defb 00000100b
1733:     -	2856  00      	    defb 00000000b
1734:				
1735:				    ; code=173, hex=0xAD, ascii="!-"
1736:     -	2857  10      	    defb 00010000b
1737:     -	2858  00      	    defb 00000000b
1738:     -	2859  10      	    defb 00010000b
1739:     -	285A  10      	    defb 00010000b
1740:     -	285B  38      	    defb 00111000b
1741:     -	285C  38      	    defb 00111000b
1742:     -	285D  10      	    defb 00010000b
1743:     -	285E  00      	    defb 00000000b
1744:				
1745:				    ; code=174, hex=0xAE, ascii="!."
1746:     -	285F  00      	    defb 00000000b
1747:     -	2860  00      	    defb 00000000b
1748:     -	2861  24      	    defb 00100100b
1749:     -	2862  48      	    defb 01001000b
1750:     -	2863  24      	    defb 00100100b
1751:     -	2864  00      	    defb 00000000b
1752:     -	2865  00      	    defb 00000000b
1753:     -	2866  00      	    defb 00000000b
1754:				
1755:				    ; code=175, hex=0xAF, ascii="!/"
1756:     -	2867  00      	    defb 00000000b
1757:     -	2868  00      	    defb 00000000b
1758:     -	2869  48      	    defb 01001000b
1759:     -	286A  24      	    defb 00100100b
1760:     -	286B  48      	    defb 01001000b
1761:     -	286C  00      	    defb 00000000b
1762:     -	286D  00      	    defb 00000000b
1763:     -	286E  00      	    defb 00000000b
1764:				
1765:				    ; code=176, hex=0xB0, ascii="!0"
1766:     -	286F  54      	    defb 01010100b
1767:     -	2870  00      	    defb 00000000b
1768:     -	2871  A8      	    defb 10101000b
1769:     -	2872  00      	    defb 00000000b
1770:     -	2873  54      	    defb 01010100b
1771:     -	2874  00      	    defb 00000000b
1772:     -	2875  A8      	    defb 10101000b
1773:     -	2876  00      	    defb 00000000b
1774:				
1775:				    ; code=177, hex=0xB1, ascii="!1"
1776:     -	2877  54      	    defb 01010100b
1777:     -	2878  A8      	    defb 10101000b
1778:     -	2879  54      	    defb 01010100b
1779:     -	287A  A8      	    defb 10101000b
1780:     -	287B  54      	    defb 01010100b
1781:     -	287C  A8      	    defb 10101000b
1782:     -	287D  54      	    defb 01010100b
1783:     -	287E  A8      	    defb 10101000b
1784:				
1785:				    ; code=178, hex=0xB2, ascii="!2"
1786:     -	287F  A8      	    defb 10101000b
1787:     -	2880  FC      	    defb 11111100b
1788:     -	2881  54      	    defb 01010100b
1789:     -	2882  FC      	    defb 11111100b
1790:     -	2883  A8      	    defb 10101000b
1791:     -	2884  FC      	    defb 11111100b
1792:     -	2885  54      	    defb 01010100b
1793:     -	2886  FC      	    defb 11111100b
1794:				
1795:				    ; code=179, hex=0xB3, ascii="!3"
1796:     -	2887  10      	    defb 00010000b
1797:     -	2888  10      	    defb 00010000b
1798:     -	2889  10      	    defb 00010000b
1799:     -	288A  10      	    defb 00010000b
1800:     -	288B  10      	    defb 00010000b
1801:     -	288C  10      	    defb 00010000b
1802:     -	288D  10      	    defb 00010000b
1803:     -	288E  10      	    defb 00010000b
1804:				
1805:				    ; code=180, hex=0xB4, ascii="!4"
1806:     -	288F  10      	    defb 00010000b
1807:     -	2890  10      	    defb 00010000b
1808:     -	2891  10      	    defb 00010000b
1809:     -	2892  F0      	    defb 11110000b
1810:     -	2893  10      	    defb 00010000b
1811:     -	2894  10      	    defb 00010000b
1812:     -	2895  10      	    defb 00010000b
1813:     -	2896  10      	    defb 00010000b
1814:				
1815:				    ; code=181, hex=0xB5, ascii="!5"
1816:     -	2897  10      	    defb 00010000b
1817:     -	2898  F0      	    defb 11110000b
1818:     -	2899  10      	    defb 00010000b
1819:     -	289A  F0      	    defb 11110000b
1820:     -	289B  10      	    defb 00010000b
1821:     -	289C  10      	    defb 00010000b
1822:     -	289D  10      	    defb 00010000b
1823:     -	289E  10      	    defb 00010000b
1824:				
1825:				    ; code=182, hex=0xB6, ascii="!6"
1826:     -	289F  50      	    defb 01010000b
1827:     -	28A0  50      	    defb 01010000b
1828:     -	28A1  50      	    defb 01010000b
1829:     -	28A2  D0      	    defb 11010000b
1830:     -	28A3  50      	    defb 01010000b
1831:     -	28A4  50      	    defb 01010000b
1832:     -	28A5  50      	    defb 01010000b
1833:     -	28A6  50      	    defb 01010000b
1834:				
1835:				    ; code=183, hex=0xB7, ascii="!7"
1836:     -	28A7  00      	    defb 00000000b
1837:     -	28A8  00      	    defb 00000000b
1838:     -	28A9  00      	    defb 00000000b
1839:     -	28AA  F0      	    defb 11110000b
1840:     -	28AB  50      	    defb 01010000b
1841:     -	28AC  50      	    defb 01010000b
1842:     -	28AD  50      	    defb 01010000b
1843:     -	28AE  50      	    defb 01010000b
1844:				
1845:				    ; code=184, hex=0xB8, ascii="!8"
1846:     -	28AF  00      	    defb 00000000b
1847:     -	28B0  F0      	    defb 11110000b
1848:     -	28B1  10      	    defb 00010000b
1849:     -	28B2  F0      	    defb 11110000b
1850:     -	28B3  10      	    defb 00010000b
1851:     -	28B4  10      	    defb 00010000b
1852:     -	28B5  10      	    defb 00010000b
1853:     -	28B6  10      	    defb 00010000b
1854:				
1855:				    ; code=185, hex=0xB9, ascii="!9"
1856:     -	28B7  50      	    defb 01010000b
1857:     -	28B8  D0      	    defb 11010000b
1858:     -	28B9  10      	    defb 00010000b
1859:     -	28BA  D0      	    defb 11010000b
1860:     -	28BB  50      	    defb 01010000b
1861:     -	28BC  50      	    defb 01010000b
1862:     -	28BD  50      	    defb 01010000b
1863:     -	28BE  50      	    defb 01010000b
1864:				
1865:				    ; code=186, hex=0xBA, ascii="!:"
1866:     -	28BF  50      	    defb 01010000b
1867:     -	28C0  50      	    defb 01010000b
1868:     -	28C1  50      	    defb 01010000b
1869:     -	28C2  50      	    defb 01010000b
1870:     -	28C3  50      	    defb 01010000b
1871:     -	28C4  50      	    defb 01010000b
1872:     -	28C5  50      	    defb 01010000b
1873:     -	28C6  50      	    defb 01010000b
1874:				
1875:				    ; code=187, hex=0xBB, ascii="!;"
1876:     -	28C7  00      	    defb 00000000b
1877:     -	28C8  F0      	    defb 11110000b
1878:     -	28C9  10      	    defb 00010000b
1879:     -	28CA  D0      	    defb 11010000b
1880:     -	28CB  50      	    defb 01010000b
1881:     -	28CC  50      	    defb 01010000b
1882:     -	28CD  50      	    defb 01010000b
1883:     -	28CE  50      	    defb 01010000b
1884:				
1885:				    ; code=188, hex=0xBC, ascii="!<"
1886:     -	28CF  50      	    defb 01010000b
1887:     -	28D0  D0      	    defb 11010000b
1888:     -	28D1  10      	    defb 00010000b
1889:     -	28D2  F0      	    defb 11110000b
1890:     -	28D3  00      	    defb 00000000b
1891:     -	28D4  00      	    defb 00000000b
1892:     -	28D5  00      	    defb 00000000b
1893:     -	28D6  00      	    defb 00000000b
1894:				
1895:				    ; code=189, hex=0xBD, ascii="!="
1896:     -	28D7  50      	    defb 01010000b
1897:     -	28D8  50      	    defb 01010000b
1898:     -	28D9  50      	    defb 01010000b
1899:     -	28DA  F0      	    defb 11110000b
1900:     -	28DB  00      	    defb 00000000b
1901:     -	28DC  00      	    defb 00000000b
1902:     -	28DD  00      	    defb 00000000b
1903:     -	28DE  00      	    defb 00000000b
1904:				
1905:				    ; code=190, hex=0xBE, ascii="!>"
1906:     -	28DF  10      	    defb 00010000b
1907:     -	28E0  F0      	    defb 11110000b
1908:     -	28E1  10      	    defb 00010000b
1909:     -	28E2  F0      	    defb 11110000b
1910:     -	28E3  00      	    defb 00000000b
1911:     -	28E4  00      	    defb 00000000b
1912:     -	28E5  00      	    defb 00000000b
1913:     -	28E6  00      	    defb 00000000b
1914:				
1915:				    ; code=191, hex=0xBF, ascii="!?"
1916:     -	28E7  00      	    defb 00000000b
1917:     -	28E8  00      	    defb 00000000b
1918:     -	28E9  00      	    defb 00000000b
1919:     -	28EA  F0      	    defb 11110000b
1920:     -	28EB  10      	    defb 00010000b
1921:     -	28EC  10      	    defb 00010000b
1922:     -	28ED  10      	    defb 00010000b
1923:     -	28EE  10      	    defb 00010000b
1924:				
1925:				    ; code=192, hex=0xC0, ascii="!@"
1926:     -	28EF  10      	    defb 00010000b
1927:     -	28F0  10      	    defb 00010000b
1928:     -	28F1  10      	    defb 00010000b
1929:     -	28F2  1C      	    defb 00011100b
1930:     -	28F3  00      	    defb 00000000b
1931:     -	28F4  00      	    defb 00000000b
1932:     -	28F5  00      	    defb 00000000b
1933:     -	28F6  00      	    defb 00000000b
1934:				
1935:				    ; code=193, hex=0xC1, ascii="!A"
1936:     -	28F7  10      	    defb 00010000b
1937:     -	28F8  10      	    defb 00010000b
1938:     -	28F9  10      	    defb 00010000b
1939:     -	28FA  FC      	    defb 11111100b
1940:     -	28FB  00      	    defb 00000000b
1941:     -	28FC  00      	    defb 00000000b
1942:     -	28FD  00      	    defb 00000000b
1943:     -	28FE  00      	    defb 00000000b
1944:				
1945:				    ; code=194, hex=0xC2, ascii="!B"
1946:     -	28FF  00      	    defb 00000000b
1947:     -	2900  00      	    defb 00000000b
1948:     -	2901  00      	    defb 00000000b
1949:     -	2902  FC      	    defb 11111100b
1950:     -	2903  10      	    defb 00010000b
1951:     -	2904  10      	    defb 00010000b
1952:     -	2905  10      	    defb 00010000b
1953:     -	2906  10      	    defb 00010000b
1954:				
1955:				    ; code=195, hex=0xC3, ascii="!C"
1956:     -	2907  10      	    defb 00010000b
1957:     -	2908  10      	    defb 00010000b
1958:     -	2909  10      	    defb 00010000b
1959:     -	290A  1C      	    defb 00011100b
1960:     -	290B  10      	    defb 00010000b
1961:     -	290C  10      	    defb 00010000b
1962:     -	290D  10      	    defb 00010000b
1963:     -	290E  10      	    defb 00010000b
1964:				
1965:				    ; code=196, hex=0xC4, ascii="!D"
1966:     -	290F  00      	    defb 00000000b
1967:     -	2910  00      	    defb 00000000b
1968:     -	2911  00      	    defb 00000000b
1969:     -	2912  FC      	    defb 11111100b
1970:     -	2913  00      	    defb 00000000b
1971:     -	2914  00      	    defb 00000000b
1972:     -	2915  00      	    defb 00000000b
1973:     -	2916  00      	    defb 00000000b
1974:				
1975:				    ; code=197, hex=0xC5, ascii="!E"
1976:     -	2917  10      	    defb 00010000b
1977:     -	2918  10      	    defb 00010000b
1978:     -	2919  10      	    defb 00010000b
1979:     -	291A  FC      	    defb 11111100b
1980:     -	291B  10      	    defb 00010000b
1981:     -	291C  10      	    defb 00010000b
1982:     -	291D  10      	    defb 00010000b
1983:     -	291E  10      	    defb 00010000b
1984:				
1985:				    ; code=198, hex=0xC6, ascii="!F"
1986:     -	291F  10      	    defb 00010000b
1987:     -	2920  1C      	    defb 00011100b
1988:     -	2921  10      	    defb 00010000b
1989:     -	2922  1C      	    defb 00011100b
1990:     -	2923  10      	    defb 00010000b
1991:     -	2924  10      	    defb 00010000b
1992:     -	2925  10      	    defb 00010000b
1993:     -	2926  10      	    defb 00010000b
1994:				
1995:				    ; code=199, hex=0xC7, ascii="!G"
1996:     -	2927  50      	    defb 01010000b
1997:     -	2928  50      	    defb 01010000b
1998:     -	2929  50      	    defb 01010000b
1999:     -	292A  5C      	    defb 01011100b
2000:     -	292B  50      	    defb 01010000b
2001:     -	292C  50      	    defb 01010000b
2002:     -	292D  50      	    defb 01010000b
2003:     -	292E  50      	    defb 01010000b
2004:				
2005:				    ; code=200, hex=0xC8, ascii="!H"
2006:     -	292F  50      	    defb 01010000b
2007:     -	2930  5C      	    defb 01011100b
2008:     -	2931  40      	    defb 01000000b
2009:     -	2932  7C      	    defb 01111100b
2010:     -	2933  00      	    defb 00000000b
2011:     -	2934  00      	    defb 00000000b
2012:     -	2935  00      	    defb 00000000b
2013:     -	2936  00      	    defb 00000000b
2014:				
2015:				    ; code=201, hex=0xC9, ascii="!I"
2016:     -	2937  00      	    defb 00000000b
2017:     -	2938  7C      	    defb 01111100b
2018:     -	2939  40      	    defb 01000000b
2019:     -	293A  5C      	    defb 01011100b
2020:     -	293B  50      	    defb 01010000b
2021:     -	293C  50      	    defb 01010000b
2022:     -	293D  50      	    defb 01010000b
2023:     -	293E  50      	    defb 01010000b
2024:				
2025:				    ; code=202, hex=0xCA, ascii="!J"
2026:     -	293F  50      	    defb 01010000b
2027:     -	2940  DC      	    defb 11011100b
2028:     -	2941  00      	    defb 00000000b
2029:     -	2942  FC      	    defb 11111100b
2030:     -	2943  00      	    defb 00000000b
2031:     -	2944  00      	    defb 00000000b
2032:     -	2945  00      	    defb 00000000b
2033:     -	2946  00      	    defb 00000000b
2034:				
2035:				    ; code=203, hex=0xCB, ascii="!K"
2036:     -	2947  00      	    defb 00000000b
2037:     -	2948  FC      	    defb 11111100b
2038:     -	2949  00      	    defb 00000000b
2039:     -	294A  DC      	    defb 11011100b
2040:     -	294B  50      	    defb 01010000b
2041:     -	294C  50      	    defb 01010000b
2042:     -	294D  50      	    defb 01010000b
2043:     -	294E  50      	    defb 01010000b
2044:				
2045:				    ; code=204, hex=0xCC, ascii="!L"
2046:     -	294F  50      	    defb 01010000b
2047:     -	2950  5C      	    defb 01011100b
2048:     -	2951  40      	    defb 01000000b
2049:     -	2952  5C      	    defb 01011100b
2050:     -	2953  50      	    defb 01010000b
2051:     -	2954  50      	    defb 01010000b
2052:     -	2955  50      	    defb 01010000b
2053:     -	2956  50      	    defb 01010000b
2054:				
2055:				    ; code=205, hex=0xCD, ascii="!M"
2056:     -	2957  00      	    defb 00000000b
2057:     -	2958  FC      	    defb 11111100b
2058:     -	2959  00      	    defb 00000000b
2059:     -	295A  FC      	    defb 11111100b
2060:     -	295B  00      	    defb 00000000b
2061:     -	295C  00      	    defb 00000000b
2062:     -	295D  00      	    defb 00000000b
2063:     -	295E  00      	    defb 00000000b
2064:				
2065:				    ; code=206, hex=0xCE, ascii="!N"
2066:     -	295F  50      	    defb 01010000b
2067:     -	2960  DC      	    defb 11011100b
2068:     -	2961  00      	    defb 00000000b
2069:     -	2962  DC      	    defb 11011100b
2070:     -	2963  50      	    defb 01010000b
2071:     -	2964  50      	    defb 01010000b
2072:     -	2965  50      	    defb 01010000b
2073:     -	2966  50      	    defb 01010000b
2074:				
2075:				    ; code=207, hex=0xCF, ascii="!O"
2076:     -	2967  10      	    defb 00010000b
2077:     -	2968  FC      	    defb 11111100b
2078:     -	2969  00      	    defb 00000000b
2079:     -	296A  FC      	    defb 11111100b
2080:     -	296B  00      	    defb 00000000b
2081:     -	296C  00      	    defb 00000000b
2082:     -	296D  00      	    defb 00000000b
2083:     -	296E  00      	    defb 00000000b
2084:				
2085:				    ; code=208, hex=0xD0, ascii="!P"
2086:     -	296F  50      	    defb 01010000b
2087:     -	2970  50      	    defb 01010000b
2088:     -	2971  50      	    defb 01010000b
2089:     -	2972  FC      	    defb 11111100b
2090:     -	2973  00      	    defb 00000000b
2091:     -	2974  00      	    defb 00000000b
2092:     -	2975  00      	    defb 00000000b
2093:     -	2976  00      	    defb 00000000b
2094:				
2095:				    ; code=209, hex=0xD1, ascii="!Q"
2096:     -	2977  00      	    defb 00000000b
2097:     -	2978  FC      	    defb 11111100b
2098:     -	2979  00      	    defb 00000000b
2099:     -	297A  FC      	    defb 11111100b
2100:     -	297B  10      	    defb 00010000b
2101:     -	297C  10      	    defb 00010000b
2102:     -	297D  10      	    defb 00010000b
2103:     -	297E  10      	    defb 00010000b
2104:				
2105:				    ; code=210, hex=0xD2, ascii="!R"
2106:     -	297F  00      	    defb 00000000b
2107:     -	2980  00      	    defb 00000000b
2108:     -	2981  00      	    defb 00000000b
2109:     -	2982  FC      	    defb 11111100b
2110:     -	2983  50      	    defb 01010000b
2111:     -	2984  50      	    defb 01010000b
2112:     -	2985  50      	    defb 01010000b
2113:     -	2986  50      	    defb 01010000b
2114:				
2115:				    ; code=211, hex=0xD3, ascii="!S"
2116:     -	2987  50      	    defb 01010000b
2117:     -	2988  50      	    defb 01010000b
2118:     -	2989  50      	    defb 01010000b
2119:     -	298A  7C      	    defb 01111100b
2120:     -	298B  00      	    defb 00000000b
2121:     -	298C  00      	    defb 00000000b
2122:     -	298D  00      	    defb 00000000b
2123:     -	298E  00      	    defb 00000000b
2124:				
2125:				    ; code=212, hex=0xD4, ascii="!T"
2126:     -	298F  10      	    defb 00010000b
2127:     -	2990  1C      	    defb 00011100b
2128:     -	2991  10      	    defb 00010000b
2129:     -	2992  1C      	    defb 00011100b
2130:     -	2993  00      	    defb 00000000b
2131:     -	2994  00      	    defb 00000000b
2132:     -	2995  00      	    defb 00000000b
2133:     -	2996  00      	    defb 00000000b
2134:				
2135:				    ; code=213, hex=0xD5, ascii="!U"
2136:     -	2997  00      	    defb 00000000b
2137:     -	2998  1C      	    defb 00011100b
2138:     -	2999  10      	    defb 00010000b
2139:     -	299A  1C      	    defb 00011100b
2140:     -	299B  10      	    defb 00010000b
2141:     -	299C  10      	    defb 00010000b
2142:     -	299D  10      	    defb 00010000b
2143:     -	299E  10      	    defb 00010000b
2144:				
2145:				    ; code=214, hex=0xD6, ascii="!V"
2146:     -	299F  00      	    defb 00000000b
2147:     -	29A0  00      	    defb 00000000b
2148:     -	29A1  00      	    defb 00000000b
2149:     -	29A2  7C      	    defb 01111100b
2150:     -	29A3  50      	    defb 01010000b
2151:     -	29A4  50      	    defb 01010000b
2152:     -	29A5  50      	    defb 01010000b
2153:     -	29A6  50      	    defb 01010000b
2154:				
2155:				    ; code=215, hex=0xD7, ascii="!W"
2156:     -	29A7  50      	    defb 01010000b
2157:     -	29A8  50      	    defb 01010000b
2158:     -	29A9  50      	    defb 01010000b
2159:     -	29AA  DC      	    defb 11011100b
2160:     -	29AB  50      	    defb 01010000b
2161:     -	29AC  50      	    defb 01010000b
2162:     -	29AD  50      	    defb 01010000b
2163:     -	29AE  50      	    defb 01010000b
2164:				
2165:				    ; code=216, hex=0xD8, ascii="!X"
2166:     -	29AF  10      	    defb 00010000b
2167:     -	29B0  FC      	    defb 11111100b
2168:     -	29B1  00      	    defb 00000000b
2169:     -	29B2  FC      	    defb 11111100b
2170:     -	29B3  10      	    defb 00010000b
2171:     -	29B4  10      	    defb 00010000b
2172:     -	29B5  10      	    defb 00010000b
2173:     -	29B6  10      	    defb 00010000b
2174:				
2175:				    ; code=217, hex=0xD9, ascii="!Y"
2176:     -	29B7  10      	    defb 00010000b
2177:     -	29B8  10      	    defb 00010000b
2178:     -	29B9  10      	    defb 00010000b
2179:     -	29BA  F0      	    defb 11110000b
2180:     -	29BB  00      	    defb 00000000b
2181:     -	29BC  00      	    defb 00000000b
2182:     -	29BD  00      	    defb 00000000b
2183:     -	29BE  00      	    defb 00000000b
2184:				
2185:				    ; code=218, hex=0xDA, ascii="!Z"
2186:     -	29BF  00      	    defb 00000000b
2187:     -	29C0  00      	    defb 00000000b
2188:     -	29C1  00      	    defb 00000000b
2189:     -	29C2  1C      	    defb 00011100b
2190:     -	29C3  10      	    defb 00010000b
2191:     -	29C4  10      	    defb 00010000b
2192:     -	29C5  10      	    defb 00010000b
2193:     -	29C6  10      	    defb 00010000b
2194:				
2195:				    ; code=219, hex=0xDB, ascii="!["
2196:     -	29C7  FC      	    defb 11111100b
2197:     -	29C8  FC      	    defb 11111100b
2198:     -	29C9  FC      	    defb 11111100b
2199:     -	29CA  FC      	    defb 11111100b
2200:     -	29CB  FC      	    defb 11111100b
2201:     -	29CC  FC      	    defb 11111100b
2202:     -	29CD  FC      	    defb 11111100b
2203:     -	29CE  FC      	    defb 11111100b
2204:				
2205:				    ; code=220, hex=0xDC, ascii="!\"
2206:     -	29CF  00      	    defb 00000000b
2207:     -	29D0  00      	    defb 00000000b
2208:     -	29D1  00      	    defb 00000000b
2209:     -	29D2  00      	    defb 00000000b
2210:     -	29D3  FC      	    defb 11111100b
2211:     -	29D4  FC      	    defb 11111100b
2212:     -	29D5  FC      	    defb 11111100b
2213:     -	29D6  FC      	    defb 11111100b
2214:				
2215:				    ; code=221, hex=0xDD, ascii="!]"
2216:     -	29D7  E0      	    defb 11100000b
2217:     -	29D8  E0      	    defb 11100000b
2218:     -	29D9  E0      	    defb 11100000b
2219:     -	29DA  E0      	    defb 11100000b
2220:     -	29DB  E0      	    defb 11100000b
2221:     -	29DC  E0      	    defb 11100000b
2222:     -	29DD  E0      	    defb 11100000b
2223:     -	29DE  E0      	    defb 11100000b
2224:				
2225:				    ; code=222, hex=0xDE, ascii="!^"
2226:     -	29DF  1C      	    defb 00011100b
2227:     -	29E0  1C      	    defb 00011100b
2228:     -	29E1  1C      	    defb 00011100b
2229:     -	29E2  1C      	    defb 00011100b
2230:     -	29E3  1C      	    defb 00011100b
2231:     -	29E4  1C      	    defb 00011100b
2232:     -	29E5  1C      	    defb 00011100b
2233:     -	29E6  1C      	    defb 00011100b
2234:				
2235:				    ; code=223, hex=0xDF, ascii="!_"
2236:     -	29E7  FC      	    defb 11111100b
2237:     -	29E8  FC      	    defb 11111100b
2238:     -	29E9  FC      	    defb 11111100b
2239:     -	29EA  FC      	    defb 11111100b
2240:     -	29EB  00      	    defb 00000000b
2241:     -	29EC  00      	    defb 00000000b
2242:     -	29ED  00      	    defb 00000000b
2243:     -	29EE  00      	    defb 00000000b
2244:				
2245:				    ; code=224, hex=0xE0, ascii="!`"
2246:     -	29EF  00      	    defb 00000000b
2247:     -	29F0  00      	    defb 00000000b
2248:     -	29F1  34      	    defb 00110100b
2249:     -	29F2  48      	    defb 01001000b
2250:     -	29F3  48      	    defb 01001000b
2251:     -	29F4  34      	    defb 00110100b
2252:     -	29F5  00      	    defb 00000000b
2253:     -	29F6  00      	    defb 00000000b
2254:				
2255:				    ; code=225, hex=0xE1, ascii="!a"
2256:     -	29F7  00      	    defb 00000000b
2257:     -	29F8  70      	    defb 01110000b
2258:     -	29F9  48      	    defb 01001000b
2259:     -	29FA  70      	    defb 01110000b
2260:     -	29FB  48      	    defb 01001000b
2261:     -	29FC  48      	    defb 01001000b
2262:     -	29FD  70      	    defb 01110000b
2263:     -	29FE  40      	    defb 01000000b
2264:				
2265:				    ; code=226, hex=0xE2, ascii="!b"
2266:     -	29FF  78      	    defb 01111000b
2267:     -	2A00  48      	    defb 01001000b
2268:     -	2A01  40      	    defb 01000000b
2269:     -	2A02  40      	    defb 01000000b
2270:     -	2A03  40      	    defb 01000000b
2271:     -	2A04  40      	    defb 01000000b
2272:     -	2A05  40      	    defb 01000000b
2273:     -	2A06  00      	    defb 00000000b
2274:				
2275:				    ; code=227, hex=0xE3, ascii="!c"
2276:     -	2A07  00      	    defb 00000000b
2277:     -	2A08  7C      	    defb 01111100b
2278:     -	2A09  28      	    defb 00101000b
2279:     -	2A0A  28      	    defb 00101000b
2280:     -	2A0B  28      	    defb 00101000b
2281:     -	2A0C  28      	    defb 00101000b
2282:     -	2A0D  28      	    defb 00101000b
2283:     -	2A0E  00      	    defb 00000000b
2284:				
2285:				    ; code=228, hex=0xE4, ascii="!d"
2286:     -	2A0F  78      	    defb 01111000b
2287:     -	2A10  48      	    defb 01001000b
2288:     -	2A11  20      	    defb 00100000b
2289:     -	2A12  10      	    defb 00010000b
2290:     -	2A13  20      	    defb 00100000b
2291:     -	2A14  48      	    defb 01001000b
2292:     -	2A15  78      	    defb 01111000b
2293:     -	2A16  00      	    defb 00000000b
2294:				
2295:				    ; code=229, hex=0xE5, ascii="!e"
2296:     -	2A17  00      	    defb 00000000b
2297:     -	2A18  00      	    defb 00000000b
2298:     -	2A19  3C      	    defb 00111100b
2299:     -	2A1A  48      	    defb 01001000b
2300:     -	2A1B  48      	    defb 01001000b
2301:     -	2A1C  30      	    defb 00110000b
2302:     -	2A1D  00      	    defb 00000000b
2303:     -	2A1E  00      	    defb 00000000b
2304:				
2305:				    ; code=230, hex=0xE6, ascii="!f"
2306:     -	2A1F  00      	    defb 00000000b
2307:     -	2A20  00      	    defb 00000000b
2308:     -	2A21  48      	    defb 01001000b
2309:     -	2A22  48      	    defb 01001000b
2310:     -	2A23  48      	    defb 01001000b
2311:     -	2A24  70      	    defb 01110000b
2312:     -	2A25  40      	    defb 01000000b
2313:     -	2A26  40      	    defb 01000000b
2314:				
2315:				    ; code=231, hex=0xE7, ascii="!g"
2316:     -	2A27  00      	    defb 00000000b
2317:     -	2A28  00      	    defb 00000000b
2318:     -	2A29  28      	    defb 00101000b
2319:     -	2A2A  50      	    defb 01010000b
2320:     -	2A2B  10      	    defb 00010000b
2321:     -	2A2C  10      	    defb 00010000b
2322:     -	2A2D  10      	    defb 00010000b
2323:     -	2A2E  00      	    defb 00000000b
2324:				
2325:				    ; code=232, hex=0xE8, ascii="!h"
2326:     -	2A2F  38      	    defb 00111000b
2327:     -	2A30  10      	    defb 00010000b
2328:     -	2A31  38      	    defb 00111000b
2329:     -	2A32  44      	    defb 01000100b
2330:     -	2A33  38      	    defb 00111000b
2331:     -	2A34  10      	    defb 00010000b
2332:     -	2A35  38      	    defb 00111000b
2333:     -	2A36  00      	    defb 00000000b
2334:				
2335:				    ; code=233, hex=0xE9, ascii="!i"
2336:     -	2A37  30      	    defb 00110000b
2337:     -	2A38  48      	    defb 01001000b
2338:     -	2A39  48      	    defb 01001000b
2339:     -	2A3A  78      	    defb 01111000b
2340:     -	2A3B  48      	    defb 01001000b
2341:     -	2A3C  48      	    defb 01001000b
2342:     -	2A3D  30      	    defb 00110000b
2343:     -	2A3E  00      	    defb 00000000b
2344:				
2345:				    ; code=234, hex=0xEA, ascii="!j"
2346:     -	2A3F  00      	    defb 00000000b
2347:     -	2A40  38      	    defb 00111000b
2348:     -	2A41  44      	    defb 01000100b
2349:     -	2A42  44      	    defb 01000100b
2350:     -	2A43  28      	    defb 00101000b
2351:     -	2A44  28      	    defb 00101000b
2352:     -	2A45  6C      	    defb 01101100b
2353:     -	2A46  00      	    defb 00000000b
2354:				
2355:				    ; code=235, hex=0xEB, ascii="!k"
2356:     -	2A47  30      	    defb 00110000b
2357:     -	2A48  40      	    defb 01000000b
2358:     -	2A49  20      	    defb 00100000b
2359:     -	2A4A  10      	    defb 00010000b
2360:     -	2A4B  38      	    defb 00111000b
2361:     -	2A4C  48      	    defb 01001000b
2362:     -	2A4D  30      	    defb 00110000b
2363:     -	2A4E  00      	    defb 00000000b
2364:				
2365:				    ; code=236, hex=0xEC, ascii="!l"
2366:     -	2A4F  00      	    defb 00000000b
2367:     -	2A50  00      	    defb 00000000b
2368:     -	2A51  28      	    defb 00101000b
2369:     -	2A52  54      	    defb 01010100b
2370:     -	2A53  54      	    defb 01010100b
2371:     -	2A54  28      	    defb 00101000b
2372:     -	2A55  00      	    defb 00000000b
2373:     -	2A56  00      	    defb 00000000b
2374:				
2375:				    ; code=237, hex=0xED, ascii="!m"
2376:     -	2A57  00      	    defb 00000000b
2377:     -	2A58  10      	    defb 00010000b
2378:     -	2A59  38      	    defb 00111000b
2379:     -	2A5A  54      	    defb 01010100b
2380:     -	2A5B  54      	    defb 01010100b
2381:     -	2A5C  38      	    defb 00111000b
2382:     -	2A5D  10      	    defb 00010000b
2383:     -	2A5E  00      	    defb 00000000b
2384:				
2385:				    ; code=238, hex=0xEE, ascii="!n"
2386:     -	2A5F  00      	    defb 00000000b
2387:     -	2A60  38      	    defb 00111000b
2388:     -	2A61  40      	    defb 01000000b
2389:     -	2A62  78      	    defb 01111000b
2390:     -	2A63  40      	    defb 01000000b
2391:     -	2A64  38      	    defb 00111000b
2392:     -	2A65  00      	    defb 00000000b
2393:     -	2A66  00      	    defb 00000000b
2394:				
2395:				    ; code=239, hex=0xEF, ascii="!o"
2396:     -	2A67  00      	    defb 00000000b
2397:     -	2A68  30      	    defb 00110000b
2398:     -	2A69  48      	    defb 01001000b
2399:     -	2A6A  48      	    defb 01001000b
2400:     -	2A6B  48      	    defb 01001000b
2401:     -	2A6C  48      	    defb 01001000b
2402:     -	2A6D  00      	    defb 00000000b
2403:     -	2A6E  00      	    defb 00000000b
2404:				
2405:				    ; code=240, hex=0xF0, ascii="!p"
2406:     -	2A6F  00      	    defb 00000000b
2407:     -	2A70  78      	    defb 01111000b
2408:     -	2A71  00      	    defb 00000000b
2409:     -	2A72  78      	    defb 01111000b
2410:     -	2A73  00      	    defb 00000000b
2411:     -	2A74  78      	    defb 01111000b
2412:     -	2A75  00      	    defb 00000000b
2413:     -	2A76  00      	    defb 00000000b
2414:				
2415:				    ; code=241, hex=0xF1, ascii="!q"
2416:     -	2A77  00      	    defb 00000000b
2417:     -	2A78  10      	    defb 00010000b
2418:     -	2A79  38      	    defb 00111000b
2419:     -	2A7A  10      	    defb 00010000b
2420:     -	2A7B  00      	    defb 00000000b
2421:     -	2A7C  38      	    defb 00111000b
2422:     -	2A7D  00      	    defb 00000000b
2423:     -	2A7E  00      	    defb 00000000b
2424:				
2425:				    ; code=242, hex=0xF2, ascii="!r"
2426:     -	2A7F  40      	    defb 01000000b
2427:     -	2A80  30      	    defb 00110000b
2428:     -	2A81  08      	    defb 00001000b
2429:     -	2A82  30      	    defb 00110000b
2430:     -	2A83  40      	    defb 01000000b
2431:     -	2A84  00      	    defb 00000000b
2432:     -	2A85  78      	    defb 01111000b
2433:     -	2A86  00      	    defb 00000000b
2434:				
2435:				    ; code=243, hex=0xF3, ascii="!s"
2436:     -	2A87  08      	    defb 00001000b
2437:     -	2A88  30      	    defb 00110000b
2438:     -	2A89  40      	    defb 01000000b
2439:     -	2A8A  30      	    defb 00110000b
2440:     -	2A8B  08      	    defb 00001000b
2441:     -	2A8C  00      	    defb 00000000b
2442:     -	2A8D  78      	    defb 01111000b
2443:     -	2A8E  00      	    defb 00000000b
2444:				
2445:				    ; code=244, hex=0xF4, ascii="!t"
2446:     -	2A8F  00      	    defb 00000000b
2447:     -	2A90  08      	    defb 00001000b
2448:     -	2A91  14      	    defb 00010100b
2449:     -	2A92  10      	    defb 00010000b
2450:     -	2A93  10      	    defb 00010000b
2451:     -	2A94  10      	    defb 00010000b
2452:     -	2A95  10      	    defb 00010000b
2453:     -	2A96  10      	    defb 00010000b
2454:				
2455:				    ; code=245, hex=0xF5, ascii="!u"
2456:     -	2A97  10      	    defb 00010000b
2457:     -	2A98  10      	    defb 00010000b
2458:     -	2A99  10      	    defb 00010000b
2459:     -	2A9A  10      	    defb 00010000b
2460:     -	2A9B  10      	    defb 00010000b
2461:     -	2A9C  50      	    defb 01010000b
2462:     -	2A9D  20      	    defb 00100000b
2463:     -	2A9E  00      	    defb 00000000b
2464:				
2465:				    ; code=246, hex=0xF6, ascii="!v"
2466:     -	2A9F  00      	    defb 00000000b
2467:     -	2AA0  10      	    defb 00010000b
2468:     -	2AA1  00      	    defb 00000000b
2469:     -	2AA2  7C      	    defb 01111100b
2470:     -	2AA3  00      	    defb 00000000b
2471:     -	2AA4  10      	    defb 00010000b
2472:     -	2AA5  00      	    defb 00000000b
2473:     -	2AA6  00      	    defb 00000000b
2474:				
2475:				    ; code=247, hex=0xF7, ascii="!w"
2476:     -	2AA7  00      	    defb 00000000b
2477:     -	2AA8  28      	    defb 00101000b
2478:     -	2AA9  50      	    defb 01010000b
2479:     -	2AAA  00      	    defb 00000000b
2480:     -	2AAB  28      	    defb 00101000b
2481:     -	2AAC  50      	    defb 01010000b
2482:     -	2AAD  00      	    defb 00000000b
2483:     -	2AAE  00      	    defb 00000000b
2484:				
2485:				    ; code=248, hex=0xF8, ascii="!x"
2486:     -	2AAF  30      	    defb 00110000b
2487:     -	2AB0  48      	    defb 01001000b
2488:     -	2AB1  48      	    defb 01001000b
2489:     -	2AB2  30      	    defb 00110000b
2490:     -	2AB3  00      	    defb 00000000b
2491:     -	2AB4  00      	    defb 00000000b
2492:     -	2AB5  00      	    defb 00000000b
2493:     -	2AB6  00      	    defb 00000000b
2494:				
2495:				    ; code=249, hex=0xF9, ascii="!y"
2496:     -	2AB7  00      	    defb 00000000b
2497:     -	2AB8  00      	    defb 00000000b
2498:     -	2AB9  00      	    defb 00000000b
2499:     -	2ABA  30      	    defb 00110000b
2500:     -	2ABB  30      	    defb 00110000b
2501:     -	2ABC  00      	    defb 00000000b
2502:     -	2ABD  00      	    defb 00000000b
2503:     -	2ABE  00      	    defb 00000000b
2504:				
2505:				    ; code=250, hex=0xFA, ascii="!z"
2506:     -	2ABF  00      	    defb 00000000b
2507:     -	2AC0  00      	    defb 00000000b
2508:     -	2AC1  00      	    defb 00000000b
2509:     -	2AC2  20      	    defb 00100000b
2510:     -	2AC3  00      	    defb 00000000b
2511:     -	2AC4  00      	    defb 00000000b
2512:     -	2AC5  00      	    defb 00000000b
2513:     -	2AC6  00      	    defb 00000000b
2514:				
2515:				    ; code=251, hex=0xFB, ascii="!{"
2516:     -	2AC7  00      	    defb 00000000b
2517:     -	2AC8  1C      	    defb 00011100b
2518:     -	2AC9  10      	    defb 00010000b
2519:     -	2ACA  10      	    defb 00010000b
2520:     -	2ACB  50      	    defb 01010000b
2521:     -	2ACC  50      	    defb 01010000b
2522:     -	2ACD  20      	    defb 00100000b
2523:     -	2ACE  00      	    defb 00000000b
2524:				
2525:				    ; code=252, hex=0xFC, ascii="!|"
2526:     -	2ACF  50      	    defb 01010000b
2527:     -	2AD0  28      	    defb 00101000b
2528:     -	2AD1  28      	    defb 00101000b
2529:     -	2AD2  28      	    defb 00101000b
2530:     -	2AD3  00      	    defb 00000000b
2531:     -	2AD4  00      	    defb 00000000b
2532:     -	2AD5  00      	    defb 00000000b
2533:     -	2AD6  00      	    defb 00000000b
2534:				
2535:				    ; code=253, hex=0xFD, ascii="!}"
2536:     -	2AD7  60      	    defb 01100000b
2537:     -	2AD8  10      	    defb 00010000b
2538:     -	2AD9  20      	    defb 00100000b
2539:     -	2ADA  70      	    defb 01110000b
2540:     -	2ADB  00      	    defb 00000000b
2541:     -	2ADC  00      	    defb 00000000b
2542:     -	2ADD  00      	    defb 00000000b
2543:     -	2ADE  00      	    defb 00000000b
2544:				
2545:				    ; code=254, hex=0xFE, ascii="!~"
2546:     -	2ADF  00      	    defb 00000000b
2547:     -	2AE0  00      	    defb 00000000b
2548:     -	2AE1  78      	    defb 01111000b
2549:     -	2AE2  78      	    defb 01111000b
2550:     -	2AE3  78      	    defb 01111000b
2551:     -	2AE4  78      	    defb 01111000b
2552:     -	2AE5  00      	    defb 00000000b
2553:     -	2AE6  00      	    defb 00000000b
2554:				
2555:				    ; code=255, hex=0xFF, ascii="!^"
2556:     -	2AE7  00      	    defb 00000000b
2557:     -	2AE8  00      	    defb 00000000b
2558:     -	2AE9  00      	    defb 00000000b
2559:     -	2AEA  00      	    defb 00000000b
2560:     -	2AEB  00      	    defb 00000000b
2561:     -	2AEC  00      	    defb 00000000b
2562:     -	2AED  00      	    defb 00000000b
**** functions/ascii.s ****
  99:     -	2AEE  00      	    defb 00000000b
 100:     -	2AEF          	TitleMessage:    
 101:     -	2AEF  41534349	    defb    "ASCII Character Set", 0
	              49204368
	              61726163
	              74657220
	              53657400
 102:				
 103:     -	2B03          	OldSP:
 104:     -	2B03  0000    	    defw 0
 105:     -	2B05          	    defs 64
 106:				
 107:				
 108:				    
 109:				
**** main.asm ****
 427:     -	2B45          	Stack:
 428:				.include "ide.s"
**** functions/ide.s ****
   1:				;-------------------------------------------------
   2:				; Z8C/MEGA80 P-ATA IO Functions
   3:				; by Dennis Gunia 2022/02
   4:				; Version 0.1
   5:				;
   6:				; For Z8C Monitor
   7:				;-------------------------------------------------
   8:				
   9:				; Constant Values
  10:     -	0410          	IDEDefaultBufferLocation    equ 00410h
  11:     -	0001          	IDEDefaultSectorCount       equ 1
  12:     -	4100          	IDEVarMemoryLocation        equ 04100h
  13:				
  14:				    title Z8C_IDE_BASIC_IO
  15:				
  16:				; Make Vars public for other programs to use
  17:				    public IDECurrentSector, IDECurrentCyl, IDESectorCount, IDEDefaultBufferLocation, IDEStatus
  18:				; Same for functions
  19:				    public IDEInit
  20:				
  21:				; Dynamic VARs
  22:     -	2B45          	IDEVarTemplate:
  23:     -	4100          	    phase IDEVarMemoryLocation  ;Change pointers to this template to the specified location
  24:				; IDE Interface Vars
  25:				; IDE is using address-space starting at 04100h
  26:     -	4100          	IDECurrentSector:   ; Start sector
  27:     -	4100  00      	    defb 0x00
  28:     -	4101          	IDECurrentCyl:      ; Start cylinder 
  29:     -	4101  0000    	    defw 0x0000
  30:     -	4103          	IDESectorCount:     ; Sectors to load
  31:     -	4103  01      	    defb IDEDefaultSectorCount
  32:     -	4104          	IDEBufferLocation:  ; Starting location for buffer
  33:     -	4104  1004    	    defw IDEDefaultBufferLocation
  34:     -	4106          	IDEStatus:
  35:     -	4106  00      	    defb 0x00       ; Default 0x00
  36:				
  37:     -	4107          	IDEVarTemplateEnd:
  38:     -	2B4C          	    dephase
  39:				
  40:				; IDE System Calls
  41:     -	2B4C          	IDEInit:
  42:				    ; Copy IDEVarTemplate to memory
  43: 8996+10	2B4C  210041  	    LD HL, IDEVarMemoryLocation
  44: 9006+10	2B4F  01452B  	    LD BC, IDEVarTemplate
  45:     -	2B52          	IDEInit_copy_loop:
  46: 9016+7	2B52  7E      	    LD A,(HL)
  47: 9023+7	2B53  12      	    LD (DE),A
  48: 9030+6	2B54  23      	    INC HL
  49: 9036+6	2B55  13      	    INC DE
  50: 9042+11	2B56  E5      	    PUSH HL
  51:     -	2B57          	    SBC HL,[IDEVarTemplateEnd]
F Syntax error
  52:				
  53:				
**** main.asm ****
 429: 9053+10	2B57  C9      	    RET 
 430:				;Strings
 431:     -	2B58          	MSG_CLEAR:
 432:     -	2B58  1B5B324A	    db 27, '[2J', 27, '[H',0
	              1B5B4800
 433:				



Error + Warning report:

     2 errors
     0 warnings
     1 F -- Syntax error
     1 P -- Phase error

     2	passes
     0	jr promotions
   248	symbols
  4742	bytes



Symbol Table:

ARR_COMMANDS     457      1111
AY0_WRITE_REG    427      1063
A_RTS_OFF        42F      1071
A_RTS_ON         438      1080
BorderLoop      1062      4194
CMD_CLEAR        568      1384
CMD_CRS_SPEED  =E000      57344
CMD_EXEC         583      1411
CMD_HELP         53E      1342
CMD_HEXDUMP      56F      1391
CMD_IOGET        595      1429
CMD_IOSET        5C5      1477
CMD_MGET         615      1557
CMD_MSET         5F1      1521
CMD_NOT_IMPLEMENTED  64B      1611
CMD_VERSION      553      1363
CMP_STRING_START  2B2      690
CMP_STRING_START_CONTINUE  2BA      698
CMP_STRING_START_MATCHED  2B7      695
CONSOLE_CURSOR   407      1031
CONSOLE_CURSOR_OFF  412      1042
CONSOLE_INIT     3C7      967
CONSOLE_PRINTSTR  39A      922
CONSOLE_PRINTSTR_EXIT  3AA      938
CONSOLE_PRINTSTR_LOOP  39C      924
CONSOLE_PROMPT   165      357
CONSOLE_PROMPT_LOOP  18B      395
CONSOLE_PROMPT_LOOP_1  1B3      435
CONSOLE_PROMPT_LOOP_1B  1DE      478
CONSOLE_PROMPT_LOOP_2  1FF      511
CONSOLE_PROMPT_LOOP_3  1FF      511
CONSOLE_READ_CHAR  3AD      941
CONSOLE_TX_WAIT  3BB      955
DELAY            153      339
DELAY_LOOP       15D      349
DHEX_TO_BYTE     2D9      729
DHEX_TO_BYTE_FAILED  2F1      753
DoubleBottomLeft=C8        200
DoubleBottomRight=BC        188
DoubleHorizontal=CD        205
DoubleTopLeft  =C9        201
DoubleTopRight =BB        187
DoubleVertical =BA        186
Exit            1045      4165
HEX_TO_BIN       2BF      703
HEX_TO_BIN_2     2CD      717
HEX_TO_INVALID_2  2D4      724
IDEBufferLocation 4104      16644
IDECurrentCyl   4101      16641 (public)
IDECurrentSector 4100      16640 (public)
IDEDefaultBufferLocation= 410      1040 (public)
IDEDefaultSectorCount=01        1
IDEInit         2B4C      11084 (public)
IDEInit_copy_loop 2B52      11090
IDESectorCount  4103      16643 (public)
IDEStatus       4106      16646 (public)
IDEVarMemoryLocation=4100      16640
IDEVarTemplate  2B45      11077
IDEVarTemplateEnd 4107      16647
INT_VEC          853      2131
IO_AY0_ADDR    =40        64
IO_AY0_DATA    =41        65
IO_AY1_ADDR    =42        66
IO_AY1_DATA    =43        67
IO_CTC0_C0     =00        0
IO_CTC0_C1     =01        1
IO_CTC0_C2     =02        2
IO_CTC0_C3     =03        3
IO_REG0        =20        32
IO_RTC_AMPM    =25        37
IO_RTC_CTR_D   =2D        45
IO_RTC_CTR_E   =2E        46
IO_RTC_CTR_F   =2F        47
IO_RTC_DAY0    =26        38
IO_RTC_DAY1    =27        39
IO_RTC_HOUR    =24        36
IO_RTC_MIN0    =22        34
IO_RTC_MIN1    =23        35
IO_RTC_MON0    =28        40
IO_RTC_MON1    =29        41
IO_RTC_SEC0    =20        32
IO_RTC_SEC1    =21        33
IO_RTC_WEEK    =2C        44
IO_RTC_YEAR1   =2B        43
IO_RTC_YERR0   =2A        42
IO_SIO0A_C     =12        18
IO_SIO0A_D     =10        16
IO_SIO0B_C     =13        19
IO_SIO0B_D     =11        17
LineLen        =20        32
MEM_CURSOR_STATE=4000      16384
MEM_LAST_CHAR  =4001      16385
MEM_PROMPT_SIZE=4003      16387
MEM_PROMPT_START=4005      16389
MOD_COMMANDS     457      1111
MSG_CLEAR       2B58      11096
MSG_CMD_HELP     6CC      1740
MSG_CMD_VER      7B3      1971
MSG_CRSR_0       419      1049
MSG_CRSR_1       420      1056
MSG_HEXDUMP_HEADER  216      534
MSG_NOT_IMPLEMENTED  83B      2107
MSG_SYS_VER      652      1618
NextChar        1031      4145
NextLine        102A      4138
OldSP           2B03      11011
PARSE_CMD        500      1280
PARSE_CMD_CMP_STRING_START  531      1329
PARSE_CMD_CMP_STRING_START_CONTINUE  539      1337
PARSE_CMD_CMP_STRING_START_MATCHED  536      1334
PARSE_CMD_NO_MATCH  52A      1322
PARSE_CMD_START  503      1283
PARSE_CMD_START_EXEC  527      1319
PARSE_CMD_START_FOUND  523      1315
PARSE_CMD_START_NOT_FOUND  51A      1306
PRINT_A_HEX      202      514
PRINT_HEXDUMP    24E      590
PRINT_HEXDUMP_LOOP1  286      646
PRINT_HEXDUMP_SOL  259      601
PROG_MEM_START =4000      16384
PROG_ROM_START = 100      256
RX_CHA_AVAILABLE  441      1089
SPEC_RX_CONDITON  150      336
START_ROM      =00        0
STRCONV_BYTES_TO_HEX  380      896
STRCONV_BYTES_TO_HEX_1  38F      911
STRCONV_BYTES_TO_HEX_2  399      921
STR_NOTFOUND     4E5      1253
Stack           2B45      11077
TMS              2F5      757
TX_EMP           3B8      952
TextBorder      1048      4168
TitleMessage    2AEF      10991
Tms16k         =80        128
TmsBackground   20AB      8363
TmsBitmap       218E      8590
TmsBitmapColorLen= 800      2048
TmsBitmapFlags = 2C0      704
TmsBitmapLoop   219B      8603
TmsBitmapPatternLen=1800      6144
TmsBlack       =01        1
TmsBlankFlags  =80        128
TmsByteLoop     2122      8482
TmsChrOut      =208F      8335
TmsClearPixel  =A02F      41007
TmsColorAddr    E406      58374
TmsColorReg    =87        135
TmsColorTableHigh 21C0      8640
TmsColorTableReg=83        131
TmsCtrl0Reg    =80        128
TmsCtrl1Reg    =81        129
TmsCyan        =07        7
TmsDarkBlue    =04        4
TmsDarkGreen   =0C        12
TmsDarkRed     =06        6
TmsDarkYellow  =0A        10
TmsDisplayEnable=40        64
TmsExtVideo    = 100      256
TmsFill         224D      8781
TmsFillLoop     2252      8786
TmsFont         22EF      8943
TmsGray        =0E        14
TmsInitCommon   21D9      8665
TmsInitNonBitmap 215B      8539
TmsIntDisable   20DA      8410
TmsIntEnable    20CD      8397
TmsIntEnableBit=20        32
TmsLightBlue   =05        5
TmsLightGreen  =03        3
TmsLightRed    =09        9
TmsLightYellow =0B        11
TmsLineLoop     211F      8479
TmsM1          =10        16
TmsM2          =08        8
TmsM3          = 200      512
TmsMagenta     =0D        13
TmsMaskLookup   22C2      8898
TmsMediumGreen =02        2
TmsMediumRed   =08        8
TmsMode         E402      58370
TmsMulticolor   210F      8463
TmsMulticolorFlags=C8        200
TmsMulticolorPatternLen= 600      1536
TmsNameAddr     E404      58372
TmsNameReg     =82        130
TmsNumPorts    =03        3
TmsPatternAddr  E408      58376
TmsPatternReg  =84        132
TmsPatternTableHigh 21D4      8660
TmsPixelColor   22CA      8906
TmsPixelOp      2297      8855
TmsPixelOpPlaceHolder 22B8      8888
TmsPlotPixel    229B      8859
TmsPort         E400      58368
TmsPorts        2074      8308
TmsProbe        2050      8272
TmsProbeFailed  206F      8303
TmsProbeNext    2055      8277
TmsProbeWait    2065      8293
TmsRamIn        209A      8346
TmsRamInDelay   209F      8351
TmsRamInDelay2  20A7      8359
TmsRamOut       208F      8335
TmsRamOutDelay  2096      8342
TmsReadAddr     2233      8755
TmsRegIn        2085      8325
TmsRegOut       207B      8315
TmsRepeat       2291      8849
TmsReset        20E7      8423
TmsScreenColors E40E      58382
TmsSectionLoop  211D      8477
TmsSetPixel    =B0        176
TmsSetReg       2077      8311
TmsSetWait      204A      8266
TmsSprite32    =02        2
TmsSpriteAttrAddr E40C      58380
TmsSpriteAttrReg=85        133
TmsSpriteConfig 20BC      8380
TmsSpriteMag   =01        1
TmsSpritePatternAddr E40A      58378
TmsSpritePatternReg=86        134
TmsStrOut       2286      8838
TmsSubs         1088      4232
TmsTextColor    225C      8796
TmsTextFlags   =D0        208
TmsTextMode     2146      8518
TmsTextNameLen = 3C0      960
TmsTextPatternLen= 800      2048
TmsTextPos      226F      8815
TmsTile         213A      8506
TmsTileColorLen=20        32
TmsTileFlags   =C0        192
TmsTileNameLen = 300      768
TmsTilePatternLen= 800      2048
TmsTransparent =00        0
TmsWait         E401      58369
TmsWaits        2047      8263
TmsWhite       =0F        15
TmsWrite        223E      8766
TmsWriteAddr    2226      8742
TmsWriteBit    =40        64
TmsWriteLoop    2241      8769
TmsXYAddr       22DE      8926
VAR_CONSOLE_BAUD=10        16
init            10        16
init_console     104      260
init_led        03        3
setup_vars      2000      8192
