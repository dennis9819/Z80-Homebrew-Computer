binary-debuggable-source
0000 0000 f main.asm
0000 0000 s .include "addresses.s"
0000 0000 f addresses.s
0000 0000 s IO_CTC0_C0  equ 0x00
0000 0000 s IO_CTC0_C1  equ 0x01
0000 0000 s IO_CTC0_C2  equ 0x02
0000 0000 s IO_CTC0_C3  equ 0x03
0000 0000 s 
0000 0000 s IO_SIO0A_C  equ 00010010b
0000 0000 s IO_SIO0A_D  equ 00010000b
0000 0000 s IO_SIO0B_C  equ 00010011b
0000 0000 s IO_SIO0B_D  equ 00010001b
0000 0000 s 
0000 0000 s IO_RTC_SEC0  equ 00100000b
0000 0000 s IO_RTC_SEC1  equ 00100001b
0000 0000 s IO_RTC_MIN0  equ 00100010b
0000 0000 s IO_RTC_MIN1  equ 00100011b
0000 0000 s IO_RTC_HOUR  equ 00100100b
0000 0000 s IO_RTC_AMPM  equ 00100101b
0000 0000 s IO_RTC_DAY0  equ 00100110b
0000 0000 s IO_RTC_DAY1  equ 00100111b
0000 0000 s IO_RTC_MON0  equ 00101000b
0000 0000 s IO_RTC_MON1  equ 00101001b
0000 0000 s IO_RTC_YERR0 equ 00101010b
0000 0000 s IO_RTC_YEAR1 equ 00101011b
0000 0000 s IO_RTC_WEEK  equ 00101100b
0000 0000 s IO_RTC_CTR_D equ 00101101b
0000 0000 s IO_RTC_CTR_E equ 00101110b
0000 0000 s IO_RTC_CTR_F equ 00101111b
0000 0000 s 
0000 0000 s IO_AY0_ADDR equ 01000000b
0000 0000 s IO_AY0_DATA equ 01000001b
0000 0000 s IO_AY1_ADDR equ 01000010b
0000 0000 s IO_AY1_DATA equ 01000011b
0000 0000 s 
0000 0000 s START_ROM   equ 0x0000
0000 0000 s IO_REG0     equ 0x20
0000 0000 s 
0000 0000 s PROG_ROM_START equ 0x0100
0000 0000 f main.asm
0000 0000 s PROG_MEM_START equ 04000h
0000 0000 s 
0000 0000 s MEM_CURSOR_STATE equ 0x4000  ; 1 byte var
0000 0000 s MEM_LAST_CHAR equ 0x4001  ; 1 byte var
0000 0000 s MEM_PROMPT_SIZE equ 0x4003
0000 0000 s MEM_PROMPT_START equ 0x4005
0000 0000 s 
0000 0000 s CMD_CRS_SPEED equ 0xE000
0000 0000 s 
0000 0000 s ; Include Kernel Libs at 0x0380
0380 0380 s     org 0x0380
0380 0380 s .include "conversions.s"
0380 0380 f conversions.s
0380 0380 s 
0380 0380 s ; Kernel Conversion Functions
0380 0380 s 
0380 0380 s 
0380 0380 s 
0380 0380 s ;*****************
0380 0380 s ; Convert Byte to Hex Char (ASCII)
0380 0380 s ;*****************
0380 0380 s ;Description: the StrLength function inline
0380 0380 s ;
0380 0380 s ;Inputs: A contains input byte
0380 0380 s ;
0380 0380 s ;Outputs: BC contains 2 Bytes of ASCII (HEX)
0380 0380 s ;
0380 0380 s ;Destroys: A, BC,
0380 0380 s STRCONV_BYTES_TO_HEX:
0380 0380 d f5
0381 0380 u 01 01
0380 0380 s     PUSH AF;Backup A Register
0381 0381 d 1f
0382 0381 u 01 01
0381 0381 s     RRA
0382 0382 d 1f
0383 0382 u 01 01
0382 0382 s     RRA
0383 0383 d 1f
0384 0383 u 01 01
0383 0383 s     RRA
0384 0384 d 1f
0385 0384 u 01 01
0384 0384 s     RRA
0385 0385 d cd8f03
0388 0385 u 03 01
0385 0385 s     CALL STRCONV_BYTES_TO_HEX_1
0388 0388 s     ;LD A,D
0388 0388 d 47
0389 0388 u 01 01
0388 0388 s     LD B,A  
0389 0389 d f1
038a 0389 u 01 01
0389 0389 s     POP AF ; Reload first Byte
038a 038a d cd8f03
038d 038a u 03 01
038a 038a s     CALL STRCONV_BYTES_TO_HEX_1
038d 038d s     ;LD A,D
038d 038d d 4f
038e 038d u 01 01
038d 038d s     LD C,A
038e 038e d c9
038f 038e u 01 01
038e 038e s     RET
038f 038f s 
038f 038f s STRCONV_BYTES_TO_HEX_1:
038f 038f d e60f
0391 038f u 02 01
038f 038f s     AND 0x0F
0391 0391 d c630
0393 0391 u 02 01
0391 0391 s     ADD 48
0393 0393 d fe3a
0395 0393 u 02 01
0393 0393 s     CP 58 ; Check if less than 58 (less than ASCII 9)
0395 0395 d 3802
0397 0395 u 02 01
0395 0395 s     JR C, STRCONV_BYTES_TO_HEX_2
0397 0397 d c607
0399 0397 u 02 01
0397 0397 s     ADD 7 ; A-F
0399 0399 s STRCONV_BYTES_TO_HEX_2:
0399 0399 s     ;LD D,A
0399 0399 d c9
039a 0399 u 01 01
0399 0399 s     RET
039a 039a s 
039a 039a s 
039a 039a s 
039a 039a f main.asm
039a 039a s .include "console.s"
039a 039a f console.s
039a 039a s ; Kernel Konsole Functions
039a 039a s 
039a 039a s VAR_CONSOLE_BAUD equ 16d ; BAUD 14400 @ 3.686441MHz & CPUCLK/2
039a 039a s 
039a 039a s ;*****************
039a 039a s ; CONSOLE_PRINTSTR
039a 039a s ;*****************
039a 039a s ;Description: Sends null-terminated String via Serial Port
039a 039a s ;
039a 039a s ;Inputs: BC contains start address of stringg
039a 039a s ;
039a 039a s ;Outputs: Output to IO_SIO0B_D
039a 039a s ;
039a 039a s ;Destroys: none
039a 039a s CONSOLE_PRINTSTR:
039a 039a s     ; BC contains String offset
039a 039a s     ; Prints null terminated string
039a 039a d f5
039b 039a u 01 01
039a 039a s     PUSH AF
039b 039b d c5
039c 039b u 01 01
039b 039b s     PUSH BC
039c 039c s CONSOLE_PRINTSTR_LOOP:
039c 039c d 0a
039d 039c u 01 01
039c 039c s     LD A,(BC)
039d 039d s 
039d 039d s     ; Return if nullbyte
039d 039d d f600
039f 039d u 02 01
039d 039d s     OR 0
039f 039f d 2809
03a1 039f u 02 01
039f 039f s     JR Z, CONSOLE_PRINTSTR_EXIT
03a1 03a1 s     ; Print Char
03a1 03a1 d d311
03a3 03a1 u 02 01
03a1 03a1 s     out (IO_SIO0B_D),A
03a3 03a3 d cdb803
03a6 03a3 u 03 01
03a3 03a3 s     call TX_EMP
03a6 03a6 s 
03a6 03a6 s     ; INC BC and JP start of loop
03a6 03a6 d 03
03a7 03a6 u 01 01
03a6 03a6 s     INC BC
03a7 03a7 d c39c03
03aa 03a7 u 03 01
03a7 03a7 s     jp CONSOLE_PRINTSTR_LOOP
03aa 03aa s CONSOLE_PRINTSTR_EXIT:
03aa 03aa d c1
03ab 03aa u 01 01
03aa 03aa s     POP BC
03ab 03ab d f1
03ac 03ab u 01 01
03ab 03ab s     POP AF
03ac 03ac d c9
03ad 03ac u 01 01
03ac 03ac s     RET
03ad 03ad s 
03ad 03ad s ;*****************
03ad 03ad s ; CONSOLE_READ_CHAR
03ad 03ad s ;*****************
03ad 03ad s ;Description: Gets a single byte from console port
03ad 03ad s ;
03ad 03ad s ;Inputs: BC contains start address of stringg
03ad 03ad s ;
03ad 03ad s ;Outputs: Output to IO_SIO0B_D
03ad 03ad s ;
03ad 03ad s ;Destroys: A
03ad 03ad s 
03ad 03ad s CONSOLE_READ_CHAR:
03ad 03ad d af
03ae 03ad u 01 01
03ad 03ad s     XOR	A
03ae 03ae d d313
03b0 03ae u 02 01
03ae 03ae s     OUT (IO_SIO0B_C), A
03b0 03b0 d db13
03b2 03b0 u 02 01
03b0 03b0 s     IN A, (IO_SIO0B_C)
03b2 03b2 d e601
03b4 03b2 u 02 01
03b2 03b2 s     AND	1
03b4 03b4 d c8
03b5 03b4 u 01 01
03b4 03b4 s     RET	Z	
03b5 03b5 d db11
03b7 03b5 u 02 01
03b5 03b5 s     IN A, (IO_SIO0B_D)
03b7 03b7 s     ;LD D,A
03b7 03b7 d c9
03b8 03b7 u 01 01
03b7 03b7 s     RET
03b8 03b8 s 
03b8 03b8 s ;*****************
03b8 03b8 s ; CONSOLE_TX_WAIT/TX_EMP
03b8 03b8 s ;*****************
03b8 03b8 s ;Description: Waits until byte is sent
03b8 03b8 s ;
03b8 03b8 s ;Inputs: none
03b8 03b8 s ;
03b8 03b8 s ;Outputs: none
03b8 03b8 s ;
03b8 03b8 s ;Destroys: A
03b8 03b8 s TX_EMP: ; DONT USE!!! DEPRECATED
03b8 03b8 d c3bb03
03bb 03b8 u 03 01
03b8 03b8 s     jp CONSOLE_TX_WAIT
03bb 03bb s CONSOLE_TX_WAIT:
03bb 03bb s     ; check for TX buffer empty
03bb 03bb d 97
03bc 03bb u 01 01
03bb 03bb s     sub a ;clear a, write into WR0: select RR0
03bc 03bc d 3c
03bd 03bc u 01 01
03bc 03bc s     inc a ;select RR1
03bd 03bd d d313
03bf 03bd u 02 01
03bd 03bd s     out (IO_SIO0B_C),A
03bf 03bf d db13
03c1 03bf u 02 01
03bf 03bf s     in A,(IO_SIO0B_C) ;read RRx
03c1 03c1 d cb47
03c3 03c1 u 02 01
03c1 03c1 s     bit 0,A
03c3 03c3 d cabb03
03c6 03c3 u 03 01
03c3 03c3 s     jp z,CONSOLE_TX_WAIT
03c6 03c6 d c9
03c7 03c6 u 01 01
03c6 03c6 s     ret
03c7 03c7 s 
03c7 03c7 s ;*****************
03c7 03c7 s ; CONSOLE_INIT
03c7 03c7 s ;*****************
03c7 03c7 s ;Description: Initializes CTC & SIO on Port B
03c7 03c7 s ;
03c7 03c7 s ;Inputs: none 
03c7 03c7 s ;
03c7 03c7 s ;Outputs: none
03c7 03c7 s ;
03c7 03c7 s ;Destroys: A
03c7 03c7 s CONSOLE_INIT:
03c7 03c7 s     ; Setup CTC
03c7 03c7 s     ; Init Ch1 (SIO0B)
03c7 03c7 s     ; For 4MHz CPU CLK 00000111b
03c7 03c7 s     ; For EXT CLK
03c7 03c7 d 3e0f
03c9 03c7 u 02 01
03c7 03c7 s     LD A,00001111b
03c9 03c9 d d301
03cb 03c9 u 02 01
03c9 03c9 s     OUT (IO_CTC0_C1),A
03cb 03cb s 
03cb 03cb d 3e10
03cd 03cb u 02 01
03cb 03cb s     LD A,VAR_CONSOLE_BAUD
03cd 03cd d d301
03cf 03cd u 02 01
03cd 03cd s     OUT (IO_CTC0_C1),A
03cf 03cf s 
03cf 03cf s     ; Setup SIO
03cf 03cf s      ;set up TX and RX:W
03cf 03cf d 3e30
03d1 03cf u 02 01
03cf 03cf s     ld a,00110000b ;write into WR0: error reset, select WR0
03d1 03d1 d d313
03d3 03d1 u 02 01
03d1 03d1 s     out (IO_SIO0B_C),A
03d3 03d3 d 3e18
03d5 03d3 u 02 01
03d3 03d3 s     ld a,018h ;write into WR0: channel reset
03d5 03d5 d d313
03d7 03d5 u 02 01
03d5 03d5 s     out (IO_SIO0B_C),A
03d7 03d7 s 
03d7 03d7 d 3e04
03d9 03d7 u 02 01
03d7 03d7 s     ld a,004h ;write into WR0: select WR4
03d9 03d9 d d313
03db 03d9 u 02 01
03d9 03d9 s     out (IO_SIO0B_C),A
03db 03db s     ;ld a,44h ;44h write into WR4: clkx16,1 stop bit, no parity
03db 03db d 3e04
03dd 03db u 02 01
03db 03db s     ld a,04h ;44h write into WR4: clkx1,1 stop bit, no parity
03dd 03dd d d313
03df 03dd u 02 01
03dd 03dd s     out (IO_SIO0B_C),A
03df 03df s 
03df 03df d 3e05
03e1 03df u 02 01
03df 03df s     ld a,005h ;write into WR0: select WR5
03e1 03e1 d d313
03e3 03e1 u 02 01
03e1 03e1 s     out (IO_SIO0B_C),A
03e3 03e3 s     ;ld a,0E8h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
03e3 03e3 d 3e68
03e5 03e3 u 02 01
03e3 03e3 s     ld a,068h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
03e5 03e5 d d313
03e7 03e5 u 02 01
03e5 03e5 s     out (IO_SIO0B_C),A
03e7 03e7 s 
03e7 03e7 d 3e01
03e9 03e7 u 02 01
03e7 03e7 s     ld a,01h ;write into WR0: select WR1
03e9 03e9 d d313
03eb 03e9 u 02 01
03e9 03e9 s     out (IO_SIO0B_C),A
03eb 03eb d 3e04
03ed 03eb u 02 01
03eb 03eb s     ld a,00000100b ;no interrupt in CH B, special RX condition affects vect
03ed 03ed d d313
03ef 03ed u 02 01
03ed 03ed s     out (IO_SIO0B_C),A
03ef 03ef s 
03ef 03ef d 3e02
03f1 03ef u 02 01
03ef 03ef s     ld a,02h ;write into WR0: select WR2
03f1 03f1 d d313
03f3 03f1 u 02 01
03f1 03f1 s     out (IO_SIO0B_C),A
03f3 03f3 d 3e00
03f5 03f3 u 02 01
03f3 03f3 s     ld a,0h ;write into WR2: cmd line int vect (see int vec table)
03f5 03f5 s     ;bits D3,D2,D1 are changed according to RX condition
03f5 03f5 d d313
03f7 03f5 u 02 01
03f5 03f5 s     out (IO_SIO0B_C),A
03f7 03f7 s 
03f7 03f7 s     ;ld a,01h ;write into WR0: select WR1
03f7 03f7 s     ;out (IO_SIO0B_C),A
03f7 03f7 s     ;ld a,00011000b ;interrupt on all RX characters, parity is not a spec RX condition
03f7 03f7 s     ;buffer overrun is a spec RX condition
03f7 03f7 s     ;out (IO_SIO0B_C),A
03f7 03f7 s 
03f7 03f7 s     ;enable SIO channel A RX
03f7 03f7 d 3e03
03f9 03f7 u 02 01
03f7 03f7 s     ld a,003h ;write into WR0: select WR3
03f9 03f9 d d313
03fb 03f9 u 02 01
03f9 03f9 s     out (IO_SIO0B_C),A
03fb 03fb d 3ec1
03fd 03fb u 02 01
03fb 03fb s     ld a,0C1h ;RX 8bit, auto enable off, RX on
03fd 03fd d d313
03ff 03fd u 02 01
03fd 03fd s     out (IO_SIO0B_C),A
03ff 03ff s     ;Channel A RX active
03ff 03ff s 
03ff 03ff d 3e25
0401 03ff u 02 01
03ff 03ff s     LD A,'%'
0401 0401 d d311
0403 0401 u 02 01
0401 0401 s     out (IO_SIO0B_D),A
0403 0403 d cdbb03
0406 0403 u 03 01
0403 0403 s     call CONSOLE_TX_WAIT
0406 0406 s 
0406 0406 d c9
0407 0406 u 01 01
0406 0406 s     RET
0407 0407 s 
0407 0407 s 
0407 0407 s 
0407 0407 s ;;
0407 0407 s 
0407 0407 s 
0407 0407 f main.asm
0407 0407 s .include "io.s"
0407 0407 f io.s
0407 0407 s ; A contains Data
0407 0407 s ; C Contains Addr
0407 0407 s AY0_WRITE_REG:
0407 0407 d 47
0408 0407 u 01 01
0407 0407 s     LD B,A
0408 0408 d 7a
0409 0408 u 01 01
0408 0408 s     LD A,D
0409 0409 d d340
040b 0409 u 02 01
0409 0409 s     OUT (IO_AY0_ADDR),A
040b 040b d 78
040c 040b u 01 01
040b 040b s     LD A,B
040c 040c d d341
040e 040c u 02 01
040c 040c s     OUT (IO_AY0_DATA),A
040e 040e d c9
040f 040e u 01 01
040e 040e s     RET
040f 040f s 
040f 040f s ; Serial Util Functions
040f 040f s A_RTS_OFF:
040f 040f d 3e05
0411 040f u 02 01
040f 040f s     ld a,005h ;write into WR0: select WR5
0411 0411 d d313
0413 0411 u 02 01
0411 0411 s     out (IO_SIO0B_C),A
0413 0413 d 3ee8
0415 0413 u 02 01
0413 0413 s     ld a,0E8h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
0415 0415 d d313
0417 0415 u 02 01
0415 0415 s     out (IO_SIO0B_C),A
0417 0417 d c9
0418 0417 u 01 01
0417 0417 s     ret
0418 0418 s A_RTS_ON:
0418 0418 d 3e05
041a 0418 u 02 01
0418 0418 s     ld a,005h ;write into WR0: select WR5
041a 041a d d313
041c 041a u 02 01
041a 041a s     out (IO_SIO0B_C),A
041c 041c d 3eea
041e 041c u 02 01
041c 041c s     ld a,0EAh ;DTR active, TX 8bit, BREAK off, TX on, RTS active
041e 041e d d313
0420 041e u 02 01
041e 041e s     out (IO_SIO0B_C),A
0420 0420 d c9
0421 0420 u 01 01
0420 0420 s     ret
0421 0421 s 
0421 0421 s RX_CHA_AVAILABLE:
0421 0421 d f5
0422 0421 u 01 01
0421 0421 s     push AF ;backup AF
0422 0422 s 
0422 0422 d 3eff
0424 0422 u 02 01
0422 0422 s     LD A,0xFF
0424 0424 d d320
0426 0424 u 02 01
0424 0424 s     OUT (IO_REG0),A
0426 0426 s 
0426 0426 d cd0f04
0429 0426 u 03 01
0426 0426 s     call A_RTS_OFF
0429 0429 d db11
042b 0429 u 02 01
0429 0429 s     in A,(IO_SIO0B_D) ;read RX character into A
042b 042b s     ; A holds received character
042b 042b s     ;do something with the received character
042b 042b s     ;echo character to host
042b 042b d d311
042d 042b u 02 01
042b 042b s     out (IO_SIO0B_D),A
042d 042d d cdb803
0430 042d u 03 01
042d 042d s     call TX_EMP
0430 0430 d fb
0431 0430 u 01 01
0430 0430 s     ei ;see comments below
0431 0431 d cd1804
0434 0431 u 03 01
0431 0431 s     call A_RTS_ON ;see comments below
0434 0434 s 
0434 0434 s     ;LD A,0x00
0434 0434 s     ;OUT (IO_REG0),A
0434 0434 s 
0434 0434 d f1
0435 0434 u 01 01
0434 0434 s     pop AF ;restore AF
0435 0435 f main.asm
0435 0435 d ed4d
0437 0435 u 02 01
0435 0435 s     Reti
0437 0437 s .include "commands.s"
0437 0437 f commands.s
0437 0437 s MOD_COMMANDS:
0437 0437 s     ;org 0x0370
0437 0437 s 
0437 0437 s ;-------------------------------------------------------------
0437 0437 s ; command directory
0437 0437 s ;-------------------------------------------------------------
0437 0437 s ARR_COMMANDS:
0437 0437 s     ; Version
0437 0437 d ed04
0439 0437 u 02 02
0437 0437 s     word [CMD_VERSION]
0439 0439 d 76657200
043d 0439 u 04 02
0439 0439 s     db "ver",0
043d 043d s     ; Clear Screen
043d 043d d 0205
043f 043d u 02 02
043d 043d s     word [CMD_CLEAR]
043f 043f d 636c7200
0443 043f u 04 02
043f 043f s     db "clr",0
0443 0443 s     ; Help
0443 0443 d d804
0445 0443 u 02 02
0443 0443 s     word [CMD_HELP]
0445 0445 d 3f00
0447 0445 u 02 02
0445 0445 s     db "?",0
0447 0447 s     ; Set Memory
0447 0447 d 8b05
0449 0447 u 02 02
0447 0447 s     word [CMD_MSET]
0449 0449 d 6d736574202400
0450 0449 u 07 02
0449 0449 s     db "mset $",0
0450 0450 s     ; Get Memory
0450 0450 d af05
0452 0450 u 02 02
0450 0450 s     word [CMD_MGET]
0452 0452 d 6d676574202400
0459 0452 u 07 02
0452 0452 s     db "mget $",0
0459 0459 s     ; IO Set
0459 0459 d 5f05
045b 0459 u 02 02
0459 0459 s     word [CMD_IOSET]
045b 045b d 696f736574202400
0463 045b u 08 02
045b 045b s     db "ioset $",0
0463 0463 s     ; IO Get
0463 0463 d 2f05
0465 0463 u 02 02
0463 0463 s     word [CMD_IOGET]
0465 0465 d 696f676574202400
046d 0465 u 08 02
0465 0465 s     db "ioget $",0
046d 046d s     ; Hey-Dump
046d 046d d 0905
046f 046d u 02 02
046d 046d s     word [CMD_HEXDUMP]
046f 046f d 6864202400
0474 046f u 05 02
046f 046f s     db "hd $",0
0474 0474 s     ; Exec
0474 0474 d 1d05
0476 0474 u 02 02
0474 0474 s     word [CMD_EXEC]
0476 0476 d 65786563202400
047d 0476 u 07 02
0476 0476 s     db "exec $",0
047d 047d s     
047d 047d d 0000
047f 047d u 02 02
047d 047d s     word 0x0000 ; END
047f 047f s 
047f 047f s STR_NOTFOUND:
047f 047f d 0d0a696e76616c696420636f6d6d616e642f73796e7461780d0a00
049a 047f u 1b 02
047f 047f s     db 13,10,"invalid command/syntax",13,10,0
049a 049a s 
049a 049a s ;-------------------------------------------------------------
049a 049a s ; command parser
049a 049a s ;-------------------------------------------------------------
049a 049a s 
049a 049a s ;*****************
049a 049a s ; PARSE_CMD
049a 049a s ;*****************
049a 049a s ;Description: Pares Input Command
049a 049a s ;
049a 049a s ;Inputs: none
049a 049a s ;
049a 049a s ;Outputs: none
049a 049a s ;
049a 049a s ;Destroys: A, BC, DE, HL
049a 049a s PARSE_CMD:
049a 049a d 113704
049d 049a u 03 01
049a 049a s     LD DE, [ARR_COMMANDS]           ; Load compare ADDR 
049d 049d s 
049d 049d s PARSE_CMD_START:
049d 049d d 1a
049e 049d u 01 01
049d 049d s     LD A, (DE)                       ;Load first 2 bytes: Jump address
049e 049e d 4f
049f 049e u 01 01
049e 049e s     LD C,A
049f 049f d 13
04a0 049f u 01 01
049f 049f s     INC DE   
04a0 04a0 d 1a
04a1 04a0 u 01 01
04a0 04a0 s     LD A, (DE)                       ;Load first 2 bytes: Jump address
04a1 04a1 d 47
04a2 04a1 u 01 01
04a1 04a1 s     LD B,A
04a2 04a2 d 13
04a3 04a2 u 01 01
04a2 04a2 s     INC DE                          ;DE is now the starting address of the null-terminated-string 
04a3 04a3 s     
04a3 04a3 s     ; Compare 16 bit routine pointer
04a3 04a3 d 210000
04a6 04a3 u 03 01
04a3 04a3 s     LD HL,0000h                     ;load HL with value to compare -> 0x0000
04a6 04a6 d ed42
04a8 04a6 u 02 01
04a6 04a6 s     SBC HL,BC                       ;substract HL from BC. If both match, Z flag will be set
04a8 04a8 d cac404
04ab 04a8 u 03 01
04a8 04a8 s     JP Z,PARSE_CMD_NO_MATCH         ;jmp to exit block for parser
04ab 04ab s     ; if > 0 -> continue
04ab 04ab s 
04ab 04ab d 210540
04ae 04ab u 03 01
04ab 04ab s     LD HL, [MEM_PROMPT_START]       ; Input Buffer
04ae 04ae d cdcb04
04b1 04ae u 03 01
04ae 04ae s     CALL PARSE_CMD_CMP_STRING_START ;parse 1st elemeent
04b1 04b1 d cabd04
04b4 04b1 u 03 01
04b1 04b1 s     JP Z,PARSE_CMD_START_FOUND      ;jmp to pointer if match
04b4 04b4 s 
04b4 04b4 s PARSE_CMD_START_NOT_FOUND:          ;inc DE to next element
04b4 04b4 d 1a
04b5 04b4 u 01 01
04b4 04b4 s     LD A,(DE)                       ;find end of string -> load current byte
04b5 04b5 d 13
04b6 04b5 u 01 01
04b5 04b5 s     INC DE                          
04b6 04b6 d a7
04b7 04b6 u 01 01
04b6 04b6 s     AND A                           ;find null termination
04b7 04b7 d ca9d04
04ba 04b7 u 03 01
04b7 04b7 s     JP Z, PARSE_CMD_START          ;if current byte-1 == 0x00 -> continue loop @ PARSE_CMD_START
04ba 04ba d c3b404
04bd 04ba u 03 01
04ba 04ba s     JP PARSE_CMD_START_NOT_FOUND
04bd 04bd s 
04bd 04bd s PARSE_CMD_START_FOUND:              ;if command matched
04bd 04bd d cdc104
04c0 04bd u 03 01
04bd 04bd s     CALL PARSE_CMD_START_EXEC       ;call routine
04c0 04c0 d c9
04c1 04c0 u 01 01
04c0 04c0 s     RET                             ;exit parser
04c1 04c1 s 
04c1 04c1 s PARSE_CMD_START_EXEC:               ;dynamic Z80 call -> serves as function and will put last PC value on stack
04c1 04c1 s 
04c1 04c1 s 
04c1 04c1 d 60
04c2 04c1 u 01 01
04c1 04c1 s     LD H,B                       ;load HL with pointer to routine
04c2 04c2 d 69
04c3 04c2 u 01 01
04c2 04c2 s     LD L,C
04c3 04c3 d e9
04c4 04c3 u 01 01
04c3 04c3 s     JP (HL)                         ;jmp to routine
04c4 04c4 s     
04c4 04c4 s PARSE_CMD_NO_MATCH:                 ;if no command matched
04c4 04c4 d 017f04
04c7 04c4 u 03 01
04c4 04c4 s     LD BC,[STR_NOTFOUND]            ;load pointer to string STR_NOTFOUND
04c7 04c7 d cd9a03
04ca 04c7 u 03 01
04c7 04c7 s     CALL CONSOLE_PRINTSTR           ;print null-terminated string to console
04ca 04ca d c9
04cb 04ca u 01 01
04ca 04ca s     RET                             ;exit parser
04cb 04cb s 
04cb 04cb s ; HL = String to compare
04cb 04cb s ; DE = String Pattern
04cb 04cb s PARSE_CMD_CMP_STRING_START:
04cb 04cb d 1a
04cc 04cb u 01 01
04cb 04cb s     LD A,(DE)
04cc 04cc d a7
04cd 04cc u 01 01
04cc 04cc s     AND A
04cd 04cd d c8
04ce 04cd u 01 01
04cd 04cd s     RET Z; RETURN Z=1 if reached END wizhout mismatch
04ce 04ce d be
04cf 04ce u 01 01
04ce 04ce s     CP (HL)
04cf 04cf d c0
04d0 04cf u 01 01
04cf 04cf s     RET NZ; If not Match (z=0) exit
04d0 04d0 s PARSE_CMD_CMP_STRING_START_MATCHED:
04d0 04d0 d 7e
04d1 04d0 u 01 01
04d0 04d0 s     LD A,(HL)
04d1 04d1 d a7
04d2 04d1 u 01 01
04d1 04d1 s     AND A; String to compare reached end
04d2 04d2 d c8
04d3 04d2 u 01 01
04d2 04d2 s     RET Z
04d3 04d3 s PARSE_CMD_CMP_STRING_START_CONTINUE:
04d3 04d3 d 23
04d4 04d3 u 01 01
04d3 04d3 s     INC HL
04d4 04d4 d 13
04d5 04d4 u 01 01
04d4 04d4 s     INC DE
04d5 04d5 d c3cb04
04d8 04d5 u 03 01
04d5 04d5 s     JP PARSE_CMD_CMP_STRING_START
04d8 04d8 s     
04d8 04d8 s ;-------------------------------------------------------------
04d8 04d8 s ; commands routines
04d8 04d8 s ;-------------------------------------------------------------
04d8 04d8 s CMD_HELP:
04d8 04d8 d 015f06
04db 04d8 u 03 01
04d8 04d8 s     LD BC,[MSG_CMD_HELP]
04db 04db d cd9a03
04de 04db u 03 01
04db 04db s     CALL CONSOLE_PRINTSTR
04de 04de s 
04de 04de d 3e0d
04e0 04de u 02 01
04de 04de s     LD A,13
04e0 04e0 d d311
04e2 04e0 u 02 01
04e0 04e0 s     out (IO_SIO0B_D),A
04e2 04e2 d cdb803
04e5 04e2 u 03 01
04e2 04e2 s     call TX_EMP
04e5 04e5 d 3e0a
04e7 04e5 u 02 01
04e5 04e5 s     LD A,10
04e7 04e7 d d311
04e9 04e7 u 02 01
04e7 04e7 s     out (IO_SIO0B_D),A
04e9 04e9 d cdb803
04ec 04e9 u 03 01
04e9 04e9 s     call TX_EMP
04ec 04ec d c9
04ed 04ec u 01 01
04ec 04ec s     RET
04ed 04ed s 
04ed 04ed s CMD_VERSION:
04ed 04ed d 01cd06
04f0 04ed u 03 01
04ed 04ed s     LD BC,[MSG_CMD_VER]
04f0 04f0 d cd9a03
04f3 04f0 u 03 01
04f0 04f0 s     CALL CONSOLE_PRINTSTR
04f3 04f3 s 
04f3 04f3 d 3e0d
04f5 04f3 u 02 01
04f3 04f3 s     LD A,13
04f5 04f5 d d311
04f7 04f5 u 02 01
04f5 04f5 s     out (IO_SIO0B_D),A
04f7 04f7 d cdb803
04fa 04f7 u 03 01
04f7 04f7 s     call TX_EMP
04fa 04fa d 3e0a
04fc 04fa u 02 01
04fa 04fa s     LD A,10
04fc 04fc d d311
04fe 04fc u 02 01
04fc 04fc s     out (IO_SIO0B_D),A
04fe 04fe d cdb803
0501 04fe u 03 01
04fe 04fe s     call TX_EMP
0501 0501 d c9
0502 0501 u 01 01
0501 0501 s     RET
0502 0502 s 
0502 0502 s CMD_CLEAR:
0502 0502 d 013703
0505 0502 u 03 01
0502 0502 s     LD BC,[MSG_CLEAR]
0505 0505 d cd9a03
0508 0505 u 03 01
0505 0505 s     CALL CONSOLE_PRINTSTR
0508 0508 d c9
0509 0508 u 01 01
0508 0508 s     RET
0509 0509 s 
0509 0509 s CMD_HEXDUMP:
0509 0509 d 010940
050c 0509 u 03 01
0509 0509 s     LD BC,MEM_PROMPT_START + 4
050c 050c d cd1b03
050f 050c u 03 01
050c 050c s     CALL DHEX_TO_BYTE
050f 050f d 67
0510 050f u 01 01
050f 050f s     LD H,A
0510 0510 s 
0510 0510 d 010b40
0513 0510 u 03 01
0510 0510 s     LD BC,MEM_PROMPT_START + 6
0513 0513 d cd1b03
0516 0513 u 03 01
0513 0513 s     CALL DHEX_TO_BYTE
0516 0516 d e6f0
0518 0516 u 02 01
0516 0516 s     AND 0xF0
0518 0518 d 6f
0519 0518 u 01 01
0518 0518 s     LD L,A
0519 0519 s 
0519 0519 d cd9002
051c 0519 u 03 01
0519 0519 s     CALL PRINT_HEXDUMP
051c 051c d c9
051d 051c u 01 01
051c 051c s     RET
051d 051d s 
051d 051d s CMD_EXEC:
051d 051d d 010b40
0520 051d u 03 01
051d 051d s     LD BC,MEM_PROMPT_START + 6
0520 0520 d cd1b03
0523 0520 u 03 01
0520 0520 s     CALL DHEX_TO_BYTE
0523 0523 d 67
0524 0523 u 01 01
0523 0523 s     LD H,A
0524 0524 s 
0524 0524 d 010d40
0527 0524 u 03 01
0524 0524 s     LD BC,MEM_PROMPT_START + 8
0527 0527 d cd1b03
052a 0527 u 03 01
0527 0527 s     CALL DHEX_TO_BYTE
052a 052a d 6f
052b 052a u 01 01
052a 052a s     LD L,A
052b 052b s 
052b 052b d 31ff7f
052e 052b u 03 01
052b 052b s     LD SP,0x7FFF
052e 052e d e9
052f 052e u 01 01
052e 052e s     JP HL
052f 052f s 
052f 052f s CMD_IOGET:
052f 052f d 010c40
0532 052f u 03 01
052f 052f s     LD BC,MEM_PROMPT_START + 7
0532 0532 d cd1b03
0535 0532 u 03 01
0532 0532 s     CALL DHEX_TO_BYTE
0535 0535 d 4f
0536 0535 u 01 01
0535 0535 s     LD C, A
0536 0536 s 
0536 0536 d 3e0d
0538 0536 u 02 01
0536 0536 s     LD A,13
0538 0538 d d311
053a 0538 u 02 01
0538 0538 s     out (IO_SIO0B_D),A
053a 053a d cdb803
053d 053a u 03 01
053a 053a s     call TX_EMP
053d 053d d 3e0a
053f 053d u 02 01
053d 053d s     LD A,10
053f 053f d d311
0541 053f u 02 01
053f 053f s     out (IO_SIO0B_D),A
0541 0541 d cdb803
0544 0541 u 03 01
0541 0541 s     call TX_EMP
0544 0544 s 
0544 0544 d ed78
0546 0544 u 02 01
0544 0544 s     IN A,(C)
0546 0546 d cd4402
0549 0546 u 03 01
0546 0546 s     CALL PRINT_A_HEX
0549 0549 d 3e68
054b 0549 u 02 01
0549 0549 s     LD A,'h'
054b 054b s 
054b 054b d d311
054d 054b u 02 01
054b 054b s     out (IO_SIO0B_D),A
054d 054d d cdb803
0550 054d u 03 01
054d 054d s     call TX_EMP
0550 0550 d 3e0d
0552 0550 u 02 01
0550 0550 s     LD A,13
0552 0552 d d311
0554 0552 u 02 01
0552 0552 s     out (IO_SIO0B_D),A
0554 0554 d cdb803
0557 0554 u 03 01
0554 0554 s     call TX_EMP
0557 0557 d 3e0a
0559 0557 u 02 01
0557 0557 s     LD A,10
0559 0559 d d311
055b 0559 u 02 01
0559 0559 s     out (IO_SIO0B_D),A
055b 055b d cdb803
055e 055b u 03 01
055b 055b s     call TX_EMP
055e 055e d c9
055f 055e u 01 01
055e 055e s     RET
055f 055f s 
055f 055f s CMD_IOSET:
055f 055f d 010c40
0562 055f u 03 01
055f 055f s     LD BC,MEM_PROMPT_START + 7
0562 0562 d cd1b03
0565 0562 u 03 01
0562 0562 s     CALL DHEX_TO_BYTE
0565 0565 d 67
0566 0565 u 01 01
0565 0565 s     LD H,A
0566 0566 s 
0566 0566 d 010f40
0569 0566 u 03 01
0566 0566 s     LD BC,MEM_PROMPT_START + 10
0569 0569 d cd1b03
056c 0569 u 03 01
0569 0569 s     CALL DHEX_TO_BYTE
056c 056c s 
056c 056c s     ;; DEBUG START
056c 056c d f5
056d 056c u 01 01
056c 056c s     PUSH AF
056d 056d s 
056d 056d d 3e20
056f 056d u 02 01
056d 056d s     LD A,' '
056f 056f d d311
0571 056f u 02 01
056f 056f s     out (IO_SIO0B_D),A
0571 0571 d cdb803
0574 0571 u 03 01
0571 0571 s     call TX_EMP
0574 0574 s 
0574 0574 d 7c
0575 0574 u 01 01
0574 0574 s     LD A,H
0575 0575 d cd4402
0578 0575 u 03 01
0575 0575 s     CALL PRINT_A_HEX
0578 0578 s 
0578 0578 d f1
0579 0578 u 01 01
0578 0578 s     POP AF
0579 0579 s     ;; DEBUG END
0579 0579 s 
0579 0579 d 4c
057a 0579 u 01 01
0579 0579 s     LD C,H
057a 057a d ed79
057c 057a u 02 01
057a 057a s     OUT (C),A
057c 057c s 
057c 057c d 3e0d
057e 057c u 02 01
057c 057c s     LD A,13
057e 057e d d311
0580 057e u 02 01
057e 057e s     out (IO_SIO0B_D),A
0580 0580 d cdb803
0583 0580 u 03 01
0580 0580 s     call TX_EMP
0583 0583 d 3e0a
0585 0583 u 02 01
0583 0583 s     LD A,10
0585 0585 d d311
0587 0585 u 02 01
0585 0585 s     out (IO_SIO0B_D),A
0587 0587 d cdb803
058a 0587 u 03 01
0587 0587 s     call TX_EMP
058a 058a d c9
058b 058a u 01 01
058a 058a s     RET
058b 058b s 
058b 058b s CMD_MSET:
058b 058b d 010b40
058e 058b u 03 01
058b 058b s     LD BC,MEM_PROMPT_START + 6
058e 058e d cd1b03
0591 058e u 03 01
058e 058e s     CALL DHEX_TO_BYTE
0591 0591 d 67
0592 0591 u 01 01
0591 0591 s     LD H,A
0592 0592 s 
0592 0592 d 010d40
0595 0592 u 03 01
0592 0592 s     LD BC,MEM_PROMPT_START + 8
0595 0595 d cd1b03
0598 0595 u 03 01
0595 0595 s     CALL DHEX_TO_BYTE
0598 0598 d 6f
0599 0598 u 01 01
0598 0598 s     LD L,A
0599 0599 s 
0599 0599 s     
0599 0599 d 011040
059c 0599 u 03 01
0599 0599 s     LD BC,MEM_PROMPT_START + 11
059c 059c d cd1b03
059f 059c u 03 01
059c 059c s     CALL DHEX_TO_BYTE
059f 059f s     
059f 059f d 77
05a0 059f u 01 01
059f 059f s     LD (HL),A
05a0 05a0 s 
05a0 05a0 d 3e0d
05a2 05a0 u 02 01
05a0 05a0 s     LD A,13
05a2 05a2 d d311
05a4 05a2 u 02 01
05a2 05a2 s     out (IO_SIO0B_D),A
05a4 05a4 d cdb803
05a7 05a4 u 03 01
05a4 05a4 s     call TX_EMP
05a7 05a7 d 3e0a
05a9 05a7 u 02 01
05a7 05a7 s     LD A,10
05a9 05a9 d d311
05ab 05a9 u 02 01
05a9 05a9 s     out (IO_SIO0B_D),A
05ab 05ab d cdb803
05ae 05ab u 03 01
05ab 05ab s     call TX_EMP
05ae 05ae d c9
05af 05ae u 01 01
05ae 05ae s     RET
05af 05af s 
05af 05af s CMD_MGET:
05af 05af d 010b40
05b2 05af u 03 01
05af 05af s     LD BC,MEM_PROMPT_START + 6
05b2 05b2 d cd1b03
05b5 05b2 u 03 01
05b2 05b2 s     CALL DHEX_TO_BYTE
05b5 05b5 d 67
05b6 05b5 u 01 01
05b5 05b5 s     LD H,A
05b6 05b6 s 
05b6 05b6 d 010d40
05b9 05b6 u 03 01
05b6 05b6 s     LD BC,MEM_PROMPT_START + 8
05b9 05b9 d cd1b03
05bc 05b9 u 03 01
05b9 05b9 s     CALL DHEX_TO_BYTE
05bc 05bc d 6f
05bd 05bc u 01 01
05bc 05bc s     LD L,A
05bd 05bd s 
05bd 05bd d 3e0d
05bf 05bd u 02 01
05bd 05bd s     LD A,13
05bf 05bf d d311
05c1 05bf u 02 01
05bf 05bf s     out (IO_SIO0B_D),A
05c1 05c1 d cdb803
05c4 05c1 u 03 01
05c1 05c1 s     call TX_EMP
05c4 05c4 d 3e0a
05c6 05c4 u 02 01
05c4 05c4 s     LD A,10
05c6 05c6 d d311
05c8 05c6 u 02 01
05c6 05c6 s     out (IO_SIO0B_D),A
05c8 05c8 d cdb803
05cb 05c8 u 03 01
05c8 05c8 s     call TX_EMP
05cb 05cb d 7e
05cc 05cb u 01 01
05cb 05cb s     LD A,(HL)
05cc 05cc d cd4402
05cf 05cc u 03 01
05cc 05cc s     CALL PRINT_A_HEX
05cf 05cf d 3e68
05d1 05cf u 02 01
05cf 05cf s     LD A,'h'
05d1 05d1 d d311
05d3 05d1 u 02 01
05d1 05d1 s     out (IO_SIO0B_D),A
05d3 05d3 d cdb803
05d6 05d3 u 03 01
05d3 05d3 s     call TX_EMP
05d6 05d6 d 3e0d
05d8 05d6 u 02 01
05d6 05d6 s     LD A,13
05d8 05d8 d d311
05da 05d8 u 02 01
05d8 05d8 s     out (IO_SIO0B_D),A
05da 05da d cdb803
05dd 05da u 03 01
05da 05da s     call TX_EMP
05dd 05dd d 3e0a
05df 05dd u 02 01
05dd 05dd s     LD A,10
05df 05df d d311
05e1 05df u 02 01
05df 05df s     out (IO_SIO0B_D),A
05e1 05e1 d cdb803
05e4 05e1 u 03 01
05e1 05e1 s     call TX_EMP
05e4 05e4 d c9
05e5 05e4 u 01 01
05e4 05e4 s     RET
05e5 05e5 s 
05e5 05e5 s 
05e5 05e5 s 
05e5 05e5 s ;-------------------------------------------------------------
05e5 05e5 s ; commands strings
05e5 05e5 s ;-------------------------------------------------------------
05e5 05e5 s MSG_SYS_VER:
05e5 05e5 d 1b5b324a1b5b48
05ec 05e5 u 07 02
05e5 05e5 s     db 27, '[2J', 27, '[H'
05ec 05ec d 5a3843204d6b204956202d2041205a383020486f6d656272657720436f6d70757465720d0a
0611 05ec u 25 02
05ec 05ec s     db 'Z8C Mk IV - A Z80 Homebrew Computer',13,10
0611 0611 d 4d6f6e69746f7220524f4d205665722e20312e302062792044656e6e69732047756e6961202832303232290d0a
063e 0611 u 2d 02
0611 0611 s     db 'Monitor ROM Ver. 1.0 by Dennis Gunia (2022)',13,10
063e 063e d 34386b2052414d202d20344d487a205a383020435055202d20537461636b202400
065f 063e u 21 02
063e 063e s     db '48k RAM - 4MHz Z80 CPU - Stack $',0
065f 065f s 
065f 065f s MSG_CMD_HELP:
065f 065f d 0d0a
0661 065f u 02 02
065f 065f s     db 13,10
0661 0661 d 686420243c616464723e20206d67657420243c616464723e20206d73657420243c616464723e203c76616c3e0d0a
068f 0661 u 2e 02
0661 0661 s     db "hd $<addr>  mget $<addr>  mset $<addr> <val>",13,10
068f 068f d 696f67657420243c616464723e2020696f73657420243c616464723e203c76616c3e0d0a
06b3 068f u 24 02
068f 068f s     db "ioget $<addr>  ioset $<addr> <val>",13,10
06b3 06b3 d 3f20206578656320243c616464723e2020636c722020766572
06cc 06b3 u 19 02
06b3 06b3 s     db "?  exec $<addr>  clr  ver"
06cc 06cc d 00
06cd 06cc u 01 02
06cc 06cc s     db 0
06cd 06cd s 
06cd 06cd s MSG_CMD_VER:
06cd 06cd d 0d0a
06cf 06cd u 02 02
06cd 06cd s     db 13,10
06cf 06cf d 5a3843204d6f6e69746f722050726f6772616d6d0d0a
06e5 06cf u 16 02
06cf 06cf s     db "Z8C Monitor Programm",13,10
06e5 06e5 d 524f4d2056657273696f6e20312e30202d205772697474656e2062792044656e6e69732047756e69612c20323032320d0a
0716 06e5 u 31 02
06e5 06e5 s     db "ROM Version 1.0 - Written by Dennis Gunia, 2022",13,10
0716 0716 d 332e3638363431314d487a204350552c2034384b2052414d2053797374656d2c204a6f686e20332c31360d0a
0742 0716 u 2c 02
0716 0716 s     db "3.686411MHz CPU, 48K RAM System, John 3,16",13,10
0742 0742 d 7777772e64656e6e697367756e69612e6465
0754 0742 u 12 02
0742 0742 s     db "www.dennisgunia.de"
0754 0754 f main.asm
0754 0754 d 00
0755 0754 u 01 02
0754 0754 s     db 0
0755 0755 s 
0755 0755 s ; include subroutines
0755 0755 s ;.include "sub_soundtest.s"
0755 0755 s 
0755 0755 s INT_VEC:
000c 000c s     org 0Ch
000c 000c d 2104
000e 000c u 02 02
000c 000c s     DEFW RX_CHA_AVAILABLE
000e 000e s     org 0Eh
000e 000e d 5001
0010 000e u 02 02
000e 000e s     DEFW SPEC_RX_CONDITON
0010 0010 s     
0010 0010 s init:
0000 0000 s     org 0x0000
0000 0000 d c30001
0003 0000 u 03 01
0000 0000 s     jp PROG_ROM_START
0003 0003 s 
0003 0003 s init_led:
0100 0100 s     org PROG_ROM_START
0100 0100 d 3e00
0102 0100 u 02 01
0100 0100 s     LD A,0x00
0102 0102 d d320
0104 0102 u 02 01
0102 0102 s     OUT (IO_REG0),A
0104 0104 s 
0104 0104 s init_console:
0104 0104 d cdc703
0107 0104 u 03 01
0104 0104 s     CALL CONSOLE_INIT
0107 0107 s 
0107 0107 d 1608
0109 0107 u 02 01
0107 0107 s     LD	  D,0x08	; Select register #8
0109 0109 d 3e00
010b 0109 u 02 01
0109 0109 s     LD	  A,0x00	; Volume channel A 0
010b 010b d cd0704
010e 010b u 03 01
010b 010b s     CALL AY0_WRITE_REG
010e 010e d 1609
0110 010e u 02 01
010e 010e s     LD	  D,0x09	; Select register #9
0110 0110 d 3e00
0112 0110 u 02 01
0110 0110 s     LD	  A,0x00	; Volume channel B 0
0112 0112 d cd0704
0115 0112 u 03 01
0112 0112 s     CALL AY0_WRITE_REG
0115 0115 d 160a
0117 0115 u 02 01
0115 0115 s     LD	  D,0x0A	; Select register #10
0117 0117 d 3e00
0119 0117 u 02 01
0117 0117 s     LD	  A,0x00	; Volume channel C 0
0119 0119 d cd0704
011c 0119 u 03 01
0119 0119 s     CALL AY0_WRITE_REG
011c 011c s     
011c 011c s 
011c 011c s ;INT_INI:
011c 011c s ;    ld A,0
011c 011c s ;    ld I,A  ;load I reg with zero
011c 011c s ;    im 2    ;set int mode 2
011c 011c s ;    ei      ;enable interupt
011c 011c s 
011c 011c d 3e00
011e 011c u 02 01
011c 011c s     LD A,0x00
011e 011e d d311
0120 011e u 02 01
011e 011e s     OUT (IO_SIO0B_D),A
0120 0120 d cdb803
0123 0120 u 03 01
0120 0120 s     CALL TX_EMP
0123 0123 s 
0123 0123 d cd1804
0126 0123 u 03 01
0123 0123 s     call A_RTS_ON
0126 0126 s 
0126 0126 s     ; PRINT BANNER
0126 0126 d 01e505
0129 0126 u 03 01
0126 0126 s     LD BC, [MSG_SYS_VER]
0129 0129 d cd9a03
012c 0129 u 03 01
0129 0129 s     CALL CONSOLE_PRINTSTR
012c 012c s 
012c 012c d 31ff7f
012f 012c u 03 01
012c 012c s     LD SP,07FFFh
012f 012f s     ; Print SP Location
012f 012f d ed730040
0133 012f u 04 01
012f 012f s     LD (0x4000),SP
0133 0133 d 3a0140
0136 0133 u 03 01
0133 0133 s     LD A,(0x4001)
0136 0136 d cd4402
0139 0136 u 03 01
0136 0136 s     CALL PRINT_A_HEX
0139 0139 d 3a0040
013c 0139 u 03 01
0139 0139 s     LD A,(0x4000)
013c 013c d cd4402
013f 013c u 03 01
013c 013c s     CALL PRINT_A_HEX
013f 013f s 
013f 013f d 3e0d
0141 013f u 02 01
013f 013f s     LD A,13
0141 0141 d d311
0143 0141 u 02 01
0141 0141 s     out (IO_SIO0B_D),A
0143 0143 d cdb803
0146 0143 u 03 01
0143 0143 s     call TX_EMP
0146 0146 d 3e0a
0148 0146 u 02 01
0146 0146 s     LD A,10
0148 0148 d d311
014a 0148 u 02 01
0148 0148 s     out (IO_SIO0B_D),A
014a 014a d cdb803
014d 014a u 03 01
014a 014a s     call TX_EMP
014d 014d s 
014d 014d d c36501
0150 014d u 03 01
014d 014d s     JP CONSOLE_PROMPT
0150 0150 s 
0150 0150 s 
0150 0150 s 
0150 0150 s 
0150 0150 s SPEC_RX_CONDITON:
0150 0150 s     
0150 0150 d c30000
0153 0150 u 03 01
0150 0150 s     jp 0000h
0153 0153 s 
0153 0153 s 
0153 0153 s DELAY:
0153 0153 d dde5
0155 0153 u 02 01
0153 0153 s     PUSH IX
0155 0155 d c5
0156 0155 u 01 01
0155 0155 s     PUSH BC
0156 0156 d dd210040
015a 0156 u 04 01
0156 0156 s     LD IX,0x4000
015a 015a d 010100
015d 015a u 03 01
015a 015a s     LD BC,1
015d 015d s DELAY_LOOP:
015d 015d d dd09
015f 015d u 02 01
015d 015d s     ADD IX,BC
015f 015f d 30fc
0161 015f u 02 01
015f 015f s     JR NC, DELAY_LOOP
0161 0161 d c1
0162 0161 u 01 01
0161 0161 s     POP BC
0162 0162 d dde1
0164 0162 u 02 01
0162 0162 s     POP IX
0164 0164 d c9
0165 0164 u 01 01
0164 0164 s     RET
0165 0165 s 
0165 0165 s ; Console Functions
0165 0165 s 
0165 0165 s 
0165 0165 s CONSOLE_PROMPT:
0165 0165 s     ;Console Prompt
0165 0165 d 3e0a
0167 0165 u 02 01
0165 0165 s     LD A, 10
0167 0167 d d311
0169 0167 u 02 01
0167 0167 s     out (IO_SIO0B_D),A
0169 0169 d cdb803
016c 0169 u 03 01
0169 0169 s     call TX_EMP
016c 016c d 3e3f
016e 016c u 02 01
016c 016c s     LD A,'?'
016e 016e d d311
0170 016e u 02 01
016e 016e s     out (IO_SIO0B_D),A
0170 0170 d cdb803
0173 0170 u 03 01
0170 0170 s     call TX_EMP
0173 0173 d 3e3e
0175 0173 u 02 01
0173 0173 s     LD A,'>'
0175 0175 d d311
0177 0175 u 02 01
0175 0175 s     out (IO_SIO0B_D),A
0177 0177 d cdb803
017a 0177 u 03 01
0177 0177 s     call TX_EMP
017a 017a d 3e20
017c 017a u 02 01
017a 017a s     LD A,' '
017c 017c d d311
017e 017c u 02 01
017c 017c s     out (IO_SIO0B_D),A
017e 017e d cdb803
0181 017e u 03 01
017e 017e s     call TX_EMP
0181 0181 d 3e5f
0183 0181 u 02 01
0181 0181 s     LD A,"_"
0183 0183 d d311
0185 0183 u 02 01
0183 0183 s     out (IO_SIO0B_D),A 
0185 0185 d cdb803
0188 0185 u 03 01
0185 0185 s     call TX_EMP
0188 0188 s 
0188 0188 s     ; Blinking Cursor
0188 0188 d dd2100e0
018c 0188 u 04 01
0188 0188 s     LD IX,CMD_CRS_SPEED
018c 018c d 010100
018f 018c u 03 01
018c 018c s     LD BC,1
018f 018f d 3e00
0191 018f u 02 01
018f 018f s     LD A,0
0191 0191 d 320040
0194 0191 u 03 01
0191 0191 s     LD (MEM_CURSOR_STATE),A
0194 0194 s     ; SET PROMPT LENGTH TO 0
0194 0194 d 3e00
0196 0194 u 02 01
0194 0194 s     LD A,0
0196 0196 d 320340
0199 0196 u 03 01
0196 0196 s     LD (MEM_PROMPT_SIZE),A
0199 0199 s 
0199 0199 s CONSOLE_PROMPT_LOOP:
0199 0199 s     ; READ INPUT
0199 0199 s     ; Delete Cursor if input Avail
0199 0199 s     ;JP CONSOLE_PROMPT_LOOP_2
0199 0199 d cdad03
019c 0199 u 03 01
0199 0199 s     CALL CONSOLE_READ_CHAR
019c 019c d a7
019d 019c u 01 01
019c 019c s     AND A
019d 019d d 320140
01a0 019d u 03 01
019d 019d s     LD (MEM_LAST_CHAR),A
01a0 01a0 s 
01a0 01a0 d ca0902
01a3 01a0 u 03 01
01a0 01a0 s     JP Z, CONSOLE_PROMPT_LOOP_2
01a3 01a3 s     ; if newline
01a3 01a3 d 160d
01a5 01a3 u 02 01
01a3 01a3 s     LD D, 13
01a5 01a5 d ba
01a6 01a5 u 01 01
01a5 01a5 s     CP D
01a6 01a6 d 2006
01a8 01a6 u 02 01
01a6 01a6 s     JR NZ, CONSOLE_PROMPT_LOOP_1
01a8 01a8 s 
01a8 01a8 d cd9a04
01ab 01a8 u 03 01
01a8 01a8 s     CALL PARSE_CMD
01ab 01ab s 
01ab 01ab d c36501
01ae 01ab u 03 01
01ab 01ab s     JP CONSOLE_PROMPT
01ae 01ae s 
01ae 01ae s CONSOLE_PROMPT_LOOP_1: ; Not new line
01ae 01ae s    
01ae 01ae d 3a0140
01b1 01ae u 03 01
01ae 01ae s     LD A,(MEM_LAST_CHAR)
01b1 01b1 d 167f
01b3 01b1 u 02 01
01b1 01b1 s     LD D, 0x7F
01b3 01b3 d ba
01b4 01b3 u 01 01
01b3 01b3 s     CP D
01b4 01b4 d 2024
01b6 01b4 u 02 01
01b4 01b4 s     JR NZ, CONSOLE_PROMPT_LOOP_1B
01b6 01b6 s 
01b6 01b6 s     ; if Backspace
01b6 01b6 d 3a0340
01b9 01b6 u 03 01
01b6 01b6 s     LD A,(MEM_PROMPT_SIZE); test if 0
01b9 01b9 d a7
01ba 01b9 u 01 01
01b9 01b9 s     AND A
01ba 01ba d ca0902
01bd 01ba u 03 01
01ba 01ba s     JP Z,CONSOLE_PROMPT_LOOP_2; no action if buffer empty
01bd 01bd s 
01bd 01bd s     ;EXEC this if backspace (08d)
01bd 01bd d 3d
01be 01bd u 01 01
01bd 01bd s     DEC A
01be 01be d 320340
01c1 01be u 03 01
01be 01be s     LD (MEM_PROMPT_SIZE),A  ; store size to mem
01c1 01c1 s 
01c1 01c1 d 3e7f
01c3 01c1 u 02 01
01c1 01c1 s     LD A, 0x7F
01c3 01c3 d d311
01c5 01c3 u 02 01
01c3 01c3 s     out (IO_SIO0B_D),A
01c5 01c5 d cdb803
01c8 01c5 u 03 01
01c5 01c5 s     call TX_EMP
01c8 01c8 s 
01c8 01c8 d 3a0140
01cb 01c8 u 03 01
01c8 01c8 s     LD A,(MEM_LAST_CHAR)
01cb 01cb d d311
01cd 01cb u 02 01
01cb 01cb s     out (IO_SIO0B_D),A
01cd 01cd d cdb803
01d0 01cd u 03 01
01cd 01cd s     call TX_EMP
01d0 01d0 s 
01d0 01d0 d 3e20
01d2 01d0 u 02 01
01d0 01d0 s     LD A," "
01d2 01d2 d d311
01d4 01d2 u 02 01
01d2 01d2 s     out (IO_SIO0B_D),A 
01d4 01d4 d cdb803
01d7 01d4 u 03 01
01d4 01d4 s     call TX_EMP
01d7 01d7 s 
01d7 01d7 d c30902
01da 01d7 u 03 01
01d7 01d7 s     JP CONSOLE_PROMPT_LOOP_2
01da 01da s 
01da 01da s CONSOLE_PROMPT_LOOP_1B: ;IF not Backspace 
01da 01da s 
01da 01da s 
01da 01da s     ; CHECK if Controll Sequence
01da 01da s     
01da 01da s 
01da 01da s     ; Continue
01da 01da s 
01da 01da d 3a0340
01dd 01da u 03 01
01da 01da s     LD A,(MEM_PROMPT_SIZE)
01dd 01dd d 3c
01de 01dd u 01 01
01dd 01dd s     INC A
01de 01de d 320340
01e1 01de u 03 01
01de 01de s     LD (MEM_PROMPT_SIZE),A  ; store size to mem
01e1 01e1 s 
01e1 01e1 d 3e7f
01e3 01e1 u 02 01
01e1 01e1 s     LD A, 0x7F
01e3 01e3 d d311
01e5 01e3 u 02 01
01e3 01e3 s     out (IO_SIO0B_D),A
01e5 01e5 d cdb803
01e8 01e5 u 03 01
01e5 01e5 s     call TX_EMP
01e8 01e8 s 
01e8 01e8 d 3a0140
01eb 01e8 u 03 01
01e8 01e8 s     LD A,(MEM_LAST_CHAR)
01eb 01eb d d311
01ed 01eb u 02 01
01eb 01eb s     out (IO_SIO0B_D),A
01ed 01ed d cdb803
01f0 01ed u 03 01
01ed 01ed s     call TX_EMP
01f0 01f0 s 
01f0 01f0 d 3e20
01f2 01f0 u 02 01
01f0 01f0 s     LD A," "
01f2 01f2 d d311
01f4 01f2 u 02 01
01f2 01f2 s     out (IO_SIO0B_D),A 
01f4 01f4 d cdb803
01f7 01f4 u 03 01
01f4 01f4 s     call TX_EMP
01f7 01f7 s 
01f7 01f7 s     ;APPEND CHAR TO BUFFER
01f7 01f7 d c5
01f8 01f7 u 01 01
01f7 01f7 s     PUSH BC
01f8 01f8 d 210540
01fb 01f8 u 03 01
01f8 01f8 s     LD HL,MEM_PROMPT_START
01fb 01fb d 0600
01fd 01fb u 02 01
01fb 01fb s     LD B,0
01fd 01fd d 3a0340
0200 01fd u 03 01
01fd 01fd s     LD A,(MEM_PROMPT_SIZE)
0200 0200 d 3d
0201 0200 u 01 01
0200 0200 s     DEC A
0201 0201 d 4f
0202 0201 u 01 01
0201 0201 s     LD C,A
0202 0202 d ed4a
0204 0202 u 02 01
0202 0202 s     ADC HL, BC
0204 0204 d 3a0140
0207 0204 u 03 01
0204 0204 s     LD A, (MEM_LAST_CHAR)
0207 0207 d 77
0208 0207 u 01 01
0207 0207 s     LD (HL), A
0208 0208 d c1
0209 0208 u 01 01
0208 0208 s     POP BC
0209 0209 s     
0209 0209 s 
0209 0209 s 
0209 0209 s CONSOLE_PROMPT_LOOP_2:
0209 0209 s     ; Print Cursor
0209 0209 d dd09
020b 0209 u 02 01
0209 0209 s     ADD IX,BC
020b 020b d 308c
020d 020b u 02 01
020b 020b s     JR NC, CONSOLE_PROMPT_LOOP
020d 020d s     ; Toggle cycle
020d 020d d 3a0040
0210 020d u 03 01
020d 020d s     LD A,(MEM_CURSOR_STATE)
0210 0210 d ee01
0212 0210 u 02 01
0210 0210 s     XOR 1
0212 0212 d 2818
0214 0212 u 02 01
0212 0212 s     JR Z,CONSOLE_PROMPT_LOOP_3
0214 0214 d 320040
0217 0214 u 03 01
0214 0214 s     LD (MEM_CURSOR_STATE),A
0217 0217 s 
0217 0217 d 3e7f
0219 0217 u 02 01
0217 0217 s     LD A, 0x7F
0219 0219 d d311
021b 0219 u 02 01
0219 0219 s     out (IO_SIO0B_D),A
021b 021b d cdb803
021e 021b u 03 01
021b 021b s     call TX_EMP
021e 021e d 3e5f
0220 021e u 02 01
021e 021e s     LD A,'_'
0220 0220 d d311
0222 0220 u 02 01
0220 0220 s     out (IO_SIO0B_D),A
0222 0222 d cdb803
0225 0222 u 03 01
0222 0222 s     call TX_EMP
0225 0225 d dd2100e0
0229 0225 u 04 01
0225 0225 s     LD IX,CMD_CRS_SPEED
0229 0229 d c39901
022c 0229 u 03 01
0229 0229 s     JP CONSOLE_PROMPT_LOOP
022c 022c s 
022c 022c s CONSOLE_PROMPT_LOOP_3:
022c 022c d 320040
022f 022c u 03 01
022c 022c s     LD (MEM_CURSOR_STATE),A
022f 022f d 3e7f
0231 022f u 02 01
022f 022f s     LD A, 0x7F
0231 0231 d d311
0233 0231 u 02 01
0231 0231 s     out (IO_SIO0B_D),A
0233 0233 d cdb803
0236 0233 u 03 01
0233 0233 s     call TX_EMP
0236 0236 d 3e20
0238 0236 u 02 01
0236 0236 s     LD A,' '
0238 0238 d d311
023a 0238 u 02 01
0238 0238 s     out (IO_SIO0B_D),A
023a 023a d cdb803
023d 023a u 03 01
023a 023a s     call TX_EMP
023d 023d d dd2100e0
0241 023d u 04 01
023d 023d s     LD IX,CMD_CRS_SPEED
0241 0241 d c39901
0244 0241 u 03 01
0241 0241 s     JP CONSOLE_PROMPT_LOOP
0244 0244 s 
0244 0244 s ; A Contains Byte
0244 0244 s PRINT_A_HEX:
0244 0244 d c5
0245 0244 u 01 01
0244 0244 s     PUSH BC
0245 0245 d d5
0246 0245 u 01 01
0245 0245 s     PUSH DE
0246 0246 d cd8003
0249 0246 u 03 01
0246 0246 s     CALL STRCONV_BYTES_TO_HEX   ; New Kernel Call
0249 0249 d 78
024a 0249 u 01 01
0249 0249 s     LD A,B
024a 024a d d311
024c 024a u 02 01
024a 024a s     out (IO_SIO0B_D),A
024c 024c d cdb803
024f 024c u 03 01
024c 024c s     call TX_EMP
024f 024f d 79
0250 024f u 01 01
024f 024f s     LD A,C
0250 0250 d d311
0252 0250 u 02 01
0250 0250 s     out (IO_SIO0B_D),A
0252 0252 d cdb803
0255 0252 u 03 01
0252 0252 s     call TX_EMP
0255 0255 d d1
0256 0255 u 01 01
0255 0255 s     POP DE
0256 0256 d c1
0257 0256 u 01 01
0256 0256 s     POP BC
0257 0257 d c9
0258 0257 u 01 01
0257 0257 s     RET
0258 0258 s 
0258 0258 s MSG_HEXDUMP_HEADER:
0258 0258 d 0d0a424153452020203020203120203220203320203420203520203620203720203820203920204120204220204320204420204520204600
0290 0258 u 38 02
0258 0258 s     db 13,10,'BASE   0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F',0
0290 0290 s 
0290 0290 s ; HL contains Start ADDR
0290 0290 s PRINT_HEXDUMP:
0290 0290 d f5
0291 0290 u 01 01
0290 0290 s     PUSH AF
0291 0291 d c5
0292 0291 u 01 01
0291 0291 s     PUSH BC
0292 0292 d e5
0293 0292 u 01 01
0292 0292 s     PUSH HL
0293 0293 s     ; PRINT Header
0293 0293 d 015802
0296 0293 u 03 01
0293 0293 s     LD BC, [MSG_HEXDUMP_HEADER]
0296 0296 d cd9a03
0299 0296 u 03 01
0296 0296 s     CALL CONSOLE_PRINTSTR
0299 0299 d 0e00
029b 0299 u 02 01
0299 0299 s     LD C,0  ; Line Counter
029b 029b s 
029b 029b s PRINT_HEXDUMP_SOL: ; Start of Line
029b 029b d 3e0d
029d 029b u 02 01
029b 029b s     LD A,13
029d 029d d d311
029f 029d u 02 01
029d 029d s     out (IO_SIO0B_D),A
029f 029f d cdb803
02a2 029f u 03 01
029f 029f s     call TX_EMP
02a2 02a2 d 3e0a
02a4 02a2 u 02 01
02a2 02a2 s     LD A,10
02a4 02a4 d d311
02a6 02a4 u 02 01
02a4 02a4 s     out (IO_SIO0B_D),A
02a6 02a6 d cdb803
02a9 02a6 u 03 01
02a6 02a6 s     call TX_EMP
02a9 02a9 s 
02a9 02a9 d 7c
02aa 02a9 u 01 01
02a9 02a9 s     LD A,H
02aa 02aa d cd4402
02ad 02aa u 03 01
02aa 02aa s     CALL PRINT_A_HEX
02ad 02ad d 7d
02ae 02ad u 01 01
02ad 02ad s     LD A,L
02ae 02ae d cd4402
02b1 02ae u 03 01
02ae 02ae s     CALL PRINT_A_HEX
02b1 02b1 s 
02b1 02b1 d 3e68
02b3 02b1 u 02 01
02b1 02b1 s     LD A, 'h'
02b3 02b3 d d311
02b5 02b3 u 02 01
02b3 02b3 s     out (IO_SIO0B_D),A
02b5 02b5 d cdb803
02b8 02b5 u 03 01
02b5 02b5 s     call TX_EMP
02b8 02b8 d 3e3a
02ba 02b8 u 02 01
02b8 02b8 s     LD A, ':'
02ba 02ba d d311
02bc 02ba u 02 01
02ba 02ba s     out (IO_SIO0B_D),A
02bc 02bc d cdb803
02bf 02bc u 03 01
02bc 02bc s     call TX_EMP
02bf 02bf d 3e20
02c1 02bf u 02 01
02bf 02bf s     LD A, ' '
02c1 02c1 d d311
02c3 02c1 u 02 01
02c1 02c1 s     out (IO_SIO0B_D),A
02c3 02c3 d cdb803
02c6 02c3 u 03 01
02c3 02c3 s     call TX_EMP
02c6 02c6 s 
02c6 02c6 d 0600
02c8 02c6 u 02 01
02c6 02c6 s     LD B,0  ; Column Counter
02c8 02c8 s PRINT_HEXDUMP_LOOP1:
02c8 02c8 d 7e
02c9 02c8 u 01 01
02c8 02c8 s     LD A,(HL)
02c9 02c9 d cd4402
02cc 02c9 u 03 01
02c9 02c9 s     CALL PRINT_A_HEX
02cc 02cc d 3e20
02ce 02cc u 02 01
02cc 02cc s     LD A, ' '
02ce 02ce d d311
02d0 02ce u 02 01
02ce 02ce s     out (IO_SIO0B_D),A
02d0 02d0 d cdb803
02d3 02d0 u 03 01
02d0 02d0 s     call TX_EMP
02d3 02d3 s 
02d3 02d3 d 04
02d4 02d3 u 01 01
02d3 02d3 s     INC B
02d4 02d4 d 23
02d5 02d4 u 01 01
02d4 02d4 s     INC HL
02d5 02d5 s     ; Check If 16 columns
02d5 02d5 d 78
02d6 02d5 u 01 01
02d5 02d5 s     LD A,B
02d6 02d6 d e610
02d8 02d6 u 02 01
02d6 02d6 s     AND 0x10
02d8 02d8 d cac802
02db 02d8 u 03 01
02d8 02d8 s     JP Z, PRINT_HEXDUMP_LOOP1; IF less than 8
02db 02db s 
02db 02db d 0c
02dc 02db u 01 01
02db 02db s     INC C
02dc 02dc d 79
02dd 02dc u 01 01
02dc 02dc s     LD A,C
02dd 02dd d e610
02df 02dd u 02 01
02dd 02dd s     AND 0x10
02df 02df s 
02df 02df d ca9b02
02e2 02df u 03 01
02df 02df s     JP Z, PRINT_HEXDUMP_SOL; IF less than 8
02e2 02e2 s 
02e2 02e2 d 3e0d
02e4 02e2 u 02 01
02e2 02e2 s     LD A,13
02e4 02e4 d d311
02e6 02e4 u 02 01
02e4 02e4 s     out (IO_SIO0B_D),A
02e6 02e6 d cdb803
02e9 02e6 u 03 01
02e6 02e6 s     call TX_EMP
02e9 02e9 d 3e0a
02eb 02e9 u 02 01
02e9 02e9 s     LD A,10
02eb 02eb d d311
02ed 02eb u 02 01
02eb 02eb s     out (IO_SIO0B_D),A
02ed 02ed d cdb803
02f0 02ed u 03 01
02ed 02ed s     call TX_EMP
02f0 02f0 s 
02f0 02f0 d e1
02f1 02f0 u 01 01
02f0 02f0 s     POP HL
02f1 02f1 d c1
02f2 02f1 u 01 01
02f1 02f1 s     POP BC
02f2 02f2 d f1
02f3 02f2 u 01 01
02f2 02f2 s     POP AF
02f3 02f3 d c9
02f4 02f3 u 01 01
02f3 02f3 s     RET
02f4 02f4 s 
02f4 02f4 s 
02f4 02f4 s ; HL = String to compare
02f4 02f4 s ; DE = String Pattern
02f4 02f4 s CMP_STRING_START:
02f4 02f4 d 1a
02f5 02f4 u 01 01
02f4 02f4 s     LD A,(DE)
02f5 02f5 d a7
02f6 02f5 u 01 01
02f5 02f5 s     AND A
02f6 02f6 d c8
02f7 02f6 u 01 01
02f6 02f6 s     RET Z; RETURN Z=1 if reached END wizhout mismatch
02f7 02f7 d be
02f8 02f7 u 01 01
02f7 02f7 s     CP (HL)
02f8 02f8 d c0
02f9 02f8 u 01 01
02f8 02f8 s     RET NZ; If not Match (z=0) exit
02f9 02f9 s CMP_STRING_START_MATCHED:
02f9 02f9 d 7e
02fa 02f9 u 01 01
02f9 02f9 s     LD A,(HL)
02fa 02fa d a7
02fb 02fa u 01 01
02fa 02fa s     AND A; String to compare reached end
02fb 02fb d c8
02fc 02fb u 01 01
02fb 02fb s     RET Z
02fc 02fc s CMP_STRING_START_CONTINUE:
02fc 02fc d 23
02fd 02fc u 01 01
02fc 02fc s     INC HL
02fd 02fd d 13
02fe 02fd u 01 01
02fd 02fd s     INC DE
02fe 02fe d c3f402
0301 02fe u 03 01
02fe 02fe s     JP CMP_STRING_START
0301 0301 s     
0301 0301 s ; REG A Contains CHAR-Low
0301 0301 s ; If failed, Carry is set
0301 0301 s HEX_TO_BIN:
0301 0301 d d630
0303 0301 u 02 01
0301 0301 s     SUB 48 ; 0 is 0
0303 0303 d ea1603
0306 0303 u 03 01
0303 0303 s     JP PE, HEX_TO_INVALID_2; to low (SUB overflow)
0306 0306 d fe0a
0308 0306 u 02 01
0306 0306 s     CP 10 ; Value is between 0 and 9
0308 0308 d 3805
030a 0308 u 02 01
0308 0308 s     JR C, HEX_TO_BIN_2
030a 030a d d607
030c 030a u 02 01
030a 030a s     SUB 7
030c 030c d ea1603
030f 030c u 03 01
030c 030c s     JP PE, HEX_TO_INVALID_2; to low (SUB overflow)
030f 030f s HEX_TO_BIN_2:
030f 030f d fe10
0311 030f u 02 01
030f 030f s     CP 16
0311 0311 d 3003
0313 0311 u 02 01
0311 0311 s     JR NC, HEX_TO_INVALID_2; if bigger than 15-> fail
0313 0313 d e60f
0315 0313 u 02 01
0313 0313 s     AND 0x0F
0315 0315 d c9
0316 0315 u 01 01
0315 0315 s     RET
0316 0316 s HEX_TO_INVALID_2:
0316 0316 d 3e01
0318 0316 u 02 01
0316 0316 s     LD A,1
0318 0318 d c6ff
031a 0318 u 02 01
0318 0318 s     ADD 255
031a 031a d c9
031b 031a u 01 01
031a 031a s     RET
031b 031b s 
031b 031b s ; BC Contains Address to string
031b 031b s ; E is 0xFF if error
031b 031b s ; E is 0x00 if okay
031b 031b s DHEX_TO_BYTE:
031b 031b d c5
031c 031b u 01 01
031b 031b s     PUSH BC
031c 031c s     ; Load First Byte
031c 031c d 0a
031d 031c u 01 01
031c 031c s     LD A,(BC)
031d 031d d cd0103
0320 031d u 03 01
031d 031d s     CALL HEX_TO_BIN
0320 0320 s     ;JP C,DHEX_TO_BYTE_FAILED
0320 0320 d cb27
0322 0320 u 02 01
0320 0320 s     SLA A
0322 0322 d cb27
0324 0322 u 02 01
0322 0322 s     SLA A
0324 0324 d cb27
0326 0324 u 02 01
0324 0324 s     SLA A
0326 0326 d cb27
0328 0326 u 02 01
0326 0326 s     SLA A
0328 0328 d 57
0329 0328 u 01 01
0328 0328 s     LD D,A
0329 0329 s 
0329 0329 d 03
032a 0329 u 01 01
0329 0329 s     INC BC
032a 032a d 0a
032b 032a u 01 01
032a 032a s     LD A,(BC)
032b 032b d cd0103
032e 032b u 03 01
032b 032b s     CALL HEX_TO_BIN
032e 032e s     ;JP C,DHEX_TO_BYTE_FAILED
032e 032e d b2
032f 032e u 01 01
032e 032e s     OR D ; Merge
032f 032f s     
032f 032f d c1
0330 032f u 01 01
032f 032f s     POP BC
0330 0330 d 1e00
0332 0330 u 02 01
0330 0330 s     LD E,0x00
0332 0332 d c9
0333 0332 u 01 01
0332 0332 s     RET
0333 0333 s DHEX_TO_BYTE_FAILED:
0333 0333 d 1eff
0335 0333 u 02 01
0333 0333 s     LD E,0xFF
0335 0335 s     ;LD A,0x00
0335 0335 d c1
0336 0335 u 01 01
0335 0335 s     POP BC
0336 0336 d c9
0337 0336 u 01 01
0336 0336 s     RET
0337 0337 s 
0337 0337 s ;Strings
0337 0337 s MSG_CLEAR:
0337 0337 f main.asm
0337 0337 d 1b5b324a1b5b4800
033f 0337 u 08 02
0337 0337 s     db 27, '[2J', 27, '[H',0
0010 a init
0153 a DELAY
03b8 a TX_EMP
0020 v IO_REG0
0755 a INT_VEC
051d a CMD_EXEC
04d8 a CMD_HELP
05af a CMD_MGET
0003 a init_led
058b a CMD_MSET
0418 a A_RTS_ON
0000 v IO_CTC0_C0
0001 v IO_CTC0_C1
0002 v IO_CTC0_C2
0003 v IO_CTC0_C3
0502 a CMD_CLEAR
052f a CMD_IOGET
0337 a MSG_CLEAR
049a a PARSE_CMD
040f a A_RTS_OFF
055f a CMD_IOSET
0012 v IO_SIO0A_C
0010 v IO_SIO0A_D
0013 v IO_SIO0B_C
0011 v IO_SIO0B_D
0000 v START_ROM
0301 a HEX_TO_BIN
015d a DELAY_LOOP
0041 v IO_AY0_DATA
0040 v IO_AY0_ADDR
0042 v IO_AY1_ADDR
0043 v IO_AY1_DATA
0020 v IO_RTC_SEC0
0021 v IO_RTC_SEC1
0026 v IO_RTC_DAY0
0027 v IO_RTC_DAY1
0022 v IO_RTC_MIN0
0023 v IO_RTC_MIN1
0028 v IO_RTC_MON0
0029 v IO_RTC_MON1
06cd a MSG_CMD_VER
0025 v IO_RTC_AMPM
002c v IO_RTC_WEEK
0509 a CMD_HEXDUMP
0244 a PRINT_A_HEX
04ed a CMD_VERSION
0024 v IO_RTC_HOUR
030f a HEX_TO_BIN_2
05e5 a MSG_SYS_VER
002b v IO_RTC_YEAR1
002a v IO_RTC_YERR0
065f a MSG_CMD_HELP
002d v IO_RTC_CTR_D
002e v IO_RTC_CTR_E
002f v IO_RTC_CTR_F
0437 a MOD_COMMANDS
0437 a ARR_COMMANDS
031b a DHEX_TO_BYTE
03c7 a CONSOLE_INIT
0104 a init_console
047f a STR_NOTFOUND
0407 a AY0_WRITE_REG
e000 v CMD_CRS_SPEED
4001 v MEM_LAST_CHAR
0290 a PRINT_HEXDUMP
4000 v PROG_MEM_START
0100 v PROG_ROM_START
0165 a CONSOLE_PROMPT
049d a PARSE_CMD_START
03bb a CONSOLE_TX_WAIT
4003 v MEM_PROMPT_SIZE
0316 a HEX_TO_INVALID_2
0421 a RX_CHA_AVAILABLE
0010 v VAR_CONSOLE_BAUD
0150 a SPEC_RX_CONDITON
4000 v MEM_CURSOR_STATE
02f4 a CMP_STRING_START
4005 v MEM_PROMPT_START
039a a CONSOLE_PRINTSTR
03ad a CONSOLE_READ_CHAR
029b a PRINT_HEXDUMP_SOL
04c4 a PARSE_CMD_NO_MATCH
0258 a MSG_HEXDUMP_HEADER
0333 a DHEX_TO_BYTE_FAILED
02c8 a PRINT_HEXDUMP_LOOP1
0199 a CONSOLE_PROMPT_LOOP
04c1 a PARSE_CMD_START_EXEC
0380 a STRCONV_BYTES_TO_HEX
01ae a CONSOLE_PROMPT_LOOP_1
0209 a CONSOLE_PROMPT_LOOP_2
022c a CONSOLE_PROMPT_LOOP_3
04bd a PARSE_CMD_START_FOUND
039c a CONSOLE_PRINTSTR_LOOP
03aa a CONSOLE_PRINTSTR_EXIT
01da a CONSOLE_PROMPT_LOOP_1B
038f a STRCONV_BYTES_TO_HEX_1
0399 a STRCONV_BYTES_TO_HEX_2
02f9 a CMP_STRING_START_MATCHED
04b4 a PARSE_CMD_START_NOT_FOUND
02fc a CMP_STRING_START_CONTINUE
04cb a PARSE_CMD_CMP_STRING_START
04d0 a PARSE_CMD_CMP_STRING_START_MATCHED
04d3 a PARSE_CMD_CMP_STRING_START_CONTINUE
