   1:     -	4000          	SYS_RAM_START   equ 0x4000
   2:     -	4010          	SYS_BUF_START   equ 0x4010
   3:     -	4110          	PRG_RAM_START   equ 0x4110
   4:     -	FF00          	PRG_RAM_TOP     equ 0xFF00
   5:     -	FFFF          	STACK_RAM_TOP   equ 0xFFFF
   6:				
   7:				;VAR_CONSOLE_CONF    equ 0x07  ;CLK/TRG Clock @ 1843220.5/s
   8:     -	000F          	VAR_CONSOLE_CONF    equ 0x0F  ;CPU/16  Clock @ 230402.5625/s
   9:				
  10:     -	0018          	VAR_CONSOLE_BAUD    equ 24  ;BAUD timer constant
  11:				                            ;CLK/TRG Clock @ 1843220.5/s
  12:				                            ; -> 0x16 : 14400
  13:				                            ;CPU/16  Clock @ 230402.5625/s
  14:				                            ; -> 12 : 19200
  15:				                            ; -> 24 : 9600
  16:				
  17:				; include IO device addresses
  18:				.include "addresses.s"
**** include/addresses.s ****
   1:     -	0000          	IO_CTC0_C0  equ 0x00
   2:     -	0001          	IO_CTC0_C1  equ 0x01
   3:     -	0002          	IO_CTC0_C2  equ 0x02
   4:     -	0003          	IO_CTC0_C3  equ 0x03
   5:				
   6:     -	0012          	IO_SIO0A_C  equ 00010010b
   7:     -	0010          	IO_SIO0A_D  equ 00010000b
   8:     -	0013          	IO_SIO0B_C  equ 00010011b
   9:     -	0011          	IO_SIO0B_D  equ 00010001b
  10:				
  11:     -	0020          	IO_RTC_SEC0  equ 00100000b
  12:     -	0021          	IO_RTC_SEC1  equ 00100001b
  13:     -	0022          	IO_RTC_MIN0  equ 00100010b
  14:     -	0023          	IO_RTC_MIN1  equ 00100011b
  15:     -	0024          	IO_RTC_HOUR  equ 00100100b
  16:     -	0025          	IO_RTC_AMPM  equ 00100101b
  17:     -	0026          	IO_RTC_DAY0  equ 00100110b
  18:     -	0027          	IO_RTC_DAY1  equ 00100111b
  19:     -	0028          	IO_RTC_MON0  equ 00101000b
  20:     -	0029          	IO_RTC_MON1  equ 00101001b
  21:     -	002A          	IO_RTC_YERR0 equ 00101010b
  22:     -	002B          	IO_RTC_YEAR1 equ 00101011b
  23:     -	002C          	IO_RTC_WEEK  equ 00101100b
  24:     -	002D          	IO_RTC_CTR_D equ 00101101b
  25:     -	002E          	IO_RTC_CTR_E equ 00101110b
  26:     -	002F          	IO_RTC_CTR_F equ 00101111b
  27:				
  28:     -	0040          	IO_AY0_ADDR equ 01000000b
  29:     -	0041          	IO_AY0_DATA equ 01000001b
  30:     -	0042          	IO_AY1_ADDR equ 01000010b
  31:     -	0043          	IO_AY1_DATA equ 01000011b
  32:				
  33:     -	0000          	START_ROM   equ 0x0000
  34:     -	0020          	IO_REG0     equ 0x20
  35:				
  36:     -	0081          	VDP_REG     equ 0x81
  37:     -	0080          	VDP_MEM     equ 0x80
  38:				
  39:     -	0100          	PROG_ROM_START equ 0x0100
  40:     -	4000          	PROG_MEM_START equ 04000h
  41:				
  42:     -	0060          	IO_PIO_0_A_D equ 0x60
  43:     -	0061          	IO_PIO_0_A_C equ 0x61
  44:     -	0062          	IO_PIO_0_B_D equ 0x62
  45:     -	0063          	IO_PIO_0_B_C equ 0x63
  46:				
  47:     -	0064          	IO_PIO_1_A_D equ 0x64   ;PS2
  48:     -	0065          	IO_PIO_1_A_C equ 0x65
  49:     -	0066          	IO_PIO_1_B_D equ 0x66
  50:     -	0067          	IO_PIO_1_B_C equ 0x67
  51:				
**** main.asm ****
  19:				
  20:     -	0000          	    org 0x0000
  21:     -	0000          	main:
  22:    0+10	0000  C31800  	    jp mon_start_init_sound    
  23:				
  24:				;memory var template
  25:     -	0003          	mon_var_template:
  26:     -	4000          	    phase SYS_RAM_START
  27:				
  28:     -	4000          	var_buffer_len:
  29:     -	4000  00      	    defb 0
  30:     -	4001          	var_last_char:
  31:     -	4001  00      	    defb 0
  32:     -	4002          	var_curserx:
  33:     -	4002  00      	    defb 0
  34:     -	4003          	var_cursery:
  35:     -	4003  00      	    defb 0
  36:     -	4004          	var_scratch:
  37:     -	4004 ..4013 00	    defs 16 ;16 bytes space for scratch vars
  38:     -	4014          	var_buffer:
  39:     -	4014  00      	    defb 0  ;var lentgh 
  40:				
  41:				
  42:     -	4015          	mon_var_template_end:
  43:     -	0018          	    dephase
  44:				;end memory var template
  45:				
  46:     -	0018          	mon_start_init_sound:
  47:   10+7	0018  1608    	    ld	  D,0x08	; Select register #8
  48:   17+7	001A  3E00    	    ld	  A,0x00	; Volume channel A 0
  49:   24+17	001C  CD8100  	    call AY0_WRITE_REG
  50:   41+7	001F  1609    	    ld	  D,0x09	; Select register #9
  51:   48+7	0021  3E00    	    ld	  A,0x00	; Volume channel B 0
  52:   55+17	0023  CD8100  	    call AY0_WRITE_REG
  53:   72+7	0026  160A    	    ld	  D,0x0A	; Select register #10
  54:   79+7	0028  3E00    	    ld	  A,0x00	; Volume channel C 0
  55:   86+17	002A  CD8100  	    call AY0_WRITE_REG
  56:     -	002D          	mon_start_init_serial:
  57:  103+7	002D  3E0F    	    ld A,VAR_CONSOLE_CONF   ; Setup CTC
  58:  110+11	002F  D301    	    out (IO_CTC0_C1),A      ; Controll word, software reset, time constant follows, CLK/TRG starts timer
  59:  121+7	0031  3E18    	    ld A,VAR_CONSOLE_BAUD   ; Setup timer const
  60:  128+11	0033  D301    	    out (IO_CTC0_C1),A      ; Load timer const into CTC (Setup Baud generator)
  61:				    ;set up TX and RX:W
  62:  139+7	0035  3E30    	    ld a,00110000b      ;write into WR0: error reset, select WR0
  63:  146+11	0037  D313    	    out (IO_SIO0B_C),A
  64:  157+7	0039  3E18    	    ld a,018h           ;write into WR0: channel reset
  65:  164+11	003B  D313    	    out (IO_SIO0B_C),A
  66:  175+7	003D  3E04    	    ld a,004h           ;write into WR0: select WR4
  67:  182+11	003F  D313    	    out (IO_SIO0B_C),A
  68:  193+7	0041  3E04    	    ld a,04h            ;44h write into WR4: clkx1,1 stop bit, no parity
  69:  200+11	0043  D313    	    out (IO_SIO0B_C),A
  70:  211+7	0045  3E05    	    ld a,005h           ;write into WR0: select WR5
  71:  218+11	0047  D313    	    out (IO_SIO0B_C),A
  72:  229+7	0049  3E68    	    ld a,068h           ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
  73:  236+11	004B  D313    	    out (IO_SIO0B_C),A
  74:  247+7	004D  3E01    	    ld a,01h            ;write into WR0: select WR1
  75:  254+11	004F  D313    	    out (IO_SIO0B_C),A
  76:  265+7	0051  3E04    	    ld a,00000100b      ;no interrupt in CH B, special RX condition affects vect
  77:  272+11	0053  D313    	    out (IO_SIO0B_C),A
  78:				    ;enable SIO channel A RX
  79:  283+7	0055  3E03    	    ld a,003h ;write into WR0: select WR3
  80:  290+11	0057  D313    	    out (IO_SIO0B_C),A
  81:  301+7	0059  3EC1    	    ld a,0C1h ;RX 8bit, auto enable off, RX on
  82:  308+11	005B  D313    	    out (IO_SIO0B_C),A
  83:				    ;Channel A RX active
  84:     -	005D          	mon_start_ram:
  85:  319+10	005D  210300  	    ld hl,mon_var_template
  86:  329+10	0060  111540  	    ld de,mon_var_template_end
  87:  339+10	0063  010040  	    ld bc,SYS_RAM_START
  88:     -	0066          	mon_start_ram_loop:
  89:  349+7	0066  7E      	    ld a,(hl)  ;copy values
  90:  356+7	0067  02      	    ld (bc),a
  91:  363+6	0068  23      	    inc hl      
  92:  369+6	0069  03      	    inc bc
  93:  375+11	006A  E5      	    push hl    ;check if end is reached
  94:  386+15	006B  ED52    	    sbc hl,de
  95:  401+10	006D  E1      	    pop hl
  96:  411+10	006E  C26600  	    jp nz, mon_start_ram_loop
  97:				    ;template copy done
  98:				
  99:     -	0071          	mon_start_complete:
 100:  421+17	0071  CDF602  	    call vdpconsole_init
 101:				    ;call print_clear
 102:  438+10	0074  213C0F  	    ld hl, [STR_Banner_Start]
 103:  448+17	0077  CD2402  	    call print_str
 104:				
 105:				
 106:				    ;jp splash_run
 107:  465+10	007A  C32B0D  	    jp ps2demo_run
 108:				    ;call debug_init
 109:  475+17	007D  CD8900  	    call PROMPT_BEGIN
 110:				    ;halt CPU if prompt exits
 111:  492+4	0080  76      	    halt
 112:				    
 113:				; Misc Functions
 114:     -	0081          	AY0_WRITE_REG:
 115:  496+4	0081  47      	    LD B,A
 116:  500+4	0082  7A      	    LD A,D
 117:  504+11	0083  D340    	    OUT (IO_AY0_ADDR),A
 118:  515+4	0085  78      	    LD A,B
 119:  519+11	0086  D341    	    OUT (IO_AY0_DATA),A
 120:  530+10	0088  C9      	    RET
 121:				
 122:     -	0089          	PROMPT_BEGIN:
 123:  540+17	0089  CD3002  	    call print_newLine
 124:  557+17	008C  CD9C02  	    call A_RTS_ON
 125:  574+7	008F  3E3E    	    ld a,'>'
 126:  581+17	0091  CD2002  	    call print_char
 127:  598+4	0094  AF      	    xor a  ;reset buffer len
 128:  602+13	0095  320040  	    ld (var_buffer_len),a
 129:				
 130:     -	0098          	PROMPT_BEGIN_READ_LOOP:
 131:  615+17	0098  CD6102  	    call read_char
 132:  632+10	009B  CA9800  	    jp z, PROMPT_BEGIN_READ_LOOP    ; wait until char avail
 133:				    
 134:				    ; process special ops
 135:  642+7	009E  FE0D    	    cp 13   ; enter
 136:  649+10	00A0  CADC00  	    jp z,PROMPT_BEGIN_READ_PROCESS
 137:  659+7	00A3  FE08    	    cp 0x08 ; backspace 0x08 VT102 0x7f Putty
 138:  666+10	00A5  CAC200  	    jp z,PROMPT_BEGIN_READ_BACKSPACE
 139:				
 140:  676+11	00A8  F5      	    push af
 141:				    ; a contains latest char
 142:  687+10	00A9  211440  	    ld hl,[var_buffer]
 143:  697+7	00AC  1600    	    ld d,0
 144:  704+13	00AE  3A0040  	    ld a,(var_buffer_len)
 145:  717+4	00B1  5F      	    ld e,a
 146:  721+11	00B2  19      	    add hl,de   ;hl now contains pointer to last position in buffer
 147:  732+4	00B3  3C      	    inc a
 148:  736+13	00B4  320040  	    ld (var_buffer_len),a ;store incremented buffer length
 149:				
 150:  749+10	00B7  F1      	    pop af
 151:  759+7	00B8  77      	    ld (hl),a
 152:  766+17	00B9  CD2002  	    call print_char
 153:  783+6	00BC  23      	    inc hl
 154:  789+4	00BD  AF      	    xor a       ;a = 0
 155:  793+7	00BE  77      	    ld (hl),a   ;always add null termination after last char
 156:  800+10	00BF  C39800  	    jp PROMPT_BEGIN_READ_LOOP
 157:				
 158:     -	00C2          	PROMPT_BEGIN_READ_BACKSPACE:
 159:  810+13	00C2  3A0040  	    ld a,(var_buffer_len)
 160:  823+4	00C5  A7      	    and a
 161:  827+10	00C6  CA9800  	    jp z, PROMPT_BEGIN_READ_LOOP    ; do not continue if already at char 0
 162:  837+4	00C9  3D      	    dec a       ;decrement length
 163:  841+13	00CA  320040  	    ld (var_buffer_len),a   ;and store it
 164:  854+4	00CD  5F      	    ld e,a      ;load de with decremented value
 165:  858+7	00CE  1600    	    ld d,0
 166:  865+10	00D0  211440  	    ld hl,[var_buffer]
 167:  875+11	00D3  19      	    add hl,de   ;hl now contains pointer to last position in buffer
 168:  886+4	00D4  AF      	    xor a       ; store null byte to current location
 169:  890+7	00D5  77      	    ld (hl),a
 170:  897+17	00D6  CD6C02  	    call print_delete
 171:				    ;ld a, 0x08
 172:				    ;call print_char
 173:				    ;ld a, 0x20
 174:				    ;call print_char
 175:				    ;ld a, 0x08
 176:				    ;call print_char
 177:  914+10	00D9  C39800  	    jp PROMPT_BEGIN_READ_LOOP
 178:				
 179:     -	00DC          	PROMPT_BEGIN_READ_PROCESS:
 180:				    ;call print_newLine
 181:				    ;ld hl,var_buffer
 182:				    ;call print_str
 183:				
 184:  924+13	00DC  3A1440  	    ld a,([var_buffer])
 185:  937+7	00DF  FE24    	    cp '$'              ;jump to addr
 186:  944+10	00E1  CA0A01  	    jp z, CMD_EXEC
 187:  954+7	00E4  FE3F    	    cp '?'              ;print hexdump
 188:  961+10	00E6  CA2901  	    jp z, CMD_VIEW
 189:  971+7	00E9  FE21    	    cp '!'              ;set memory
 190:  978+10	00EB  CA9301  	    jp z, CMD_SET
 191:  988+7	00EE  FE69    	    cp 'i'              ;in IO
 192:  995+10	00F0  CAF801  	    jp z, CMD_IO_READ
 193: 1005+7	00F3  FE6F    	    cp 'o'              ;out IO
 194: 1012+10	00F5  CACF01  	    jp z, CMD_IO_WRITE
 195: 1022+7	00F8  FE78    	    cp 'x'              ;start xmodem
 196: 1029+10	00FA  CA880F  	    jp z, xmodem_init
 197:				
 198:				
 199: 1039+17	00FD  CD3002  	    call print_newLine
 200: 1056+10	0100  21670F  	    ld hl, [STR_Unknown]
 201: 1066+17	0103  CD2402  	    call print_str
 202: 1083+10	0106  C38900  	    jp PROMPT_BEGIN
 203:				
 204: 1093+10	0109  C9      	    ret
 205:				
 206:     -	010A          	CMD_EXEC:
 207: 1103+4	010A  AF      	    xor a                   ;write null byte to buffer pos 0 to prevent reexecute the last command
 208: 1107+13	010B  321440  	    ld (var_buffer),a
 209:				
 210: 1120+10	010E  211540  	    ld hl,var_buffer+1      ;load 1st byte
 211: 1130+17	0111  CDA502  	    call DHEX_TO_BYTE       
 212: 1147+4	0114  47      	    ld b,a                  ;store result in b
 213: 1151+4	0115  7B      	    ld a,e                  ;check for error
 214: 1155+4	0116  A7      	    and a
 215: 1159+10	0117  C21402  	    jp nz, CMD_SYNTAX_ERROR
 216:				
 217: 1169+10	011A  211740  	    ld hl,var_buffer+3      ;load 2nd byte
 218: 1179+17	011D  CDA502  	    call DHEX_TO_BYTE
 219: 1196+4	0120  4F      	    ld c,a
 220: 1200+4	0121  7B      	    ld a,e  ;check for error
 221: 1204+4	0122  A7      	    and a
 222: 1208+10	0123  C21402  	    jp nz, CMD_SYNTAX_ERROR
 223:				
 224: 1218+4	0126  60      	    ld h,b
 225: 1222+4	0127  69      	    ld l,c
 226: 1226+4	0128  E9      	    jp (hl)
 227:				
 228:     -	0129          	CMD_VIEW:
 229: 1230+17	0129  CD3002  	    call print_newLine
 230: 1247+10	012C  211540  	    ld hl,var_buffer+1      ;load 1st byte
 231: 1257+17	012F  CDA502  	    call DHEX_TO_BYTE       
 232: 1274+4	0132  47      	    ld b,a                  ;store result in b
 233: 1278+4	0133  7B      	    ld a,e                  ;check for error
 234: 1282+4	0134  A7      	    and a
 235: 1286+10	0135  C21402  	    jp nz, CMD_SYNTAX_ERROR
 236:				
 237: 1296+10	0138  211740  	    ld hl,var_buffer+3      ;load 2nd byte
 238: 1306+17	013B  CDA502  	    call DHEX_TO_BYTE
 239: 1323+4	013E  4F      	    ld c,a
 240: 1327+4	013F  7B      	    ld a,e  ;check for error
 241: 1331+4	0140  A7      	    and a
 242: 1335+10	0141  C21402  	    jp nz, CMD_SYNTAX_ERROR  
 243:				
 244:				
 245: 1345+13	0144  3A1940  	    ld a,(var_buffer+5)
 246: 1358+7	0147  FE20    	    cp ' '
 247: 1365+10	0149  C21402  	    jp nz, CMD_SYNTAX_ERROR
 248:				
 249: 1375+10	014C  211A40  	    ld hl,var_buffer+6      ;load length
 250: 1385+17	014F  CDA502  	    call DHEX_TO_BYTE
 251: 1402+11	0152  F5      	    push af
 252: 1413+4	0153  7B      	    ld a,e  ;check for error
 253: 1417+4	0154  A7      	    and a
 254: 1421+10	0155  C21402  	    jp nz, CMD_SYNTAX_ERROR  
 255:				    
 256:				    ;draw header
 257: 1431+10	0158  216C0F  	    ld hl,[STR_HEXDUMP_HEADER]
 258: 1441+17	015B  CD2402  	    call print_str
 259:				
 260: 1458+10	015E  F1      	    pop af
 261:				    ;loading vars done. display results
 262: 1468+4	015F  60      	    ld h, b ;pointer to current byte
 263: 1472+4	0160  69      	    ld l, c ;pointer to current byte
 264: 1476+4	0161  47      	    ld b, a                 ;bytes counter
 265:				
 266:				    ;draw row
 267:     -	0162          	CMD_VIEW_ROW:
 268: 1480+17	0162  CD3002  	    call print_newLine
 269: 1497+4	0165  7C      	    ld a,h              ;print start
 270: 1501+17	0166  CD5002  	    call print_a_hex
 271: 1518+4	0169  7D      	    ld a,l
 272: 1522+17	016A  CD5002  	    call print_a_hex
 273: 1539+7	016D  3E20    	    ld a, ' '
 274: 1546+17	016F  CD2002  	    call print_char
 275: 1563+7	0172  0E08    	    ld c, 8                 ;column counter
 276:     -	0174          	CMD_VIEW_ROW_LOOP:
 277: 1570+7	0174  7E      	    ld a,(hl)
 278: 1577+17	0175  CD5002  	    call print_a_hex
 279:				    
 280: 1594+6	0178  23      	    inc hl  ;increment pointer
 281: 1600+4	0179  05      	    dec b   ;decrement byte counter
 282: 1604+4	017A  0D      	    dec c   ;decrement column counter
 283:				
 284: 1608+4	017B  78      	    ld a,b
 285: 1612+4	017C  A7      	    and a
 286: 1616+10	017D  CA8D01  	    jp z,CMD_VIEW_END   ;if byte counter = 0 -> end reached
 287:				
 288: 1626+4	0180  79      	    ld a,c
 289: 1630+4	0181  A7      	    and a
 290: 1634+10	0182  CA6201  	    jp z,CMD_VIEW_ROW   ;else if column counter = 0 -> 16 chars printed. next row
 291:				
 292: 1644+7	0185  3E20    	    ld a, ' '
 293: 1651+17	0187  CD2002  	    call print_char
 294: 1668+10	018A  C37401  	    jp CMD_VIEW_ROW_LOOP    ;else
 295:     -	018D          	CMD_VIEW_END:
 296: 1678+17	018D  CD3002  	    call print_newLine
 297: 1695+10	0190  C38900  	    jp PROMPT_BEGIN
 298:				
 299:     -	0193          	CMD_SET:
 300: 1705+10	0193  211540  	    ld hl,var_buffer+1      ;load 1st byte
 301: 1715+17	0196  CDA502  	    call DHEX_TO_BYTE       
 302: 1732+4	0199  47      	    ld b,a                  ;store result in b
 303: 1736+4	019A  7B      	    ld a,e                  ;check for error
 304: 1740+4	019B  A7      	    and a
 305: 1744+10	019C  C21402  	    jp nz, CMD_SYNTAX_ERROR
 306:				
 307: 1754+10	019F  211740  	    ld hl,var_buffer+3      ;load 2nd byte
 308: 1764+17	01A2  CDA502  	    call DHEX_TO_BYTE
 309: 1781+4	01A5  4F      	    ld c,a
 310: 1785+4	01A6  7B      	    ld a,e  ;check for error
 311: 1789+4	01A7  A7      	    and a
 312: 1793+10	01A8  C21402  	    jp nz, CMD_SYNTAX_ERROR    
 313:				    ;bc now contains the start address
 314:				
 315: 1803+10	01AB  211940  	    ld hl,var_buffer+5
 316:     -	01AE          	CMD_SET_LOOP:
 317: 1813+7	01AE  7E      	    ld a,(hl)
 318: 1820+7	01AF  FE00    	    cp 0    ;if 0 then end
 319: 1827+10	01B1  CAC901  	    jp z, CMD_SET_END
 320: 1837+7	01B4  FE20    	    cp ' '
 321: 1844+10	01B6  C21402  	    jp nz, CMD_SYNTAX_ERROR
 322: 1854+6	01B9  23      	    inc hl  ;next byte
 323: 1860+17	01BA  CDA502  	    call DHEX_TO_BYTE
 324: 1877+7	01BD  02      	    ld (bc),a   ;load byte to 
 325: 1884+4	01BE  7B      	    ld a,e
 326: 1888+4	01BF  A7      	    and a
 327: 1892+10	01C0  C21402  	    jp nz, CMD_SYNTAX_ERROR    
 328: 1902+6	01C3  03      	    inc bc
 329: 1908+6	01C4  23      	    inc hl
 330: 1914+6	01C5  23      	    inc hl
 331: 1920+10	01C6  C3AE01  	    jp CMD_SET_LOOP
 332:     -	01C9          	CMD_SET_END:
 333: 1930+17	01C9  CD3002  	    call print_newLine
 334: 1947+10	01CC  C38900  	    jp PROMPT_BEGIN
 335:				
 336:				
 337:     -	01CF          	CMD_IO_WRITE:
 338: 1957+10	01CF  211540  	    ld hl,var_buffer+1      ;load 1st byte
 339: 1967+17	01D2  CDA502  	    call DHEX_TO_BYTE       
 340: 1984+4	01D5  4F      	    ld c,a                  ;store result in b
 341: 1988+4	01D6  7B      	    ld a,e                  ;check for error
 342: 1992+4	01D7  A7      	    and a
 343: 1996+10	01D8  C21402  	    jp nz, CMD_SYNTAX_ERROR
 344:				
 345: 2006+13	01DB  3A1740  	    ld a,(var_buffer+3)
 346: 2019+7	01DE  FE20    	    cp ' '
 347: 2026+10	01E0  C21402  	    jp nz, CMD_SYNTAX_ERROR
 348:				
 349: 2036+10	01E3  211840  	    ld hl,var_buffer+4      ;load 1st byte
 350: 2046+17	01E6  CDA502  	    call DHEX_TO_BYTE       
 351: 2063+11	01E9  F5      	    push af
 352: 2074+4	01EA  7B      	    ld a,e                  ;check for error
 353: 2078+4	01EB  A7      	    and a
 354: 2082+10	01EC  C21402  	    jp nz, CMD_SYNTAX_ERROR
 355:				
 356: 2092+10	01EF  F1      	    pop af
 357: 2102+12	01F0  ED79    	    out (c),a    
 358: 2114+17	01F2  CD3002  	    call print_newLine
 359: 2131+10	01F5  C38900  	    jp PROMPT_BEGIN
 360:				
 361:     -	01F8          	CMD_IO_READ:
 362: 2141+10	01F8  211540  	    ld hl,var_buffer+1      ;load 1st byte
 363: 2151+17	01FB  CDA502  	    call DHEX_TO_BYTE       
 364: 2168+4	01FE  4F      	    ld c,a                  ;store result in b
 365: 2172+4	01FF  7B      	    ld a,e                  ;check for error
 366: 2176+4	0200  A7      	    and a
 367: 2180+10	0201  C21402  	    jp nz, CMD_SYNTAX_ERROR
 368:				
 369: 2190+12	0204  ED78    	    in a,(c)
 370: 2202+11	0206  F5      	    push af
 371: 2213+17	0207  CD3002  	    call print_newLine
 372: 2230+10	020A  F1      	    pop af
 373: 2240+17	020B  CD5002  	    call print_a_hex
 374: 2257+17	020E  CD3002  	    call print_newLine
 375: 2274+10	0211  C38900  	    jp PROMPT_BEGIN
 376:				
 377:     -	0214          	CMD_SYNTAX_ERROR:
 378: 2284+17	0214  CD3002  	    call print_newLine
 379: 2301+10	0217  21620F  	    ld hl, [STR_SyntaxError]
 380: 2311+17	021A  CD2402  	    call print_str
 381: 2328+10	021D  C38900  	    jp PROMPT_BEGIN
 382:				
 383:				
 384:				
 385:     -	0220          	Includes:
 386:				.include "vdpconsole.s"
**** include/vdpconsole.s ****
   1:				
   2:				
   3:				; A contains char
   4:				; Destroys A
   5:     -	0220          	print_char:
   6: 2338+17	0220  CDD80B  	    call vdp_char
   7: 2355+10	0223  C9      	    ret
   8:				; HL contains pointer to string
   9:				; Destroy A, HL
  10:				
  11:     -	0224          	print_str:
  12: 2365+7	0224  7E      	    ld a, (hl)
  13: 2372+4	0225  B7      	    or a
  14: 2376+7+5	0226  2806    	    jr z,print_str_end
  15: 2383+17	0228  CD2002  	    call print_char
  16: 2400+6	022B  23      	    inc hl
  17: 2406+12	022C  18F6    	    jr print_str
  18:     -	022E          	print_str_end:
  19: 2418+10	022E  C9      	    ret
  20:				
  21:     -	022F          	print_clear:
  22:				    ;NOT IMPLEMENTED
  23:				    ;ld hl, [MSG_CLEAR]
  24:				    ;call print_str
  25: 2428+10	022F  C9      	    ret
  26:				
  27:     -	0230          	print_newLine:
  28: 2438+4	0230  AF      	    xor a               
  29: 2442+13	0231  320240  	    ld (var_curserx),a
  30: 2455+13	0234  3A0340  	    ld a,(var_cursery)
  31: 2468+7	0237  FE17    	    cp 23
  32: 2475+10	0239  CA4402  	    jp z,print_newLine_scroll
  33: 2485+4	023C  3C      	    inc a
  34: 2489+13	023D  320340  	    ld (var_cursery),a    
  35: 2502+17	0240  CDA90B  	    call vdp_cursor_move
  36: 2519+10	0243  C9      	    ret
  37:     -	0244          	print_newLine_scroll:
  38: 2529+17	0244  CD170C  	    call vdp_scroll
  39: 2546+7	0247  3E17    	    ld a,23
  40: 2553+13	0249  320340  	    ld (var_cursery),a  
  41: 2566+17	024C  CDA90B  	    call vdp_cursor_move
  42:				
  43: 2583+10	024F  C9      	    ret
  44:     -	0250          	print_a_hex:
  45: 2593+11	0250  F5      	    push af
  46: 2604+11	0251  C5      	    push bc
  47: 2615+11	0252  D5      	    push de
  48: 2626+17	0253  CDDC02  	    call STRCONV_BYTES_TO_HEX
  49: 2643+4	0256  78      	    ld a,b
  50: 2647+17	0257  CD2002  	    call print_char
  51: 2664+4	025A  79      	    ld a,c
  52: 2668+17	025B  CD2002  	    call print_char
  53: 2685+10	025E  D1      	    pop de
  54: 2695+10	025F  C1      	    pop bc
  55: 2705+10	0260  F1      	    pop af
  56:				
  57:     -	0261          	read_char:
  58: 2715+4	0261  AF      	    xor a               ; a = 0
  59: 2719+11	0262  D313    	    out (IO_SIO0B_C), a ; select reg 0
  60: 2730+11	0264  DB13    	    in a, (IO_SIO0B_C)  ; read reg 0
  61: 2741+7	0266  E601    	    and	1               ; mask D0 (recieve char available)
  62: 2748+5+6	0268  C8      	    ret	Z               ; return 0 if no char
  63: 2753+11	0269  DB11    	    in a, (IO_SIO0B_D)  ; read char if avail
  64: 2764+10	026B  C9      	    ret                 ; return
  65:				
  66:     -	026C          	print_delete:
  67: 2774+13	026C  3A0240  	    ld a,(var_curserx) 
  68: 2787+7	026F  FE00    	    cp 0
  69: 2794+10	0271  DA8202  	    jp c,print_delete_end
  70: 2804+4	0274  3D      	    dec a
  71: 2808+13	0275  320240  	    ld (var_curserx),a
  72: 2821+17	0278  CDA90B  	    call vdp_cursor_move
  73: 2838+7	027B  3E20    	    ld a, ' '
  74: 2845+11	027D  D380    	    out (VDP_MEM),a
  75: 2856+17	027F  CDA90B  	    call vdp_cursor_move
  76:     -	0282          	print_delete_end:
  77: 2873+10	0282  C9      	    ret
  78:				
  79:     -	0283          	print_parity:
  80: 2883+7+5	0283  3807    	    jr c, print_parity_odd
  81: 2890+7	0285  3E45    	    ld a, "E"
  82: 2897+17	0287  CD2002  	    call print_char
  83: 2914+4	028A  B7      	    or a
  84: 2918+10	028B  C9      	    ret
  85:     -	028C          	print_parity_odd:
  86: 2928+7	028C  3E4F    	    ld a, "O"
  87: 2935+17	028E  CD2002  	    call print_char
  88: 2952+4	0291  37      	    scf
  89: 2956+10	0292  C9      	    ret
  90:				
  91:				; Serial Util Functions
  92:     -	0293          	A_RTS_OFF:
  93: 2966+7	0293  3E05    	    ld a,005h ;write into WR0: select WR5
  94: 2973+11	0295  D313    	    out (IO_SIO0B_C),A
  95: 2984+7	0297  3EE8    	    ld a,0E8h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
  96: 2991+11	0299  D313    	    out (IO_SIO0B_C),A
  97: 3002+10	029B  C9      	    ret
  98:     -	029C          	A_RTS_ON:
  99: 3012+7	029C  3E05    	    ld a,005h ;write into WR0: select WR5
 100: 3019+11	029E  D313    	    out (IO_SIO0B_C),A
 101: 3030+7	02A0  3EEA    	    ld a,0EAh ;DTR active, TX 8bit, BREAK off, TX on, RTS active
 102: 3037+11	02A2  D313    	    out (IO_SIO0B_C),A
**** main.asm ****
 387: 3048+10	02A4  C9      	    ret
 388:				.include "conversions.s"
**** include/conversions.s ****
   1:				; HL Contains Address to string
   2:				; E is 0xFF if error
   3:				; E is 0x00 if okay
   4:				; A returns byte
   5:				; A,DE are destroyed
   6:     -	02A5          	DHEX_TO_BYTE:
   7: 3058+11	02A5  E5      	    PUSH HL             ;Backup pointer
   8:				    ; Load First Byte
   9: 3069+7	02A6  7E      	    LD A,(HL)           ;Load first char (high)
  10: 3076+17	02A7  CDC502  	    CALL HEX_TO_BIN     ;Conv chart to 4bit
  11: 3093+7+5	02AA  3815    	    jr C, DHEX_TO_BYTE_FAILED   ;If error jmp to DHEX_TO_BYTE_FAILED
  12: 3100+8	02AC  CB27    	    SLA A               ;shift result to upper 4 bits
  13: 3108+8	02AE  CB27    	    SLA A
  14: 3116+8	02B0  CB27    	    SLA A
  15: 3124+8	02B2  CB27    	    SLA A
  16: 3132+4	02B4  57      	    LD D,A              ;store result in D
  17:				
  18: 3136+6	02B5  23      	    INC HL              ;next byte
  19: 3142+7	02B6  7E      	    LD A,(HL)           ;load 2nd char (lower)
  20: 3149+17	02B7  CDC502  	    CALL HEX_TO_BIN     ;Conv chart to 4bit
  21: 3166+7+5	02BA  3805    	    jr C, DHEX_TO_BYTE_FAILED   ;If error jmp to DHEX_TO_BYTE_FAILED
  22: 3173+4	02BC  B2      	    OR D                ;merge D with accumulator
  23:				
  24: 3177+10	02BD  E1      	    POP HL              ;restor original pointer
  25: 3187+7	02BE  1E00    	    LD E,0x00           ;set error to 0x00 = no error
  26: 3194+10	02C0  C9      	    RET
  27:     -	02C1          	DHEX_TO_BYTE_FAILED:
  28: 3204+7	02C1  1EFF    	    LD E,0xFF           ;set error to oxFF
  29:				    ;LD A,0x00
  30: 3211+10	02C3  E1      	    POP HL
  31: 3221+10	02C4  C9      	    RET
  32:				
  33:				; REG A Contains CHAR-Low
  34:				; If failed, Carry is set
  35:     -	02C5          	HEX_TO_BIN:
  36: 3231+7	02C5  D630    	    SUB 48 ; 0 is 0
  37: 3238+10	02C7  EADA02  	    jp PE, HEX_TO_INVALID_2; to low (SUB overflow)
  38: 3248+7	02CA  FE0A    	    CP 10 ; Value is between 0 and 9
  39: 3255+7+5	02CC  3805    	    JR C, HEX_TO_BIN_2
  40: 3262+7	02CE  D607    	    SUB 7
  41: 3269+10	02D0  EADA02  	    jp PE, HEX_TO_INVALID_2; to low (SUB overflow)
  42:     -	02D3          	HEX_TO_BIN_2:
  43: 3279+7	02D3  FE10    	    CP 16
  44: 3286+7+5	02D5  3003    	    JR NC, HEX_TO_INVALID_2; if bigger than 15-> fail
  45: 3293+7	02D7  E60F    	    AND 0x0F
  46: 3300+10	02D9  C9      	    RET
  47:     -	02DA          	HEX_TO_INVALID_2:
  48: 3310+4	02DA  37      	    SCF ;set carry flag
  49: 3314+10	02DB  C9      	    RET
  50:				
  51:				
  52:				;*****************
  53:				; Convert Byte to Hex Char (ASCII)
  54:				;*****************
  55:				;Description: the StrLength function inline
  56:				;
  57:				;Inputs: A contains input byte
  58:				;
  59:				;Outputs: BC contains 2 Bytes of ASCII (HEX)
  60:				;
  61:				;Destroys: A, BC,
  62:     -	02DC          	STRCONV_BYTES_TO_HEX:
  63: 3324+11	02DC  F5      	    PUSH AF;Backup A Register
  64: 3335+4	02DD  1F      	    RRA
  65: 3339+4	02DE  1F      	    RRA
  66: 3343+4	02DF  1F      	    RRA
  67: 3347+4	02E0  1F      	    RRA
  68: 3351+17	02E1  CDEB02  	    CALL STRCONV_BYTES_TO_HEX_1
  69:				    ;LD A,D
  70: 3368+4	02E4  47      	    LD B,A  
  71: 3372+10	02E5  F1      	    POP AF ; Reload first Byte
  72: 3382+17	02E6  CDEB02  	    CALL STRCONV_BYTES_TO_HEX_1
  73:				    ;LD A,D
  74: 3399+4	02E9  4F      	    LD C,A
  75: 3403+10	02EA  C9      	    RET
  76:				
  77:     -	02EB          	STRCONV_BYTES_TO_HEX_1:
  78: 3413+7	02EB  E60F    	    AND 0x0F
  79: 3420+7	02ED  C630    	    ADD 48
  80: 3427+7	02EF  FE3A    	    CP 58 ; Check if less than 58 (less than ASCII 9)
  81:				    ;JR C, STRCONV_BYTES_TO_HEX_2
  82: 3434+5+6	02F1  D8      	    RET C
  83: 3439+7	02F2  C607    	    ADD 7 ; A-F
  84: 3446+10	02F4  C9      	    RET
  85:     -	02F5          	STRCONV_BYTES_TO_HEX_2:
  86:				    ;LD D,A
  87: 3456+10	02F5  C9      	    RET
  88:				
  89:				
**** main.asm ****
 389:				.include "vdptext.s"
**** include/vdptext.s ****
   1:				; Registers
   2:     -	0080          	TmsCtrl0Reg:            equ 80h
   3:     -	0081          	TmsCtrl1Reg:            equ 81h
   4:     -	0082          	TmsNameReg:             equ 82h
   5:     -	0083          	TmsColorTableReg:       equ 83h
   6:     -	0084          	TmsPatternReg:          equ 84h
   7:     -	0085          	TmsSpriteAttrReg:       equ 85h
   8:     -	0086          	TmsSpritePatternReg:    equ 86h
   9:     -	0087          	TmsColorReg:            equ 87h
  10:				
  11:				; colors
  12:     -	0000          	TmsTransparent:         equ 0
  13:     -	0001          	TmsBlack:               equ 1
  14:     -	0002          	TmsMediumGreen:         equ 2
  15:     -	0003          	TmsLightGreen:          equ 3
  16:     -	0004          	TmsDarkBlue:            equ 4
  17:     -	0005          	TmsLightBlue:           equ 5
  18:     -	0006          	TmsDarkRed:             equ 6
  19:     -	0007          	TmsCyan:                equ 7
  20:     -	0008          	TmsMediumRed:           equ 8
  21:     -	0009          	TmsLightRed:            equ 9
  22:     -	000A          	TmsDarkYellow:          equ 0ah
  23:     -	000B          	TmsLightYellow:         equ 0bh
  24:     -	000C          	TmsDarkGreen:           equ 0ch
  25:     -	000D          	TmsMagenta:             equ 0dh
  26:     -	000E          	TmsGray:                equ 0eh
  27:     -	000F          	TmsWhite:               equ 0fh
  28:				
  29:				; memory locations
  30:     -	3800          	TmsNameLoc:             equ 0x3800
  31:     -	0000          	TmsPatternLoc:          equ 0x0000
  32:     -	2000          	TmsColorTableLoc:       equ 0x2000
  33:				
  34:				; table lengths
  35:				
  36:     -	0300          	TmsTileNameLen:         equ 300h
  37:     -	03C0          	TmsTextNameLen:         equ 3c0h
  38:				
  39:     -	0020          	TmsTileColorLen:        equ 20h
  40:     -	0800          	TmsBitmapColorLen:      equ 800h
  41:				
  42:     -	0800          	TmsTilePatternLen:      equ 800h
  43:     -	0800          	TmsTextPatternLen:      equ 800h
  44:     -	0600          	TmsMulticolorPatternLen: equ 600h
  45:     -	1800          	TmsBitmapPatternLen:    equ 1800h
  46:				
  47:				;VDP initialization
  48:     -	02F6          	vdpconsole_init:
  49: 3466+4	02F6  AF      	    xor a
  50: 3470+13	02F7  320240  	    ld (var_curserx), a ;initialize curser x position with 0
  51: 3483+13	02FA  320340  	    ld (var_cursery), a ;initialize curser y position with 0
  52:				
  53: 3496+4	02FD  AF      	    xor a
  54: 3500+7	02FE  0680    	    ld b, TmsCtrl0Reg
  55: 3507+17	0300  CD6A03  	    call vdp_reg_write  ; Set reg 0 to 0
  56:				
  57: 3524+7	0303  3E90    	    ld a, 0x90          ; Set 16k memory and blank
  58: 3531+7	0305  0681    	    ld b, TmsCtrl1Reg
  59: 3538+17	0307  CD6A03  	    call vdp_reg_write  ; write to reg 1
  60:				
  61:				    ;ld a,0xFC           ;white,blue
  62:				    ;ld a,0xF4           ;white,purple
  63: 3555+7	030A  3EF0    	    ld a,0xF0           ;white,black
  64: 3562+7	030C  0687    	    ld b, TmsColorReg
  65: 3569+17	030E  CD6A03  	    call vdp_reg_write  ; set color to fg:white bg:black
  66:				
  67:				
  68: 3586+10	0311  110000  	    ld de, 0            ; clear entire VRAM
  69: 3596+10	0314  010040  	    ld bc, 0x4000
  70: 3606+7	0317  3E00    	    ld a, 0
  71: 3613+17	0319  CD8B03  	    call vdp_tms_clear
  72:				
  73:				    ;setup adress color
  74: 3630+10	031C  010020  	    ld bc, TmsColorTableLoc ;color base addr
  75: 3640+4	031F  78      	    ld a,b          ;divide by 0x40 (so it fits in 1 byte)
  76: 3644+8	0320  CB11    	    rl c            
  77: 3652+4	0322  17      	    rla
  78: 3656+8	0323  CB11    	    rl c
  79: 3664+4	0325  17      	    rla
  80:				
  81: 3668+7	0326  0683    	    ld b, TmsColorTableReg
  82: 3675+17	0328  CD6A03  	    call vdp_reg_write
  83:				
  84:				    ;setup pattern addr
  85: 3692+10	032B  010000  	    ld bc, TmsPatternLoc
  86: 3702+4	032E  78      	    ld a,b
  87: 3706+4	032F  0F      	    rrca
  88: 3710+4	0330  0F      	    rrca
  89: 3714+4	0331  0F      	    rrca
  90:				
  91: 3718+7	0332  0684    	    ld b, TmsPatternReg
  92: 3725+17	0334  CD6A03  	    call vdp_reg_write
  93:				
  94:				    ;setup name table addr
  95: 3742+10	0337  010038  	    ld bc, TmsNameLoc
  96: 3752+4	033A  78      	    ld a,b
  97: 3756+4	033B  0F      	    rrca
  98: 3760+4	033C  0F      	    rrca
  99: 3764+7	033D  E60F    	    and 0x0F
 100: 3771+7	033F  0682    	    ld b, TmsNameReg
 101: 3778+17	0341  CD6A03  	    call vdp_reg_write
 102:				
 103:				    ;copy charset to video ram
 104:				    ;TmsFont is start symbol of charset
 105: 3795+10	0344  21A803  	    ld hl,[TmsFont] ;HL contains start addr of font
 106: 3805+10	0347  010008  	    ld bc,TmsTextPatternLen
 107: 3815+10	034A  110000  	    ld de, TmsPatternLoc    ;setup start addr
 108: 3825+17	034D  CD7303  	    call vdp_setup_font
 109:				
 110:				    ;clear memory
 111: 3842+10	0350  110038  	    ld de, TmsNameLoc
 112: 3852+10	0353  01C03B  	    ld bc, TmsNameLoc+960
 113: 3862+17	0356  CD8B03  	    call vdp_tms_clear
 114:				
 115:				    ;set cursor to 0,0
 116: 3879+10	0359  010000  	    ld bc,0
 117: 3889+17	035C  CDA00B  	    call vdp_cursor_set
 118:				
 119:				    ;end of initialization
 120: 3906+7	035F  3ED0    	    ld a, 11010000b ; Set 16k memory and disable blank blank
 121: 3913+7	0361  0681    	    ld b,TmsCtrl1Reg
 122: 3920+17	0363  CD6A03  	    call vdp_reg_write  ; write to reg 1
 123:				
 124:				    ;set cursor position
 125: 3937+17	0366  CDA90B  	    call vdp_cursor_move
 126:				
 127: 3954+10	0369  C9      	    ret
 128:				
 129:				
 130:				;Output operation to VDP register   
 131:				;A contians Data, B contains Regsiter ID
 132:     -	036A          	vdp_reg_write:
 133: 3964+11	036A  D381    	    out (VDP_REG), a    ;write data byte first
 134: 3975+4	036C  78      	    ld a, b          ;load reg address
 135: 3979+11	036D  D381    	    out (VDP_REG), a    ;write register select
 136: 3990+10	036F  C9      	    ret
 137:				
 138:     -	0370          	vdp_wait:
 139: 4000+4	0370  00      	    nop
 140: 4004+4	0371  00      	    nop
 141:				    ;nop
 142:				    ;nop
 143: 4008+10	0372  C9      	    ret
 144:				
 145:				;HL contianst start addr of font
 146:				;BC Length
 147:				;DE start location
 148:     -	0373          	vdp_setup_font:
 149:				    
 150: 4018+4	0373  7B      	    ld a,e      ;load lsb
 151: 4022+11	0374  D381    	    out (VDP_REG), a
 152: 4033+4	0376  7A      	    ld a,d      ;load msb
 153: 4037+7	0377  E63F    	    and 0x3F    ;mask
 154: 4044+7	0379  F640    	    or 0x40     ;set auto incerement bit
 155: 4051+11	037B  D381    	    out (VDP_REG), a
 156:     -	037D          	vdp_setup_font_loop:
 157: 4062+7	037D  7E      	    ld a,(hl)   ;load current byte
 158: 4069+6	037E  23      	    inc hl      ;incerment pointer
 159: 4075+6	037F  0B      	    dec bc      ;decrement counter
 160:				    ;ld a, 10001000b
 161: 4081+11	0380  D380    	    out (VDP_MEM),a
 162: 4092+17	0382  CD7003  	    call vdp_wait
 163:				
 164: 4109+4	0385  78      	    ld a,b  ;check if bc == 0
 165: 4113+4	0386  B1      	    or c
 166: 4117+10	0387  C27D03  	    jp nz, vdp_setup_font_loop  ;if not 0 then loop
 167:				
 168: 4127+10	038A  C9      	    ret
 169:				    
 170:				;DE start addr, BC end addr
 171:     -	038B          	vdp_tms_clear:
 172:				    ;setup start addr
 173: 4137+11	038B  F5      	    push af
 174: 4148+4	038C  79      	    ld a,c      ;load lsb
 175: 4152+11	038D  D381    	    out (VDP_REG), a
 176:				
 177: 4163+4	038F  78      	    ld a,b      ;load msb
 178: 4167+7	0390  E63F    	    and 0x3F    ;mask
 179: 4174+7	0392  F640    	    or 0x40     ;set auto incerement bit
 180: 4181+11	0394  D381    	    out (VDP_REG), a
 181:				
 182: 4192+10	0396  F1      	    pop af
 183: 4202+11	0397  E5      	    push hl
 184:				
 185:     -	0398          	vdp_tms_clear_loop:
 186:				    ;write memory out
 187: 4213+4	0398  AF      	    xor a
 188: 4217+11	0399  D380    	    out (VDP_MEM), a
 189: 4228+17	039B  CD7003  	    call vdp_wait
 190:				
 191: 4245+6	039E  13      	    inc de      ;incerement counter
 192: 4251+4	039F  60      	    ld h,b
 193: 4255+4	03A0  69      	    ld l,c
 194: 4259+15	03A1  ED52    	    sbc hl,de   ;check if reached maximum
 195: 4274+10	03A3  C29803  	    jp nz, vdp_tms_clear_loop   ;if not -> loop
 196:				    
 197: 4284+10	03A6  E1      	    pop hl      ;restore hl and exit sub
 198: 4294+10	03A7  C9      	    ret
 199:				
 200:				.include "tmsfont.s"
**** include/tmsfont.s ****
   1:				; 6x8 bitmap font by Oleg Kosenkov
   2:				; adapted for Z8C by Dennis Gunia
   3:				; Source: https://github.com/idispatch/raster-fonts/blob/master/font-6x8.c
   4:     -	03A8          	TmsFont:
   5:				
   6:     -	03A8  00      	    defb 00000000b
   7:     -	03A9  00      	    defb 00000000b
   8:     -	03AA  00      	    defb 00000000b
   9:     -	03AB  00      	    defb 00000000b
  10:     -	03AC  00      	    defb 00000000b
  11:     -	03AD  00      	    defb 00000000b
  12:     -	03AE  00      	    defb 00000000b
  13:     -	03AF  00      	    defb 00000000b
  14:				
  15:				    ; code=1, hex=0x01, ascii="^A"
  16:     -	03B0  38      	    defb 00111000b
  17:     -	03B1  44      	    defb 01000100b
  18:     -	03B2  6C      	    defb 01101100b
  19:     -	03B3  44      	    defb 01000100b
  20:     -	03B4  54      	    defb 01010100b
  21:     -	03B5  44      	    defb 01000100b
  22:     -	03B6  38      	    defb 00111000b
  23:     -	03B7  00      	    defb 00000000b
  24:				
  25:				    ; code=2, hex=0x02, ascii="^B"
  26:     -	03B8  38      	    defb 00111000b
  27:     -	03B9  7C      	    defb 01111100b
  28:     -	03BA  54      	    defb 01010100b
  29:     -	03BB  7C      	    defb 01111100b
  30:     -	03BC  44      	    defb 01000100b
  31:     -	03BD  7C      	    defb 01111100b
  32:     -	03BE  38      	    defb 00111000b
  33:     -	03BF  00      	    defb 00000000b
  34:				
  35:				    ; code=3, hex=0x03, ascii="^C"
  36:     -	03C0  00      	    defb 00000000b
  37:     -	03C1  28      	    defb 00101000b
  38:     -	03C2  7C      	    defb 01111100b
  39:     -	03C3  7C      	    defb 01111100b
  40:     -	03C4  7C      	    defb 01111100b
  41:     -	03C5  38      	    defb 00111000b
  42:     -	03C6  10      	    defb 00010000b
  43:     -	03C7  00      	    defb 00000000b
  44:				
  45:				    ; code=4, hex=0x04, ascii="^D"
  46:     -	03C8  00      	    defb 00000000b
  47:     -	03C9  10      	    defb 00010000b
  48:     -	03CA  38      	    defb 00111000b
  49:     -	03CB  7C      	    defb 01111100b
  50:     -	03CC  7C      	    defb 01111100b
  51:     -	03CD  38      	    defb 00111000b
  52:     -	03CE  10      	    defb 00010000b
  53:     -	03CF  00      	    defb 00000000b
  54:				
  55:				    ; code=5, hex=0x05, ascii="^E"
  56:     -	03D0  10      	    defb 00010000b
  57:     -	03D1  38      	    defb 00111000b
  58:     -	03D2  38      	    defb 00111000b
  59:     -	03D3  10      	    defb 00010000b
  60:     -	03D4  7C      	    defb 01111100b
  61:     -	03D5  7C      	    defb 01111100b
  62:     -	03D6  10      	    defb 00010000b
  63:     -	03D7  00      	    defb 00000000b
  64:				
  65:				    ; code=6, hex=0x06, ascii="^F"
  66:     -	03D8  00      	    defb 00000000b
  67:     -	03D9  10      	    defb 00010000b
  68:     -	03DA  38      	    defb 00111000b
  69:     -	03DB  7C      	    defb 01111100b
  70:     -	03DC  7C      	    defb 01111100b
  71:     -	03DD  10      	    defb 00010000b
  72:     -	03DE  38      	    defb 00111000b
  73:     -	03DF  00      	    defb 00000000b
  74:				
  75:				    ; code=7, hex=0x07, ascii="^G"
  76:     -	03E0  00      	    defb 00000000b
  77:     -	03E1  00      	    defb 00000000b
  78:     -	03E2  00      	    defb 00000000b
  79:     -	03E3  30      	    defb 00110000b
  80:     -	03E4  30      	    defb 00110000b
  81:     -	03E5  00      	    defb 00000000b
  82:     -	03E6  00      	    defb 00000000b
  83:     -	03E7  00      	    defb 00000000b
  84:				
  85:				    ; code=8, hex=0x08, ascii="^H"
  86:     -	03E8  FC      	    defb 11111100b
  87:     -	03E9  FC      	    defb 11111100b
  88:     -	03EA  FC      	    defb 11111100b
  89:     -	03EB  CC      	    defb 11001100b
  90:     -	03EC  CC      	    defb 11001100b
  91:     -	03ED  FC      	    defb 11111100b
  92:     -	03EE  FC      	    defb 11111100b
  93:     -	03EF  FC      	    defb 11111100b
  94:				
  95:				    ; code=9, hex=0x09, ascii="^I"
  96:     -	03F0  00      	    defb 00000000b
  97:     -	03F1  00      	    defb 00000000b
  98:     -	03F2  78      	    defb 01111000b
  99:     -	03F3  48      	    defb 01001000b
 100:     -	03F4  48      	    defb 01001000b
 101:     -	03F5  78      	    defb 01111000b
 102:     -	03F6  00      	    defb 00000000b
 103:     -	03F7  00      	    defb 00000000b
 104:				
 105:				    ; code=10, hex=0x0A, ascii="^J"
 106:     -	03F8  FC      	    defb 11111100b
 107:     -	03F9  FC      	    defb 11111100b
 108:     -	03FA  84      	    defb 10000100b
 109:     -	03FB  B4      	    defb 10110100b
 110:     -	03FC  B4      	    defb 10110100b
 111:     -	03FD  84      	    defb 10000100b
 112:     -	03FE  FC      	    defb 11111100b
 113:     -	03FF  FC      	    defb 11111100b
 114:				
 115:				    ; code=11, hex=0x0B, ascii="^K"
 116:     -	0400  00      	    defb 00000000b
 117:     -	0401  1C      	    defb 00011100b
 118:     -	0402  0C      	    defb 00001100b
 119:     -	0403  34      	    defb 00110100b
 120:     -	0404  48      	    defb 01001000b
 121:     -	0405  48      	    defb 01001000b
 122:     -	0406  30      	    defb 00110000b
 123:     -	0407  00      	    defb 00000000b
 124:				
 125:				    ; code=12, hex=0x0C, ascii="^L"
 126:     -	0408  38      	    defb 00111000b
 127:     -	0409  44      	    defb 01000100b
 128:     -	040A  44      	    defb 01000100b
 129:     -	040B  38      	    defb 00111000b
 130:     -	040C  10      	    defb 00010000b
 131:     -	040D  38      	    defb 00111000b
 132:     -	040E  10      	    defb 00010000b
 133:     -	040F  00      	    defb 00000000b
 134:				
 135:				    ; code=13, hex=0x0D, ascii="^M"
 136:     -	0410  10      	    defb 00010000b
 137:     -	0411  18      	    defb 00011000b
 138:     -	0412  14      	    defb 00010100b
 139:     -	0413  10      	    defb 00010000b
 140:     -	0414  30      	    defb 00110000b
 141:     -	0415  70      	    defb 01110000b
 142:     -	0416  60      	    defb 01100000b
 143:     -	0417  00      	    defb 00000000b
 144:				
 145:				    ; code=14, hex=0x0E, ascii="^N"
 146:     -	0418  0C      	    defb 00001100b
 147:     -	0419  34      	    defb 00110100b
 148:     -	041A  2C      	    defb 00101100b
 149:     -	041B  34      	    defb 00110100b
 150:     -	041C  2C      	    defb 00101100b
 151:     -	041D  6C      	    defb 01101100b
 152:     -	041E  60      	    defb 01100000b
 153:     -	041F  00      	    defb 00000000b
 154:				
 155:				    ; code=15, hex=0x0F, ascii="^O"
 156:     -	0420  00      	    defb 00000000b
 157:     -	0421  54      	    defb 01010100b
 158:     -	0422  38      	    defb 00111000b
 159:     -	0423  6C      	    defb 01101100b
 160:     -	0424  38      	    defb 00111000b
 161:     -	0425  54      	    defb 01010100b
 162:     -	0426  00      	    defb 00000000b
 163:     -	0427  00      	    defb 00000000b
 164:				
 165:				    ; code=16, hex=0x10, ascii="^P"
 166:     -	0428  20      	    defb 00100000b
 167:     -	0429  30      	    defb 00110000b
 168:     -	042A  38      	    defb 00111000b
 169:     -	042B  3C      	    defb 00111100b
 170:     -	042C  38      	    defb 00111000b
 171:     -	042D  30      	    defb 00110000b
 172:     -	042E  20      	    defb 00100000b
 173:     -	042F  00      	    defb 00000000b
 174:				
 175:				    ; code=17, hex=0x11, ascii="^Q"
 176:     -	0430  08      	    defb 00001000b
 177:     -	0431  18      	    defb 00011000b
 178:     -	0432  38      	    defb 00111000b
 179:     -	0433  78      	    defb 01111000b
 180:     -	0434  38      	    defb 00111000b
 181:     -	0435  18      	    defb 00011000b
 182:     -	0436  08      	    defb 00001000b
 183:     -	0437  00      	    defb 00000000b
 184:				
 185:				    ; code=18, hex=0x12, ascii="^R"
 186:     -	0438  10      	    defb 00010000b
 187:     -	0439  38      	    defb 00111000b
 188:     -	043A  7C      	    defb 01111100b
 189:     -	043B  10      	    defb 00010000b
 190:     -	043C  7C      	    defb 01111100b
 191:     -	043D  38      	    defb 00111000b
 192:     -	043E  10      	    defb 00010000b
 193:     -	043F  00      	    defb 00000000b
 194:				
 195:				    ; code=19, hex=0x13, ascii="^S"
 196:     -	0440  28      	    defb 00101000b
 197:     -	0441  28      	    defb 00101000b
 198:     -	0442  28      	    defb 00101000b
 199:     -	0443  28      	    defb 00101000b
 200:     -	0444  28      	    defb 00101000b
 201:     -	0445  00      	    defb 00000000b
 202:     -	0446  28      	    defb 00101000b
 203:     -	0447  00      	    defb 00000000b
 204:				
 205:				    ; code=20, hex=0x14, ascii="^T"
 206:     -	0448  3C      	    defb 00111100b
 207:     -	0449  54      	    defb 01010100b
 208:     -	044A  54      	    defb 01010100b
 209:     -	044B  34      	    defb 00110100b
 210:     -	044C  14      	    defb 00010100b
 211:     -	044D  14      	    defb 00010100b
 212:     -	044E  14      	    defb 00010100b
 213:     -	044F  00      	    defb 00000000b
 214:				
 215:				    ; code=21, hex=0x15, ascii="^U"
 216:     -	0450  38      	    defb 00111000b
 217:     -	0451  44      	    defb 01000100b
 218:     -	0452  30      	    defb 00110000b
 219:     -	0453  28      	    defb 00101000b
 220:     -	0454  18      	    defb 00011000b
 221:     -	0455  44      	    defb 01000100b
 222:     -	0456  38      	    defb 00111000b
 223:     -	0457  00      	    defb 00000000b
 224:				
 225:				    ; code=22, hex=0x16, ascii="^V"
 226:     -	0458  00      	    defb 00000000b
 227:     -	0459  00      	    defb 00000000b
 228:     -	045A  00      	    defb 00000000b
 229:     -	045B  00      	    defb 00000000b
 230:     -	045C  00      	    defb 00000000b
 231:     -	045D  78      	    defb 01111000b
 232:     -	045E  78      	    defb 01111000b
 233:     -	045F  00      	    defb 00000000b
 234:				
 235:				    ; code=23, hex=0x17, ascii="^W"
 236:     -	0460  10      	    defb 00010000b
 237:     -	0461  38      	    defb 00111000b
 238:     -	0462  7C      	    defb 01111100b
 239:     -	0463  10      	    defb 00010000b
 240:     -	0464  7C      	    defb 01111100b
 241:     -	0465  38      	    defb 00111000b
 242:     -	0466  10      	    defb 00010000b
 243:     -	0467  38      	    defb 00111000b
 244:				
 245:				    ; code=24, hex=0x18, ascii="^X"
 246:     -	0468  10      	    defb 00010000b
 247:     -	0469  38      	    defb 00111000b
 248:     -	046A  7C      	    defb 01111100b
 249:     -	046B  10      	    defb 00010000b
 250:     -	046C  10      	    defb 00010000b
 251:     -	046D  10      	    defb 00010000b
 252:     -	046E  10      	    defb 00010000b
 253:     -	046F  00      	    defb 00000000b
 254:				
 255:				    ; code=25, hex=0x19, ascii="^Y"
 256:     -	0470  10      	    defb 00010000b
 257:     -	0471  10      	    defb 00010000b
 258:     -	0472  10      	    defb 00010000b
 259:     -	0473  10      	    defb 00010000b
 260:     -	0474  7C      	    defb 01111100b
 261:     -	0475  38      	    defb 00111000b
 262:     -	0476  10      	    defb 00010000b
 263:     -	0477  00      	    defb 00000000b
 264:				
 265:				    ; code=26, hex=0x1A, ascii="^Z"
 266:     -	0478  00      	    defb 00000000b
 267:     -	0479  10      	    defb 00010000b
 268:     -	047A  18      	    defb 00011000b
 269:     -	047B  7C      	    defb 01111100b
 270:     -	047C  18      	    defb 00011000b
 271:     -	047D  10      	    defb 00010000b
 272:     -	047E  00      	    defb 00000000b
 273:     -	047F  00      	    defb 00000000b
 274:				
 275:				    ; code=27, hex=0x1B, ascii="^["
 276:     -	0480  00      	    defb 00000000b
 277:     -	0481  10      	    defb 00010000b
 278:     -	0482  30      	    defb 00110000b
 279:     -	0483  7C      	    defb 01111100b
 280:     -	0484  30      	    defb 00110000b
 281:     -	0485  10      	    defb 00010000b
 282:     -	0486  00      	    defb 00000000b
 283:     -	0487  00      	    defb 00000000b
 284:				
 285:				    ; code=28, hex=0x1C, ascii="^\"
 286:     -	0488  00      	    defb 00000000b
 287:     -	0489  00      	    defb 00000000b
 288:     -	048A  00      	    defb 00000000b
 289:     -	048B  40      	    defb 01000000b
 290:     -	048C  40      	    defb 01000000b
 291:     -	048D  40      	    defb 01000000b
 292:     -	048E  7C      	    defb 01111100b
 293:     -	048F  00      	    defb 00000000b
 294:				
 295:				    ; code=29, hex=0x1D, ascii="^]"
 296:     -	0490  00      	    defb 00000000b
 297:     -	0491  28      	    defb 00101000b
 298:     -	0492  28      	    defb 00101000b
 299:     -	0493  7C      	    defb 01111100b
 300:     -	0494  28      	    defb 00101000b
 301:     -	0495  28      	    defb 00101000b
 302:     -	0496  00      	    defb 00000000b
 303:     -	0497  00      	    defb 00000000b
 304:				
 305:				    ; code=30, hex=0x1E, ascii="^^"
 306:     -	0498  10      	    defb 00010000b
 307:     -	0499  10      	    defb 00010000b
 308:     -	049A  38      	    defb 00111000b
 309:     -	049B  38      	    defb 00111000b
 310:     -	049C  7C      	    defb 01111100b
 311:     -	049D  7C      	    defb 01111100b
 312:     -	049E  00      	    defb 00000000b
 313:     -	049F  00      	    defb 00000000b
 314:				
 315:				    ; code=31, hex=0x1F, ascii="^_"
 316:     -	04A0  7C      	    defb 01111100b
 317:     -	04A1  7C      	    defb 01111100b
 318:     -	04A2  38      	    defb 00111000b
 319:     -	04A3  38      	    defb 00111000b
 320:     -	04A4  10      	    defb 00010000b
 321:     -	04A5  10      	    defb 00010000b
 322:     -	04A6  00      	    defb 00000000b
 323:     -	04A7  00      	    defb 00000000b
 324:				
 325:				    ; code=32, hex=0x20, ascii=" "
 326:     -	04A8  00      	    defb 00000000b
 327:     -	04A9  00      	    defb 00000000b
 328:     -	04AA  00      	    defb 00000000b
 329:     -	04AB  00      	    defb 00000000b
 330:     -	04AC  00      	    defb 00000000b
 331:     -	04AD  00      	    defb 00000000b
 332:     -	04AE  00      	    defb 00000000b
 333:     -	04AF  00      	    defb 00000000b
 334:				
 335:				    ; code=33, hex=0x21, ascii="!"
 336:     -	04B0  10      	    defb 00010000b
 337:     -	04B1  38      	    defb 00111000b
 338:     -	04B2  38      	    defb 00111000b
 339:     -	04B3  10      	    defb 00010000b
 340:     -	04B4  10      	    defb 00010000b
 341:     -	04B5  00      	    defb 00000000b
 342:     -	04B6  10      	    defb 00010000b
 343:     -	04B7  00      	    defb 00000000b
 344:				
 345:				    ; code=34, hex=0x22, ascii="""
 346:     -	04B8  6C      	    defb 01101100b
 347:     -	04B9  6C      	    defb 01101100b
 348:     -	04BA  48      	    defb 01001000b
 349:     -	04BB  00      	    defb 00000000b
 350:     -	04BC  00      	    defb 00000000b
 351:     -	04BD  00      	    defb 00000000b
 352:     -	04BE  00      	    defb 00000000b
 353:     -	04BF  00      	    defb 00000000b
 354:				
 355:				    ; code=35, hex=0x23, ascii="#"
 356:     -	04C0  00      	    defb 00000000b
 357:     -	04C1  28      	    defb 00101000b
 358:     -	04C2  7C      	    defb 01111100b
 359:     -	04C3  28      	    defb 00101000b
 360:     -	04C4  28      	    defb 00101000b
 361:     -	04C5  7C      	    defb 01111100b
 362:     -	04C6  28      	    defb 00101000b
 363:     -	04C7  00      	    defb 00000000b
 364:				
 365:				    ; code=36, hex=0x24, ascii="$"
 366:     -	04C8  20      	    defb 00100000b
 367:     -	04C9  38      	    defb 00111000b
 368:     -	04CA  40      	    defb 01000000b
 369:     -	04CB  30      	    defb 00110000b
 370:     -	04CC  08      	    defb 00001000b
 371:     -	04CD  70      	    defb 01110000b
 372:     -	04CE  10      	    defb 00010000b
 373:     -	04CF  00      	    defb 00000000b
 374:				
 375:				    ; code=37, hex=0x25, ascii=""
 376:     -	04D0  64      	    defb 01100100b
 377:     -	04D1  64      	    defb 01100100b
 378:     -	04D2  08      	    defb 00001000b
 379:     -	04D3  10      	    defb 00010000b
 380:     -	04D4  20      	    defb 00100000b
 381:     -	04D5  4C      	    defb 01001100b
 382:     -	04D6  4C      	    defb 01001100b
 383:     -	04D7  00      	    defb 00000000b
 384:				
 385:				    ; code=38, hex=0x26, ascii="&"
 386:     -	04D8  20      	    defb 00100000b
 387:     -	04D9  50      	    defb 01010000b
 388:     -	04DA  50      	    defb 01010000b
 389:     -	04DB  20      	    defb 00100000b
 390:     -	04DC  54      	    defb 01010100b
 391:     -	04DD  48      	    defb 01001000b
 392:     -	04DE  34      	    defb 00110100b
 393:     -	04DF  00      	    defb 00000000b
 394:				
 395:				    ; code=39, hex=0x27, ascii="'"
 396:     -	04E0  30      	    defb 00110000b
 397:     -	04E1  30      	    defb 00110000b
 398:     -	04E2  20      	    defb 00100000b
 399:     -	04E3  00      	    defb 00000000b
 400:     -	04E4  00      	    defb 00000000b
 401:     -	04E5  00      	    defb 00000000b
 402:     -	04E6  00      	    defb 00000000b
 403:     -	04E7  00      	    defb 00000000b
 404:				
 405:				    ; code=40, hex=0x28, ascii="("
 406:     -	04E8  10      	    defb 00010000b
 407:     -	04E9  20      	    defb 00100000b
 408:     -	04EA  20      	    defb 00100000b
 409:     -	04EB  20      	    defb 00100000b
 410:     -	04EC  20      	    defb 00100000b
 411:     -	04ED  20      	    defb 00100000b
 412:     -	04EE  10      	    defb 00010000b
 413:     -	04EF  00      	    defb 00000000b
 414:				
 415:				    ; code=41, hex=0x29, ascii=")"
 416:     -	04F0  20      	    defb 00100000b
 417:     -	04F1  10      	    defb 00010000b
 418:     -	04F2  10      	    defb 00010000b
 419:     -	04F3  10      	    defb 00010000b
 420:     -	04F4  10      	    defb 00010000b
 421:     -	04F5  10      	    defb 00010000b
 422:     -	04F6  20      	    defb 00100000b
 423:     -	04F7  00      	    defb 00000000b
 424:				
 425:				    ; code=42, hex=0x2A, ascii="*"
 426:     -	04F8  00      	    defb 00000000b
 427:     -	04F9  28      	    defb 00101000b
 428:     -	04FA  38      	    defb 00111000b
 429:     -	04FB  7C      	    defb 01111100b
 430:     -	04FC  38      	    defb 00111000b
 431:     -	04FD  28      	    defb 00101000b
 432:     -	04FE  00      	    defb 00000000b
 433:     -	04FF  00      	    defb 00000000b
 434:				
 435:				    ; code=43, hex=0x2B, ascii="+"
 436:     -	0500  00      	    defb 00000000b
 437:     -	0501  10      	    defb 00010000b
 438:     -	0502  10      	    defb 00010000b
 439:     -	0503  7C      	    defb 01111100b
 440:     -	0504  10      	    defb 00010000b
 441:     -	0505  10      	    defb 00010000b
 442:     -	0506  00      	    defb 00000000b
 443:     -	0507  00      	    defb 00000000b
 444:				
 445:				    ; code=44, hex=0x2C, ascii=","
 446:     -	0508  00      	    defb 00000000b
 447:     -	0509  00      	    defb 00000000b
 448:     -	050A  00      	    defb 00000000b
 449:     -	050B  00      	    defb 00000000b
 450:     -	050C  00      	    defb 00000000b
 451:     -	050D  30      	    defb 00110000b
 452:     -	050E  30      	    defb 00110000b
 453:     -	050F  20      	    defb 00100000b
 454:				
 455:				    ; code=45, hex=0x2D, ascii="-"
 456:     -	0510  00      	    defb 00000000b
 457:     -	0511  00      	    defb 00000000b
 458:     -	0512  00      	    defb 00000000b
 459:     -	0513  7C      	    defb 01111100b
 460:     -	0514  00      	    defb 00000000b
 461:     -	0515  00      	    defb 00000000b
 462:     -	0516  00      	    defb 00000000b
 463:     -	0517  00      	    defb 00000000b
 464:				
 465:				    ; code=46, hex=0x2E, ascii="."
 466:     -	0518  00      	    defb 00000000b
 467:     -	0519  00      	    defb 00000000b
 468:     -	051A  00      	    defb 00000000b
 469:     -	051B  00      	    defb 00000000b
 470:     -	051C  00      	    defb 00000000b
 471:     -	051D  30      	    defb 00110000b
 472:     -	051E  30      	    defb 00110000b
 473:     -	051F  00      	    defb 00000000b
 474:				
 475:				    ; code=47, hex=0x2F, ascii="/"
 476:     -	0520  00      	    defb 00000000b
 477:     -	0521  04      	    defb 00000100b
 478:     -	0522  08      	    defb 00001000b
 479:     -	0523  10      	    defb 00010000b
 480:     -	0524  20      	    defb 00100000b
 481:     -	0525  40      	    defb 01000000b
 482:     -	0526  00      	    defb 00000000b
 483:     -	0527  00      	    defb 00000000b
 484:				
 485:				    ; code=48, hex=0x30, ascii="0"
 486:     -	0528  38      	    defb 00111000b
 487:     -	0529  44      	    defb 01000100b
 488:     -	052A  4C      	    defb 01001100b
 489:     -	052B  54      	    defb 01010100b
 490:     -	052C  64      	    defb 01100100b
 491:     -	052D  44      	    defb 01000100b
 492:     -	052E  38      	    defb 00111000b
 493:     -	052F  00      	    defb 00000000b
 494:				
 495:				    ; code=49, hex=0x31, ascii="1"
 496:     -	0530  10      	    defb 00010000b
 497:     -	0531  30      	    defb 00110000b
 498:     -	0532  10      	    defb 00010000b
 499:     -	0533  10      	    defb 00010000b
 500:     -	0534  10      	    defb 00010000b
 501:     -	0535  10      	    defb 00010000b
 502:     -	0536  38      	    defb 00111000b
 503:     -	0537  00      	    defb 00000000b
 504:				
 505:				    ; code=50, hex=0x32, ascii="2"
 506:     -	0538  38      	    defb 00111000b
 507:     -	0539  44      	    defb 01000100b
 508:     -	053A  04      	    defb 00000100b
 509:     -	053B  18      	    defb 00011000b
 510:     -	053C  20      	    defb 00100000b
 511:     -	053D  40      	    defb 01000000b
 512:     -	053E  7C      	    defb 01111100b
 513:     -	053F  00      	    defb 00000000b
 514:				
 515:				    ; code=51, hex=0x33, ascii="3"
 516:     -	0540  38      	    defb 00111000b
 517:     -	0541  44      	    defb 01000100b
 518:     -	0542  04      	    defb 00000100b
 519:     -	0543  38      	    defb 00111000b
 520:     -	0544  04      	    defb 00000100b
 521:     -	0545  44      	    defb 01000100b
 522:     -	0546  38      	    defb 00111000b
 523:     -	0547  00      	    defb 00000000b
 524:				
 525:				    ; code=52, hex=0x34, ascii="4"
 526:     -	0548  08      	    defb 00001000b
 527:     -	0549  18      	    defb 00011000b
 528:     -	054A  28      	    defb 00101000b
 529:     -	054B  48      	    defb 01001000b
 530:     -	054C  7C      	    defb 01111100b
 531:     -	054D  08      	    defb 00001000b
 532:     -	054E  08      	    defb 00001000b
 533:     -	054F  00      	    defb 00000000b
 534:				
 535:				    ; code=53, hex=0x35, ascii="5"
 536:     -	0550  7C      	    defb 01111100b
 537:     -	0551  40      	    defb 01000000b
 538:     -	0552  40      	    defb 01000000b
 539:     -	0553  78      	    defb 01111000b
 540:     -	0554  04      	    defb 00000100b
 541:     -	0555  44      	    defb 01000100b
 542:     -	0556  38      	    defb 00111000b
 543:     -	0557  00      	    defb 00000000b
 544:				
 545:				    ; code=54, hex=0x36, ascii="6"
 546:     -	0558  18      	    defb 00011000b
 547:     -	0559  20      	    defb 00100000b
 548:     -	055A  40      	    defb 01000000b
 549:     -	055B  78      	    defb 01111000b
 550:     -	055C  44      	    defb 01000100b
 551:     -	055D  44      	    defb 01000100b
 552:     -	055E  38      	    defb 00111000b
 553:     -	055F  00      	    defb 00000000b
 554:				
 555:				    ; code=55, hex=0x37, ascii="7"
 556:     -	0560  7C      	    defb 01111100b
 557:     -	0561  04      	    defb 00000100b
 558:     -	0562  08      	    defb 00001000b
 559:     -	0563  10      	    defb 00010000b
 560:     -	0564  20      	    defb 00100000b
 561:     -	0565  20      	    defb 00100000b
 562:     -	0566  20      	    defb 00100000b
 563:     -	0567  00      	    defb 00000000b
 564:				
 565:				    ; code=56, hex=0x38, ascii="8"
 566:     -	0568  38      	    defb 00111000b
 567:     -	0569  44      	    defb 01000100b
 568:     -	056A  44      	    defb 01000100b
 569:     -	056B  38      	    defb 00111000b
 570:     -	056C  44      	    defb 01000100b
 571:     -	056D  44      	    defb 01000100b
 572:     -	056E  38      	    defb 00111000b
 573:     -	056F  00      	    defb 00000000b
 574:				
 575:				    ; code=57, hex=0x39, ascii="9"
 576:     -	0570  38      	    defb 00111000b
 577:     -	0571  44      	    defb 01000100b
 578:     -	0572  44      	    defb 01000100b
 579:     -	0573  3C      	    defb 00111100b
 580:     -	0574  04      	    defb 00000100b
 581:     -	0575  08      	    defb 00001000b
 582:     -	0576  30      	    defb 00110000b
 583:     -	0577  00      	    defb 00000000b
 584:				
 585:				    ; code=58, hex=0x3A, ascii=":"
 586:     -	0578  00      	    defb 00000000b
 587:     -	0579  00      	    defb 00000000b
 588:     -	057A  30      	    defb 00110000b
 589:     -	057B  30      	    defb 00110000b
 590:     -	057C  00      	    defb 00000000b
 591:     -	057D  30      	    defb 00110000b
 592:     -	057E  30      	    defb 00110000b
 593:     -	057F  00      	    defb 00000000b
 594:				
 595:				    ; code=59, hex=0x3B, ascii=";"
 596:     -	0580  00      	    defb 00000000b
 597:     -	0581  00      	    defb 00000000b
 598:     -	0582  30      	    defb 00110000b
 599:     -	0583  30      	    defb 00110000b
 600:     -	0584  00      	    defb 00000000b
 601:     -	0585  30      	    defb 00110000b
 602:     -	0586  30      	    defb 00110000b
 603:     -	0587  20      	    defb 00100000b
 604:				
 605:				    ; code=60, hex=0x3C, ascii="<"
 606:     -	0588  08      	    defb 00001000b
 607:     -	0589  10      	    defb 00010000b
 608:     -	058A  20      	    defb 00100000b
 609:     -	058B  40      	    defb 01000000b
 610:     -	058C  20      	    defb 00100000b
 611:     -	058D  10      	    defb 00010000b
 612:     -	058E  08      	    defb 00001000b
 613:     -	058F  00      	    defb 00000000b
 614:				
 615:				    ; code=61, hex=0x3D, ascii="="
 616:     -	0590  00      	    defb 00000000b
 617:     -	0591  00      	    defb 00000000b
 618:     -	0592  7C      	    defb 01111100b
 619:     -	0593  00      	    defb 00000000b
 620:     -	0594  00      	    defb 00000000b
 621:     -	0595  7C      	    defb 01111100b
 622:     -	0596  00      	    defb 00000000b
 623:     -	0597  00      	    defb 00000000b
 624:				
 625:				    ; code=62, hex=0x3E, ascii=">"
 626:     -	0598  20      	    defb 00100000b
 627:     -	0599  10      	    defb 00010000b
 628:     -	059A  08      	    defb 00001000b
 629:     -	059B  04      	    defb 00000100b
 630:     -	059C  08      	    defb 00001000b
 631:     -	059D  10      	    defb 00010000b
 632:     -	059E  20      	    defb 00100000b
 633:     -	059F  00      	    defb 00000000b
 634:				
 635:				    ; code=63, hex=0x3F, ascii="?"
 636:     -	05A0  38      	    defb 00111000b
 637:     -	05A1  44      	    defb 01000100b
 638:     -	05A2  04      	    defb 00000100b
 639:     -	05A3  18      	    defb 00011000b
 640:     -	05A4  10      	    defb 00010000b
 641:     -	05A5  00      	    defb 00000000b
 642:     -	05A6  10      	    defb 00010000b
 643:     -	05A7  00      	    defb 00000000b
 644:				
 645:				    ; code=64, hex=0x40, ascii="@"
 646:     -	05A8  38      	    defb 00111000b
 647:     -	05A9  44      	    defb 01000100b
 648:     -	05AA  5C      	    defb 01011100b
 649:     -	05AB  54      	    defb 01010100b
 650:     -	05AC  5C      	    defb 01011100b
 651:     -	05AD  40      	    defb 01000000b
 652:     -	05AE  38      	    defb 00111000b
 653:     -	05AF  00      	    defb 00000000b
 654:				
 655:				    ; code=65, hex=0x41, ascii="A"
 656:     -	05B0  38      	    defb 00111000b
 657:     -	05B1  44      	    defb 01000100b
 658:     -	05B2  44      	    defb 01000100b
 659:     -	05B3  44      	    defb 01000100b
 660:     -	05B4  7C      	    defb 01111100b
 661:     -	05B5  44      	    defb 01000100b
 662:     -	05B6  44      	    defb 01000100b
 663:     -	05B7  00      	    defb 00000000b
 664:				
 665:				    ; code=66, hex=0x42, ascii="B"
 666:     -	05B8  78      	    defb 01111000b
 667:     -	05B9  44      	    defb 01000100b
 668:     -	05BA  44      	    defb 01000100b
 669:     -	05BB  78      	    defb 01111000b
 670:     -	05BC  44      	    defb 01000100b
 671:     -	05BD  44      	    defb 01000100b
 672:     -	05BE  78      	    defb 01111000b
 673:     -	05BF  00      	    defb 00000000b
 674:				
 675:				    ; code=67, hex=0x43, ascii="C"
 676:     -	05C0  38      	    defb 00111000b
 677:     -	05C1  44      	    defb 01000100b
 678:     -	05C2  40      	    defb 01000000b
 679:     -	05C3  40      	    defb 01000000b
 680:     -	05C4  40      	    defb 01000000b
 681:     -	05C5  44      	    defb 01000100b
 682:     -	05C6  38      	    defb 00111000b
 683:     -	05C7  00      	    defb 00000000b
 684:				
 685:				    ; code=68, hex=0x44, ascii="D"
 686:     -	05C8  78      	    defb 01111000b
 687:     -	05C9  44      	    defb 01000100b
 688:     -	05CA  44      	    defb 01000100b
 689:     -	05CB  44      	    defb 01000100b
 690:     -	05CC  44      	    defb 01000100b
 691:     -	05CD  44      	    defb 01000100b
 692:     -	05CE  78      	    defb 01111000b
 693:     -	05CF  00      	    defb 00000000b
 694:				
 695:				    ; code=69, hex=0x45, ascii="E"
 696:     -	05D0  7C      	    defb 01111100b
 697:     -	05D1  40      	    defb 01000000b
 698:     -	05D2  40      	    defb 01000000b
 699:     -	05D3  78      	    defb 01111000b
 700:     -	05D4  40      	    defb 01000000b
 701:     -	05D5  40      	    defb 01000000b
 702:     -	05D6  7C      	    defb 01111100b
 703:     -	05D7  00      	    defb 00000000b
 704:				
 705:				    ; code=70, hex=0x46, ascii="F"
 706:     -	05D8  7C      	    defb 01111100b
 707:     -	05D9  40      	    defb 01000000b
 708:     -	05DA  40      	    defb 01000000b
 709:     -	05DB  78      	    defb 01111000b
 710:     -	05DC  40      	    defb 01000000b
 711:     -	05DD  40      	    defb 01000000b
 712:     -	05DE  40      	    defb 01000000b
 713:     -	05DF  00      	    defb 00000000b
 714:				
 715:				    ; code=71, hex=0x47, ascii="G"
 716:     -	05E0  38      	    defb 00111000b
 717:     -	05E1  44      	    defb 01000100b
 718:     -	05E2  40      	    defb 01000000b
 719:     -	05E3  5C      	    defb 01011100b
 720:     -	05E4  44      	    defb 01000100b
 721:     -	05E5  44      	    defb 01000100b
 722:     -	05E6  3C      	    defb 00111100b
 723:     -	05E7  00      	    defb 00000000b
 724:				
 725:				    ; code=72, hex=0x48, ascii="H"
 726:     -	05E8  44      	    defb 01000100b
 727:     -	05E9  44      	    defb 01000100b
 728:     -	05EA  44      	    defb 01000100b
 729:     -	05EB  7C      	    defb 01111100b
 730:     -	05EC  44      	    defb 01000100b
 731:     -	05ED  44      	    defb 01000100b
 732:     -	05EE  44      	    defb 01000100b
 733:     -	05EF  00      	    defb 00000000b
 734:				
 735:				    ; code=73, hex=0x49, ascii="I"
 736:     -	05F0  38      	    defb 00111000b
 737:     -	05F1  10      	    defb 00010000b
 738:     -	05F2  10      	    defb 00010000b
 739:     -	05F3  10      	    defb 00010000b
 740:     -	05F4  10      	    defb 00010000b
 741:     -	05F5  10      	    defb 00010000b
 742:     -	05F6  38      	    defb 00111000b
 743:     -	05F7  00      	    defb 00000000b
 744:				
 745:				    ; code=74, hex=0x4A, ascii="J"
 746:     -	05F8  04      	    defb 00000100b
 747:     -	05F9  04      	    defb 00000100b
 748:     -	05FA  04      	    defb 00000100b
 749:     -	05FB  04      	    defb 00000100b
 750:     -	05FC  44      	    defb 01000100b
 751:     -	05FD  44      	    defb 01000100b
 752:     -	05FE  38      	    defb 00111000b
 753:     -	05FF  00      	    defb 00000000b
 754:				
 755:				    ; code=75, hex=0x4B, ascii="K"
 756:     -	0600  44      	    defb 01000100b
 757:     -	0601  48      	    defb 01001000b
 758:     -	0602  50      	    defb 01010000b
 759:     -	0603  60      	    defb 01100000b
 760:     -	0604  50      	    defb 01010000b
 761:     -	0605  48      	    defb 01001000b
 762:     -	0606  44      	    defb 01000100b
 763:     -	0607  00      	    defb 00000000b
 764:				
 765:				    ; code=76, hex=0x4C, ascii="L"
 766:     -	0608  40      	    defb 01000000b
 767:     -	0609  40      	    defb 01000000b
 768:     -	060A  40      	    defb 01000000b
 769:     -	060B  40      	    defb 01000000b
 770:     -	060C  40      	    defb 01000000b
 771:     -	060D  40      	    defb 01000000b
 772:     -	060E  7C      	    defb 01111100b
 773:     -	060F  00      	    defb 00000000b
 774:				
 775:				    ; code=77, hex=0x4D, ascii="M"
 776:     -	0610  44      	    defb 01000100b
 777:     -	0611  6C      	    defb 01101100b
 778:     -	0612  54      	    defb 01010100b
 779:     -	0613  44      	    defb 01000100b
 780:     -	0614  44      	    defb 01000100b
 781:     -	0615  44      	    defb 01000100b
 782:     -	0616  44      	    defb 01000100b
 783:     -	0617  00      	    defb 00000000b
 784:				
 785:				    ; code=78, hex=0x4E, ascii="N"
 786:     -	0618  44      	    defb 01000100b
 787:     -	0619  64      	    defb 01100100b
 788:     -	061A  54      	    defb 01010100b
 789:     -	061B  4C      	    defb 01001100b
 790:     -	061C  44      	    defb 01000100b
 791:     -	061D  44      	    defb 01000100b
 792:     -	061E  44      	    defb 01000100b
 793:     -	061F  00      	    defb 00000000b
 794:				
 795:				    ; code=79, hex=0x4F, ascii="O"
 796:     -	0620  38      	    defb 00111000b
 797:     -	0621  44      	    defb 01000100b
 798:     -	0622  44      	    defb 01000100b
 799:     -	0623  44      	    defb 01000100b
 800:     -	0624  44      	    defb 01000100b
 801:     -	0625  44      	    defb 01000100b
 802:     -	0626  38      	    defb 00111000b
 803:     -	0627  00      	    defb 00000000b
 804:				
 805:				    ; code=80, hex=0x50, ascii="P"
 806:     -	0628  78      	    defb 01111000b
 807:     -	0629  44      	    defb 01000100b
 808:     -	062A  44      	    defb 01000100b
 809:     -	062B  78      	    defb 01111000b
 810:     -	062C  40      	    defb 01000000b
 811:     -	062D  40      	    defb 01000000b
 812:     -	062E  40      	    defb 01000000b
 813:     -	062F  00      	    defb 00000000b
 814:				
 815:				    ; code=81, hex=0x51, ascii="Q"
 816:     -	0630  38      	    defb 00111000b
 817:     -	0631  44      	    defb 01000100b
 818:     -	0632  44      	    defb 01000100b
 819:     -	0633  44      	    defb 01000100b
 820:     -	0634  54      	    defb 01010100b
 821:     -	0635  48      	    defb 01001000b
 822:     -	0636  34      	    defb 00110100b
 823:     -	0637  00      	    defb 00000000b
 824:				
 825:				    ; code=82, hex=0x52, ascii="R"
 826:     -	0638  78      	    defb 01111000b
 827:     -	0639  44      	    defb 01000100b
 828:     -	063A  44      	    defb 01000100b
 829:     -	063B  78      	    defb 01111000b
 830:     -	063C  48      	    defb 01001000b
 831:     -	063D  44      	    defb 01000100b
 832:     -	063E  44      	    defb 01000100b
 833:     -	063F  00      	    defb 00000000b
 834:				
 835:				    ; code=83, hex=0x53, ascii="S"
 836:     -	0640  38      	    defb 00111000b
 837:     -	0641  44      	    defb 01000100b
 838:     -	0642  40      	    defb 01000000b
 839:     -	0643  38      	    defb 00111000b
 840:     -	0644  04      	    defb 00000100b
 841:     -	0645  44      	    defb 01000100b
 842:     -	0646  38      	    defb 00111000b
 843:     -	0647  00      	    defb 00000000b
 844:				
 845:				    ; code=84, hex=0x54, ascii="T"
 846:     -	0648  7C      	    defb 01111100b
 847:     -	0649  10      	    defb 00010000b
 848:     -	064A  10      	    defb 00010000b
 849:     -	064B  10      	    defb 00010000b
 850:     -	064C  10      	    defb 00010000b
 851:     -	064D  10      	    defb 00010000b
 852:     -	064E  10      	    defb 00010000b
 853:     -	064F  00      	    defb 00000000b
 854:				
 855:				    ; code=85, hex=0x55, ascii="U"
 856:     -	0650  44      	    defb 01000100b
 857:     -	0651  44      	    defb 01000100b
 858:     -	0652  44      	    defb 01000100b
 859:     -	0653  44      	    defb 01000100b
 860:     -	0654  44      	    defb 01000100b
 861:     -	0655  44      	    defb 01000100b
 862:     -	0656  38      	    defb 00111000b
 863:     -	0657  00      	    defb 00000000b
 864:				
 865:				    ; code=86, hex=0x56, ascii="V"
 866:     -	0658  44      	    defb 01000100b
 867:     -	0659  44      	    defb 01000100b
 868:     -	065A  44      	    defb 01000100b
 869:     -	065B  44      	    defb 01000100b
 870:     -	065C  44      	    defb 01000100b
 871:     -	065D  28      	    defb 00101000b
 872:     -	065E  10      	    defb 00010000b
 873:     -	065F  00      	    defb 00000000b
 874:				
 875:				    ; code=87, hex=0x57, ascii="W"
 876:     -	0660  44      	    defb 01000100b
 877:     -	0661  44      	    defb 01000100b
 878:     -	0662  54      	    defb 01010100b
 879:     -	0663  54      	    defb 01010100b
 880:     -	0664  54      	    defb 01010100b
 881:     -	0665  54      	    defb 01010100b
 882:     -	0666  28      	    defb 00101000b
 883:     -	0667  00      	    defb 00000000b
 884:				
 885:				    ; code=88, hex=0x58, ascii="X"
 886:     -	0668  44      	    defb 01000100b
 887:     -	0669  44      	    defb 01000100b
 888:     -	066A  28      	    defb 00101000b
 889:     -	066B  10      	    defb 00010000b
 890:     -	066C  28      	    defb 00101000b
 891:     -	066D  44      	    defb 01000100b
 892:     -	066E  44      	    defb 01000100b
 893:     -	066F  00      	    defb 00000000b
 894:				
 895:				    ; code=89, hex=0x59, ascii="Y"
 896:     -	0670  44      	    defb 01000100b
 897:     -	0671  44      	    defb 01000100b
 898:     -	0672  44      	    defb 01000100b
 899:     -	0673  28      	    defb 00101000b
 900:     -	0674  10      	    defb 00010000b
 901:     -	0675  10      	    defb 00010000b
 902:     -	0676  10      	    defb 00010000b
 903:     -	0677  00      	    defb 00000000b
 904:				
 905:				    ; code=90, hex=0x5A, ascii="Z"
 906:     -	0678  78      	    defb 01111000b
 907:     -	0679  08      	    defb 00001000b
 908:     -	067A  10      	    defb 00010000b
 909:     -	067B  20      	    defb 00100000b
 910:     -	067C  40      	    defb 01000000b
 911:     -	067D  40      	    defb 01000000b
 912:     -	067E  78      	    defb 01111000b
 913:     -	067F  00      	    defb 00000000b
 914:				
 915:				    ; code=91, hex=0x5B, ascii="["
 916:     -	0680  38      	    defb 00111000b
 917:     -	0681  20      	    defb 00100000b
 918:     -	0682  20      	    defb 00100000b
 919:     -	0683  20      	    defb 00100000b
 920:     -	0684  20      	    defb 00100000b
 921:     -	0685  20      	    defb 00100000b
 922:     -	0686  38      	    defb 00111000b
 923:     -	0687  00      	    defb 00000000b
 924:				
 925:				    ; code=92, hex=0x5C, ascii="\"
 926:     -	0688  00      	    defb 00000000b
 927:     -	0689  40      	    defb 01000000b
 928:     -	068A  20      	    defb 00100000b
 929:     -	068B  10      	    defb 00010000b
 930:     -	068C  08      	    defb 00001000b
 931:     -	068D  04      	    defb 00000100b
 932:     -	068E  00      	    defb 00000000b
 933:     -	068F  00      	    defb 00000000b
 934:				
 935:				    ; code=93, hex=0x5D, ascii="]"
 936:     -	0690  38      	    defb 00111000b
 937:     -	0691  08      	    defb 00001000b
 938:     -	0692  08      	    defb 00001000b
 939:     -	0693  08      	    defb 00001000b
 940:     -	0694  08      	    defb 00001000b
 941:     -	0695  08      	    defb 00001000b
 942:     -	0696  38      	    defb 00111000b
 943:     -	0697  00      	    defb 00000000b
 944:				
 945:				    ; code=94, hex=0x5E, ascii="^"
 946:     -	0698  10      	    defb 00010000b
 947:     -	0699  28      	    defb 00101000b
 948:     -	069A  44      	    defb 01000100b
 949:     -	069B  00      	    defb 00000000b
 950:     -	069C  00      	    defb 00000000b
 951:     -	069D  00      	    defb 00000000b
 952:     -	069E  00      	    defb 00000000b
 953:     -	069F  00      	    defb 00000000b
 954:				
 955:				    ; code=95, hex=0x5F, ascii="_"
 956:     -	06A0  00      	    defb 00000000b
 957:     -	06A1  00      	    defb 00000000b
 958:     -	06A2  00      	    defb 00000000b
 959:     -	06A3  00      	    defb 00000000b
 960:     -	06A4  00      	    defb 00000000b
 961:     -	06A5  00      	    defb 00000000b
 962:     -	06A6  00      	    defb 00000000b
 963:     -	06A7  FC      	    defb 11111100b
 964:				
 965:				    ; code=96, hex=0x60, ascii="`"
 966:     -	06A8  30      	    defb 00110000b
 967:     -	06A9  30      	    defb 00110000b
 968:     -	06AA  10      	    defb 00010000b
 969:     -	06AB  00      	    defb 00000000b
 970:     -	06AC  00      	    defb 00000000b
 971:     -	06AD  00      	    defb 00000000b
 972:     -	06AE  00      	    defb 00000000b
 973:     -	06AF  00      	    defb 00000000b
 974:				
 975:				    ; code=97, hex=0x61, ascii="a"
 976:     -	06B0  00      	    defb 00000000b
 977:     -	06B1  00      	    defb 00000000b
 978:     -	06B2  38      	    defb 00111000b
 979:     -	06B3  04      	    defb 00000100b
 980:     -	06B4  3C      	    defb 00111100b
 981:     -	06B5  44      	    defb 01000100b
 982:     -	06B6  3C      	    defb 00111100b
 983:     -	06B7  00      	    defb 00000000b
 984:				
 985:				    ; code=98, hex=0x62, ascii="b"
 986:     -	06B8  40      	    defb 01000000b
 987:     -	06B9  40      	    defb 01000000b
 988:     -	06BA  78      	    defb 01111000b
 989:     -	06BB  44      	    defb 01000100b
 990:     -	06BC  44      	    defb 01000100b
 991:     -	06BD  44      	    defb 01000100b
 992:     -	06BE  78      	    defb 01111000b
 993:     -	06BF  00      	    defb 00000000b
 994:				
 995:				    ; code=99, hex=0x63, ascii="c"
 996:     -	06C0  00      	    defb 00000000b
 997:     -	06C1  00      	    defb 00000000b
 998:     -	06C2  38      	    defb 00111000b
 999:     -	06C3  44      	    defb 01000100b
1000:     -	06C4  40      	    defb 01000000b
1001:     -	06C5  44      	    defb 01000100b
1002:     -	06C6  38      	    defb 00111000b
1003:     -	06C7  00      	    defb 00000000b
1004:				
1005:				    ; code=100, hex=0x64, ascii="d"
1006:     -	06C8  04      	    defb 00000100b
1007:     -	06C9  04      	    defb 00000100b
1008:     -	06CA  3C      	    defb 00111100b
1009:     -	06CB  44      	    defb 01000100b
1010:     -	06CC  44      	    defb 01000100b
1011:     -	06CD  44      	    defb 01000100b
1012:     -	06CE  3C      	    defb 00111100b
1013:     -	06CF  00      	    defb 00000000b
1014:				
1015:				    ; code=101, hex=0x65, ascii="e"
1016:     -	06D0  00      	    defb 00000000b
1017:     -	06D1  00      	    defb 00000000b
1018:     -	06D2  38      	    defb 00111000b
1019:     -	06D3  44      	    defb 01000100b
1020:     -	06D4  78      	    defb 01111000b
1021:     -	06D5  40      	    defb 01000000b
1022:     -	06D6  38      	    defb 00111000b
1023:     -	06D7  00      	    defb 00000000b
1024:				
1025:				    ; code=102, hex=0x66, ascii="f"
1026:     -	06D8  18      	    defb 00011000b
1027:     -	06D9  20      	    defb 00100000b
1028:     -	06DA  20      	    defb 00100000b
1029:     -	06DB  78      	    defb 01111000b
1030:     -	06DC  20      	    defb 00100000b
1031:     -	06DD  20      	    defb 00100000b
1032:     -	06DE  20      	    defb 00100000b
1033:     -	06DF  00      	    defb 00000000b
1034:				
1035:				    ; code=103, hex=0x67, ascii="g"
1036:     -	06E0  00      	    defb 00000000b
1037:     -	06E1  00      	    defb 00000000b
1038:     -	06E2  3C      	    defb 00111100b
1039:     -	06E3  44      	    defb 01000100b
1040:     -	06E4  44      	    defb 01000100b
1041:     -	06E5  3C      	    defb 00111100b
1042:     -	06E6  04      	    defb 00000100b
1043:     -	06E7  38      	    defb 00111000b
1044:				
1045:				    ; code=104, hex=0x68, ascii="h"
1046:     -	06E8  40      	    defb 01000000b
1047:     -	06E9  40      	    defb 01000000b
1048:     -	06EA  70      	    defb 01110000b
1049:     -	06EB  48      	    defb 01001000b
1050:     -	06EC  48      	    defb 01001000b
1051:     -	06ED  48      	    defb 01001000b
1052:     -	06EE  48      	    defb 01001000b
1053:     -	06EF  00      	    defb 00000000b
1054:				
1055:				    ; code=105, hex=0x69, ascii="i"
1056:     -	06F0  10      	    defb 00010000b
1057:     -	06F1  00      	    defb 00000000b
1058:     -	06F2  10      	    defb 00010000b
1059:     -	06F3  10      	    defb 00010000b
1060:     -	06F4  10      	    defb 00010000b
1061:     -	06F5  10      	    defb 00010000b
1062:     -	06F6  18      	    defb 00011000b
1063:     -	06F7  00      	    defb 00000000b
1064:				
1065:				    ; code=106, hex=0x6A, ascii="j"
1066:     -	06F8  08      	    defb 00001000b
1067:     -	06F9  00      	    defb 00000000b
1068:     -	06FA  18      	    defb 00011000b
1069:     -	06FB  08      	    defb 00001000b
1070:     -	06FC  08      	    defb 00001000b
1071:     -	06FD  08      	    defb 00001000b
1072:     -	06FE  48      	    defb 01001000b
1073:     -	06FF  30      	    defb 00110000b
1074:				
1075:				    ; code=107, hex=0x6B, ascii="k"
1076:     -	0700  40      	    defb 01000000b
1077:     -	0701  40      	    defb 01000000b
1078:     -	0702  48      	    defb 01001000b
1079:     -	0703  50      	    defb 01010000b
1080:     -	0704  60      	    defb 01100000b
1081:     -	0705  50      	    defb 01010000b
1082:     -	0706  48      	    defb 01001000b
1083:     -	0707  00      	    defb 00000000b
1084:				
1085:				    ; code=108, hex=0x6C, ascii="l"
1086:     -	0708  10      	    defb 00010000b
1087:     -	0709  10      	    defb 00010000b
1088:     -	070A  10      	    defb 00010000b
1089:     -	070B  10      	    defb 00010000b
1090:     -	070C  10      	    defb 00010000b
1091:     -	070D  10      	    defb 00010000b
1092:     -	070E  18      	    defb 00011000b
1093:     -	070F  00      	    defb 00000000b
1094:				
1095:				    ; code=109, hex=0x6D, ascii="m"
1096:     -	0710  00      	    defb 00000000b
1097:     -	0711  00      	    defb 00000000b
1098:     -	0712  68      	    defb 01101000b
1099:     -	0713  54      	    defb 01010100b
1100:     -	0714  54      	    defb 01010100b
1101:     -	0715  44      	    defb 01000100b
1102:     -	0716  44      	    defb 01000100b
1103:     -	0717  00      	    defb 00000000b
1104:				
1105:				    ; code=110, hex=0x6E, ascii="n"
1106:     -	0718  00      	    defb 00000000b
1107:     -	0719  00      	    defb 00000000b
1108:     -	071A  70      	    defb 01110000b
1109:     -	071B  48      	    defb 01001000b
1110:     -	071C  48      	    defb 01001000b
1111:     -	071D  48      	    defb 01001000b
1112:     -	071E  48      	    defb 01001000b
1113:     -	071F  00      	    defb 00000000b
1114:				
1115:				    ; code=111, hex=0x6F, ascii="o"
1116:     -	0720  00      	    defb 00000000b
1117:     -	0721  00      	    defb 00000000b
1118:     -	0722  38      	    defb 00111000b
1119:     -	0723  44      	    defb 01000100b
1120:     -	0724  44      	    defb 01000100b
1121:     -	0725  44      	    defb 01000100b
1122:     -	0726  38      	    defb 00111000b
1123:     -	0727  00      	    defb 00000000b
1124:				
1125:				    ; code=112, hex=0x70, ascii="p"
1126:     -	0728  00      	    defb 00000000b
1127:     -	0729  00      	    defb 00000000b
1128:     -	072A  78      	    defb 01111000b
1129:     -	072B  44      	    defb 01000100b
1130:     -	072C  44      	    defb 01000100b
1131:     -	072D  44      	    defb 01000100b
1132:     -	072E  78      	    defb 01111000b
1133:     -	072F  40      	    defb 01000000b
1134:				
1135:				    ; code=113, hex=0x71, ascii="q"
1136:     -	0730  00      	    defb 00000000b
1137:     -	0731  00      	    defb 00000000b
1138:     -	0732  3C      	    defb 00111100b
1139:     -	0733  44      	    defb 01000100b
1140:     -	0734  44      	    defb 01000100b
1141:     -	0735  44      	    defb 01000100b
1142:     -	0736  3C      	    defb 00111100b
1143:     -	0737  04      	    defb 00000100b
1144:				
1145:				    ; code=114, hex=0x72, ascii="r"
1146:     -	0738  00      	    defb 00000000b
1147:     -	0739  00      	    defb 00000000b
1148:     -	073A  58      	    defb 01011000b
1149:     -	073B  24      	    defb 00100100b
1150:     -	073C  20      	    defb 00100000b
1151:     -	073D  20      	    defb 00100000b
1152:     -	073E  70      	    defb 01110000b
1153:     -	073F  00      	    defb 00000000b
1154:				
1155:				    ; code=115, hex=0x73, ascii="s"
1156:     -	0740  00      	    defb 00000000b
1157:     -	0741  00      	    defb 00000000b
1158:     -	0742  38      	    defb 00111000b
1159:     -	0743  40      	    defb 01000000b
1160:     -	0744  38      	    defb 00111000b
1161:     -	0745  04      	    defb 00000100b
1162:     -	0746  38      	    defb 00111000b
1163:     -	0747  00      	    defb 00000000b
1164:				
1165:				    ; code=116, hex=0x74, ascii="t"
1166:     -	0748  00      	    defb 00000000b
1167:     -	0749  20      	    defb 00100000b
1168:     -	074A  78      	    defb 01111000b
1169:     -	074B  20      	    defb 00100000b
1170:     -	074C  20      	    defb 00100000b
1171:     -	074D  28      	    defb 00101000b
1172:     -	074E  10      	    defb 00010000b
1173:     -	074F  00      	    defb 00000000b
1174:				
1175:				    ; code=117, hex=0x75, ascii="u"
1176:     -	0750  00      	    defb 00000000b
1177:     -	0751  00      	    defb 00000000b
1178:     -	0752  48      	    defb 01001000b
1179:     -	0753  48      	    defb 01001000b
1180:     -	0754  48      	    defb 01001000b
1181:     -	0755  58      	    defb 01011000b
1182:     -	0756  28      	    defb 00101000b
1183:     -	0757  00      	    defb 00000000b
1184:				
1185:				    ; code=118, hex=0x76, ascii="v"
1186:     -	0758  00      	    defb 00000000b
1187:     -	0759  00      	    defb 00000000b
1188:     -	075A  44      	    defb 01000100b
1189:     -	075B  44      	    defb 01000100b
1190:     -	075C  44      	    defb 01000100b
1191:     -	075D  28      	    defb 00101000b
1192:     -	075E  10      	    defb 00010000b
1193:     -	075F  00      	    defb 00000000b
1194:				
1195:				    ; code=119, hex=0x77, ascii="w"
1196:     -	0760  00      	    defb 00000000b
1197:     -	0761  00      	    defb 00000000b
1198:     -	0762  44      	    defb 01000100b
1199:     -	0763  44      	    defb 01000100b
1200:     -	0764  54      	    defb 01010100b
1201:     -	0765  7C      	    defb 01111100b
1202:     -	0766  28      	    defb 00101000b
1203:     -	0767  00      	    defb 00000000b
1204:				
1205:				    ; code=120, hex=0x78, ascii="x"
1206:     -	0768  00      	    defb 00000000b
1207:     -	0769  00      	    defb 00000000b
1208:     -	076A  48      	    defb 01001000b
1209:     -	076B  48      	    defb 01001000b
1210:     -	076C  30      	    defb 00110000b
1211:     -	076D  48      	    defb 01001000b
1212:     -	076E  48      	    defb 01001000b
1213:     -	076F  00      	    defb 00000000b
1214:				
1215:				    ; code=121, hex=0x79, ascii="y"
1216:     -	0770  00      	    defb 00000000b
1217:     -	0771  00      	    defb 00000000b
1218:     -	0772  48      	    defb 01001000b
1219:     -	0773  48      	    defb 01001000b
1220:     -	0774  48      	    defb 01001000b
1221:     -	0775  38      	    defb 00111000b
1222:     -	0776  10      	    defb 00010000b
1223:     -	0777  60      	    defb 01100000b
1224:				
1225:				    ; code=122, hex=0x7A, ascii="z"
1226:     -	0778  00      	    defb 00000000b
1227:     -	0779  00      	    defb 00000000b
1228:     -	077A  78      	    defb 01111000b
1229:     -	077B  08      	    defb 00001000b
1230:     -	077C  30      	    defb 00110000b
1231:     -	077D  40      	    defb 01000000b
1232:     -	077E  78      	    defb 01111000b
1233:     -	077F  00      	    defb 00000000b
1234:				
1235:				    ; code=123, hex=0x7B, ascii="{"
1236:     -	0780  18      	    defb 00011000b
1237:     -	0781  20      	    defb 00100000b
1238:     -	0782  20      	    defb 00100000b
1239:     -	0783  60      	    defb 01100000b
1240:     -	0784  20      	    defb 00100000b
1241:     -	0785  20      	    defb 00100000b
1242:     -	0786  18      	    defb 00011000b
1243:     -	0787  00      	    defb 00000000b
1244:				
1245:				    ; code=124, hex=0x7C, ascii="|"
1246:     -	0788  10      	    defb 00010000b
1247:     -	0789  10      	    defb 00010000b
1248:     -	078A  10      	    defb 00010000b
1249:     -	078B  00      	    defb 00000000b
1250:     -	078C  10      	    defb 00010000b
1251:     -	078D  10      	    defb 00010000b
1252:     -	078E  10      	    defb 00010000b
1253:     -	078F  00      	    defb 00000000b
1254:				
1255:				    ; code=125, hex=0x7D, ascii="}"
1256:     -	0790  30      	    defb 00110000b
1257:     -	0791  08      	    defb 00001000b
1258:     -	0792  08      	    defb 00001000b
1259:     -	0793  0C      	    defb 00001100b
1260:     -	0794  08      	    defb 00001000b
1261:     -	0795  08      	    defb 00001000b
1262:     -	0796  30      	    defb 00110000b
1263:     -	0797  00      	    defb 00000000b
1264:				
1265:				    ; code=126, hex=0x7E, ascii="~"
1266:     -	0798  28      	    defb 00101000b
1267:     -	0799  50      	    defb 01010000b
1268:     -	079A  00      	    defb 00000000b
1269:     -	079B  00      	    defb 00000000b
1270:     -	079C  00      	    defb 00000000b
1271:     -	079D  00      	    defb 00000000b
1272:     -	079E  00      	    defb 00000000b
1273:     -	079F  00      	    defb 00000000b
1274:				
1275:				    ; code=127, hex=0x7F, ascii="^?"
1276:     -	07A0  10      	    defb 00010000b
1277:     -	07A1  38      	    defb 00111000b
1278:     -	07A2  6C      	    defb 01101100b
1279:     -	07A3  44      	    defb 01000100b
1280:     -	07A4  44      	    defb 01000100b
1281:     -	07A5  7C      	    defb 01111100b
1282:     -	07A6  00      	    defb 00000000b
1283:     -	07A7  00      	    defb 00000000b
1284:				
1285:				    ; code=128, hex=0x80, ascii="!^@"
1286:     -	07A8  38      	    defb 00111000b
1287:     -	07A9  44      	    defb 01000100b
1288:     -	07AA  40      	    defb 01000000b
1289:     -	07AB  40      	    defb 01000000b
1290:     -	07AC  44      	    defb 01000100b
1291:     -	07AD  38      	    defb 00111000b
1292:     -	07AE  10      	    defb 00010000b
1293:     -	07AF  30      	    defb 00110000b
1294:				
1295:				    ; code=129, hex=0x81, ascii="!^A"
1296:     -	07B0  48      	    defb 01001000b
1297:     -	07B1  00      	    defb 00000000b
1298:     -	07B2  48      	    defb 01001000b
1299:     -	07B3  48      	    defb 01001000b
1300:     -	07B4  48      	    defb 01001000b
1301:     -	07B5  58      	    defb 01011000b
1302:     -	07B6  28      	    defb 00101000b
1303:     -	07B7  00      	    defb 00000000b
1304:				
1305:				    ; code=130, hex=0x82, ascii="!^B"
1306:     -	07B8  0C      	    defb 00001100b
1307:     -	07B9  00      	    defb 00000000b
1308:     -	07BA  38      	    defb 00111000b
1309:     -	07BB  44      	    defb 01000100b
1310:     -	07BC  78      	    defb 01111000b
1311:     -	07BD  40      	    defb 01000000b
1312:     -	07BE  38      	    defb 00111000b
1313:     -	07BF  00      	    defb 00000000b
1314:				
1315:				    ; code=131, hex=0x83, ascii="!^C"
1316:     -	07C0  38      	    defb 00111000b
1317:     -	07C1  00      	    defb 00000000b
1318:     -	07C2  38      	    defb 00111000b
1319:     -	07C3  04      	    defb 00000100b
1320:     -	07C4  3C      	    defb 00111100b
1321:     -	07C5  44      	    defb 01000100b
1322:     -	07C6  3C      	    defb 00111100b
1323:     -	07C7  00      	    defb 00000000b
1324:				
1325:				    ; code=132, hex=0x84, ascii="!^D"
1326:     -	07C8  28      	    defb 00101000b
1327:     -	07C9  00      	    defb 00000000b
1328:     -	07CA  38      	    defb 00111000b
1329:     -	07CB  04      	    defb 00000100b
1330:     -	07CC  3C      	    defb 00111100b
1331:     -	07CD  44      	    defb 01000100b
1332:     -	07CE  3C      	    defb 00111100b
1333:     -	07CF  00      	    defb 00000000b
1334:				
1335:				    ; code=133, hex=0x85, ascii="!^E"
1336:     -	07D0  30      	    defb 00110000b
1337:     -	07D1  00      	    defb 00000000b
1338:     -	07D2  38      	    defb 00111000b
1339:     -	07D3  04      	    defb 00000100b
1340:     -	07D4  3C      	    defb 00111100b
1341:     -	07D5  44      	    defb 01000100b
1342:     -	07D6  3C      	    defb 00111100b
1343:     -	07D7  00      	    defb 00000000b
1344:				
1345:				    ; code=134, hex=0x86, ascii="!^F"
1346:     -	07D8  38      	    defb 00111000b
1347:     -	07D9  28      	    defb 00101000b
1348:     -	07DA  38      	    defb 00111000b
1349:     -	07DB  04      	    defb 00000100b
1350:     -	07DC  3C      	    defb 00111100b
1351:     -	07DD  44      	    defb 01000100b
1352:     -	07DE  3C      	    defb 00111100b
1353:     -	07DF  00      	    defb 00000000b
1354:				
1355:				    ; code=135, hex=0x87, ascii="!^G"
1356:     -	07E0  00      	    defb 00000000b
1357:     -	07E1  38      	    defb 00111000b
1358:     -	07E2  44      	    defb 01000100b
1359:     -	07E3  40      	    defb 01000000b
1360:     -	07E4  44      	    defb 01000100b
1361:     -	07E5  38      	    defb 00111000b
1362:     -	07E6  10      	    defb 00010000b
1363:     -	07E7  30      	    defb 00110000b
1364:				
1365:				    ; code=136, hex=0x88, ascii="!^H"
1366:     -	07E8  38      	    defb 00111000b
1367:     -	07E9  00      	    defb 00000000b
1368:     -	07EA  38      	    defb 00111000b
1369:     -	07EB  44      	    defb 01000100b
1370:     -	07EC  78      	    defb 01111000b
1371:     -	07ED  40      	    defb 01000000b
1372:     -	07EE  38      	    defb 00111000b
1373:     -	07EF  00      	    defb 00000000b
1374:				
1375:				    ; code=137, hex=0x89, ascii="!^I"
1376:     -	07F0  28      	    defb 00101000b
1377:     -	07F1  00      	    defb 00000000b
1378:     -	07F2  38      	    defb 00111000b
1379:     -	07F3  44      	    defb 01000100b
1380:     -	07F4  78      	    defb 01111000b
1381:     -	07F5  40      	    defb 01000000b
1382:     -	07F6  38      	    defb 00111000b
1383:     -	07F7  00      	    defb 00000000b
1384:				
1385:				    ; code=138, hex=0x8A, ascii="!^J"
1386:     -	07F8  30      	    defb 00110000b
1387:     -	07F9  00      	    defb 00000000b
1388:     -	07FA  38      	    defb 00111000b
1389:     -	07FB  44      	    defb 01000100b
1390:     -	07FC  78      	    defb 01111000b
1391:     -	07FD  40      	    defb 01000000b
1392:     -	07FE  38      	    defb 00111000b
1393:     -	07FF  00      	    defb 00000000b
1394:				
1395:				    ; code=139, hex=0x8B, ascii="!^K"
1396:     -	0800  28      	    defb 00101000b
1397:     -	0801  00      	    defb 00000000b
1398:     -	0802  10      	    defb 00010000b
1399:     -	0803  10      	    defb 00010000b
1400:     -	0804  10      	    defb 00010000b
1401:     -	0805  10      	    defb 00010000b
1402:     -	0806  18      	    defb 00011000b
1403:     -	0807  00      	    defb 00000000b
1404:				
1405:				    ; code=140, hex=0x8C, ascii="!^L"
1406:     -	0808  10      	    defb 00010000b
1407:     -	0809  28      	    defb 00101000b
1408:     -	080A  00      	    defb 00000000b
1409:     -	080B  10      	    defb 00010000b
1410:     -	080C  10      	    defb 00010000b
1411:     -	080D  10      	    defb 00010000b
1412:     -	080E  18      	    defb 00011000b
1413:     -	080F  00      	    defb 00000000b
1414:				
1415:				    ; code=141, hex=0x8D, ascii="!^M"
1416:     -	0810  20      	    defb 00100000b
1417:     -	0811  00      	    defb 00000000b
1418:     -	0812  10      	    defb 00010000b
1419:     -	0813  10      	    defb 00010000b
1420:     -	0814  10      	    defb 00010000b
1421:     -	0815  10      	    defb 00010000b
1422:     -	0816  18      	    defb 00011000b
1423:     -	0817  00      	    defb 00000000b
1424:				
1425:				    ; code=142, hex=0x8E, ascii="!^N"
1426:     -	0818  28      	    defb 00101000b
1427:     -	0819  00      	    defb 00000000b
1428:     -	081A  10      	    defb 00010000b
1429:     -	081B  28      	    defb 00101000b
1430:     -	081C  44      	    defb 01000100b
1431:     -	081D  7C      	    defb 01111100b
1432:     -	081E  44      	    defb 01000100b
1433:     -	081F  00      	    defb 00000000b
1434:				
1435:				    ; code=143, hex=0x8F, ascii="!^O"
1436:     -	0820  38      	    defb 00111000b
1437:     -	0821  28      	    defb 00101000b
1438:     -	0822  38      	    defb 00111000b
1439:     -	0823  6C      	    defb 01101100b
1440:     -	0824  44      	    defb 01000100b
1441:     -	0825  7C      	    defb 01111100b
1442:     -	0826  44      	    defb 01000100b
1443:     -	0827  00      	    defb 00000000b
1444:				
1445:				    ; code=144, hex=0x90, ascii="!^P"
1446:     -	0828  0C      	    defb 00001100b
1447:     -	0829  00      	    defb 00000000b
1448:     -	082A  7C      	    defb 01111100b
1449:     -	082B  40      	    defb 01000000b
1450:     -	082C  78      	    defb 01111000b
1451:     -	082D  40      	    defb 01000000b
1452:     -	082E  7C      	    defb 01111100b
1453:     -	082F  00      	    defb 00000000b
1454:				
1455:				    ; code=145, hex=0x91, ascii="!^Q"
1456:     -	0830  00      	    defb 00000000b
1457:     -	0831  00      	    defb 00000000b
1458:     -	0832  78      	    defb 01111000b
1459:     -	0833  14      	    defb 00010100b
1460:     -	0834  7C      	    defb 01111100b
1461:     -	0835  50      	    defb 01010000b
1462:     -	0836  3C      	    defb 00111100b
1463:     -	0837  00      	    defb 00000000b
1464:				
1465:				    ; code=146, hex=0x92, ascii="!^R"
1466:     -	0838  3C      	    defb 00111100b
1467:     -	0839  50      	    defb 01010000b
1468:     -	083A  50      	    defb 01010000b
1469:     -	083B  7C      	    defb 01111100b
1470:     -	083C  50      	    defb 01010000b
1471:     -	083D  50      	    defb 01010000b
1472:     -	083E  5C      	    defb 01011100b
1473:     -	083F  00      	    defb 00000000b
1474:				
1475:				    ; code=147, hex=0x93, ascii="!^S"
1476:     -	0840  38      	    defb 00111000b
1477:     -	0841  00      	    defb 00000000b
1478:     -	0842  30      	    defb 00110000b
1479:     -	0843  48      	    defb 01001000b
1480:     -	0844  48      	    defb 01001000b
1481:     -	0845  48      	    defb 01001000b
1482:     -	0846  30      	    defb 00110000b
1483:     -	0847  00      	    defb 00000000b
1484:				
1485:				    ; code=148, hex=0x94, ascii="!^T"
1486:     -	0848  28      	    defb 00101000b
1487:     -	0849  00      	    defb 00000000b
1488:     -	084A  30      	    defb 00110000b
1489:     -	084B  48      	    defb 01001000b
1490:     -	084C  48      	    defb 01001000b
1491:     -	084D  48      	    defb 01001000b
1492:     -	084E  30      	    defb 00110000b
1493:     -	084F  00      	    defb 00000000b
1494:				
1495:				    ; code=149, hex=0x95, ascii="!^U"
1496:     -	0850  60      	    defb 01100000b
1497:     -	0851  00      	    defb 00000000b
1498:     -	0852  30      	    defb 00110000b
1499:     -	0853  48      	    defb 01001000b
1500:     -	0854  48      	    defb 01001000b
1501:     -	0855  48      	    defb 01001000b
1502:     -	0856  30      	    defb 00110000b
1503:     -	0857  00      	    defb 00000000b
1504:				
1505:				    ; code=150, hex=0x96, ascii="!^V"
1506:     -	0858  38      	    defb 00111000b
1507:     -	0859  00      	    defb 00000000b
1508:     -	085A  48      	    defb 01001000b
1509:     -	085B  48      	    defb 01001000b
1510:     -	085C  48      	    defb 01001000b
1511:     -	085D  58      	    defb 01011000b
1512:     -	085E  28      	    defb 00101000b
1513:     -	085F  00      	    defb 00000000b
1514:				
1515:				    ; code=151, hex=0x97, ascii="!^W"
1516:     -	0860  60      	    defb 01100000b
1517:     -	0861  00      	    defb 00000000b
1518:     -	0862  48      	    defb 01001000b
1519:     -	0863  48      	    defb 01001000b
1520:     -	0864  48      	    defb 01001000b
1521:     -	0865  58      	    defb 01011000b
1522:     -	0866  28      	    defb 00101000b
1523:     -	0867  00      	    defb 00000000b
1524:				
1525:				    ; code=152, hex=0x98, ascii="!^X"
1526:     -	0868  28      	    defb 00101000b
1527:     -	0869  00      	    defb 00000000b
1528:     -	086A  48      	    defb 01001000b
1529:     -	086B  48      	    defb 01001000b
1530:     -	086C  48      	    defb 01001000b
1531:     -	086D  38      	    defb 00111000b
1532:     -	086E  10      	    defb 00010000b
1533:     -	086F  60      	    defb 01100000b
1534:				
1535:				    ; code=153, hex=0x99, ascii="!^Y"
1536:     -	0870  48      	    defb 01001000b
1537:     -	0871  30      	    defb 00110000b
1538:     -	0872  48      	    defb 01001000b
1539:     -	0873  48      	    defb 01001000b
1540:     -	0874  48      	    defb 01001000b
1541:     -	0875  48      	    defb 01001000b
1542:     -	0876  30      	    defb 00110000b
1543:     -	0877  00      	    defb 00000000b
1544:				
1545:				    ; code=154, hex=0x9A, ascii="!^Z"
1546:     -	0878  28      	    defb 00101000b
1547:     -	0879  00      	    defb 00000000b
1548:     -	087A  48      	    defb 01001000b
1549:     -	087B  48      	    defb 01001000b
1550:     -	087C  48      	    defb 01001000b
1551:     -	087D  48      	    defb 01001000b
1552:     -	087E  30      	    defb 00110000b
1553:     -	087F  00      	    defb 00000000b
1554:				
1555:				    ; code=155, hex=0x9B, ascii="!^["
1556:     -	0880  00      	    defb 00000000b
1557:     -	0881  10      	    defb 00010000b
1558:     -	0882  38      	    defb 00111000b
1559:     -	0883  40      	    defb 01000000b
1560:     -	0884  40      	    defb 01000000b
1561:     -	0885  38      	    defb 00111000b
1562:     -	0886  10      	    defb 00010000b
1563:     -	0887  00      	    defb 00000000b
1564:				
1565:				    ; code=156, hex=0x9C, ascii="!^\"
1566:     -	0888  18      	    defb 00011000b
1567:     -	0889  24      	    defb 00100100b
1568:     -	088A  20      	    defb 00100000b
1569:     -	088B  78      	    defb 01111000b
1570:     -	088C  20      	    defb 00100000b
1571:     -	088D  24      	    defb 00100100b
1572:     -	088E  5C      	    defb 01011100b
1573:     -	088F  00      	    defb 00000000b
1574:				
1575:				    ; code=157, hex=0x9D, ascii="!^]"
1576:     -	0890  44      	    defb 01000100b
1577:     -	0891  28      	    defb 00101000b
1578:     -	0892  10      	    defb 00010000b
1579:     -	0893  7C      	    defb 01111100b
1580:     -	0894  10      	    defb 00010000b
1581:     -	0895  7C      	    defb 01111100b
1582:     -	0896  10      	    defb 00010000b
1583:     -	0897  00      	    defb 00000000b
1584:				
1585:				    ; code=158, hex=0x9E, ascii="!^^"
1586:     -	0898  60      	    defb 01100000b
1587:     -	0899  50      	    defb 01010000b
1588:     -	089A  50      	    defb 01010000b
1589:     -	089B  68      	    defb 01101000b
1590:     -	089C  5C      	    defb 01011100b
1591:     -	089D  48      	    defb 01001000b
1592:     -	089E  48      	    defb 01001000b
1593:     -	089F  00      	    defb 00000000b
1594:				
1595:				    ; code=159, hex=0x9F, ascii="!^_"
1596:     -	08A0  08      	    defb 00001000b
1597:     -	08A1  14      	    defb 00010100b
1598:     -	08A2  10      	    defb 00010000b
1599:     -	08A3  38      	    defb 00111000b
1600:     -	08A4  10      	    defb 00010000b
1601:     -	08A5  10      	    defb 00010000b
1602:     -	08A6  50      	    defb 01010000b
1603:     -	08A7  20      	    defb 00100000b
1604:				
1605:				    ; code=160, hex=0xA0, ascii="! "
1606:     -	08A8  18      	    defb 00011000b
1607:     -	08A9  00      	    defb 00000000b
1608:     -	08AA  38      	    defb 00111000b
1609:     -	08AB  04      	    defb 00000100b
1610:     -	08AC  3C      	    defb 00111100b
1611:     -	08AD  44      	    defb 01000100b
1612:     -	08AE  3C      	    defb 00111100b
1613:     -	08AF  00      	    defb 00000000b
1614:				
1615:				    ; code=161, hex=0xA1, ascii="!!"
1616:     -	08B0  18      	    defb 00011000b
1617:     -	08B1  00      	    defb 00000000b
1618:     -	08B2  10      	    defb 00010000b
1619:     -	08B3  10      	    defb 00010000b
1620:     -	08B4  10      	    defb 00010000b
1621:     -	08B5  10      	    defb 00010000b
1622:     -	08B6  18      	    defb 00011000b
1623:     -	08B7  00      	    defb 00000000b
1624:				
1625:				    ; code=162, hex=0xA2, ascii="!""
1626:     -	08B8  18      	    defb 00011000b
1627:     -	08B9  00      	    defb 00000000b
1628:     -	08BA  30      	    defb 00110000b
1629:     -	08BB  48      	    defb 01001000b
1630:     -	08BC  48      	    defb 01001000b
1631:     -	08BD  48      	    defb 01001000b
1632:     -	08BE  30      	    defb 00110000b
1633:     -	08BF  00      	    defb 00000000b
1634:				
1635:				    ; code=163, hex=0xA3, ascii="!#"
1636:     -	08C0  18      	    defb 00011000b
1637:     -	08C1  00      	    defb 00000000b
1638:     -	08C2  48      	    defb 01001000b
1639:     -	08C3  48      	    defb 01001000b
1640:     -	08C4  48      	    defb 01001000b
1641:     -	08C5  58      	    defb 01011000b
1642:     -	08C6  28      	    defb 00101000b
1643:     -	08C7  00      	    defb 00000000b
1644:				
1645:				    ; code=164, hex=0xA4, ascii="!$"
1646:     -	08C8  28      	    defb 00101000b
1647:     -	08C9  50      	    defb 01010000b
1648:     -	08CA  00      	    defb 00000000b
1649:     -	08CB  70      	    defb 01110000b
1650:     -	08CC  48      	    defb 01001000b
1651:     -	08CD  48      	    defb 01001000b
1652:     -	08CE  48      	    defb 01001000b
1653:     -	08CF  00      	    defb 00000000b
1654:				
1655:				    ; code=165, hex=0xA5, ascii="!"
1656:     -	08D0  28      	    defb 00101000b
1657:     -	08D1  50      	    defb 01010000b
1658:     -	08D2  00      	    defb 00000000b
1659:     -	08D3  48      	    defb 01001000b
1660:     -	08D4  68      	    defb 01101000b
1661:     -	08D5  58      	    defb 01011000b
1662:     -	08D6  48      	    defb 01001000b
1663:     -	08D7  00      	    defb 00000000b
1664:				
1665:				    ; code=166, hex=0xA6, ascii="!&"
1666:     -	08D8  38      	    defb 00111000b
1667:     -	08D9  04      	    defb 00000100b
1668:     -	08DA  3C      	    defb 00111100b
1669:     -	08DB  44      	    defb 01000100b
1670:     -	08DC  3C      	    defb 00111100b
1671:     -	08DD  00      	    defb 00000000b
1672:     -	08DE  3C      	    defb 00111100b
1673:     -	08DF  00      	    defb 00000000b
1674:				
1675:				    ; code=167, hex=0xA7, ascii="!'"
1676:     -	08E0  30      	    defb 00110000b
1677:     -	08E1  48      	    defb 01001000b
1678:     -	08E2  48      	    defb 01001000b
1679:     -	08E3  48      	    defb 01001000b
1680:     -	08E4  30      	    defb 00110000b
1681:     -	08E5  00      	    defb 00000000b
1682:     -	08E6  78      	    defb 01111000b
1683:     -	08E7  00      	    defb 00000000b
1684:				
1685:				    ; code=168, hex=0xA8, ascii="!("
1686:     -	08E8  10      	    defb 00010000b
1687:     -	08E9  00      	    defb 00000000b
1688:     -	08EA  10      	    defb 00010000b
1689:     -	08EB  30      	    defb 00110000b
1690:     -	08EC  40      	    defb 01000000b
1691:     -	08ED  44      	    defb 01000100b
1692:     -	08EE  38      	    defb 00111000b
1693:     -	08EF  00      	    defb 00000000b
1694:				
1695:				    ; code=169, hex=0xA9, ascii="!)"
1696:     -	08F0  00      	    defb 00000000b
1697:     -	08F1  00      	    defb 00000000b
1698:     -	08F2  7C      	    defb 01111100b
1699:     -	08F3  40      	    defb 01000000b
1700:     -	08F4  40      	    defb 01000000b
1701:     -	08F5  40      	    defb 01000000b
1702:     -	08F6  00      	    defb 00000000b
1703:     -	08F7  00      	    defb 00000000b
1704:				
1705:				    ; code=170, hex=0xAA, ascii="!*"
1706:     -	08F8  00      	    defb 00000000b
1707:     -	08F9  00      	    defb 00000000b
1708:     -	08FA  FC      	    defb 11111100b
1709:     -	08FB  04      	    defb 00000100b
1710:     -	08FC  04      	    defb 00000100b
1711:     -	08FD  00      	    defb 00000000b
1712:     -	08FE  00      	    defb 00000000b
1713:     -	08FF  00      	    defb 00000000b
1714:				
1715:				    ; code=171, hex=0xAB, ascii="!+"
1716:     -	0900  40      	    defb 01000000b
1717:     -	0901  48      	    defb 01001000b
1718:     -	0902  50      	    defb 01010000b
1719:     -	0903  38      	    defb 00111000b
1720:     -	0904  44      	    defb 01000100b
1721:     -	0905  08      	    defb 00001000b
1722:     -	0906  1C      	    defb 00011100b
1723:     -	0907  00      	    defb 00000000b
1724:				
1725:				    ; code=172, hex=0xAC, ascii="!,"
1726:     -	0908  40      	    defb 01000000b
1727:     -	0909  48      	    defb 01001000b
1728:     -	090A  50      	    defb 01010000b
1729:     -	090B  2C      	    defb 00101100b
1730:     -	090C  54      	    defb 01010100b
1731:     -	090D  1C      	    defb 00011100b
1732:     -	090E  04      	    defb 00000100b
1733:     -	090F  00      	    defb 00000000b
1734:				
1735:				    ; code=173, hex=0xAD, ascii="!-"
1736:     -	0910  10      	    defb 00010000b
1737:     -	0911  00      	    defb 00000000b
1738:     -	0912  10      	    defb 00010000b
1739:     -	0913  10      	    defb 00010000b
1740:     -	0914  38      	    defb 00111000b
1741:     -	0915  38      	    defb 00111000b
1742:     -	0916  10      	    defb 00010000b
1743:     -	0917  00      	    defb 00000000b
1744:				
1745:				    ; code=174, hex=0xAE, ascii="!."
1746:     -	0918  00      	    defb 00000000b
1747:     -	0919  00      	    defb 00000000b
1748:     -	091A  24      	    defb 00100100b
1749:     -	091B  48      	    defb 01001000b
1750:     -	091C  24      	    defb 00100100b
1751:     -	091D  00      	    defb 00000000b
1752:     -	091E  00      	    defb 00000000b
1753:     -	091F  00      	    defb 00000000b
1754:				
1755:				    ; code=175, hex=0xAF, ascii="!/"
1756:     -	0920  00      	    defb 00000000b
1757:     -	0921  00      	    defb 00000000b
1758:     -	0922  48      	    defb 01001000b
1759:     -	0923  24      	    defb 00100100b
1760:     -	0924  48      	    defb 01001000b
1761:     -	0925  00      	    defb 00000000b
1762:     -	0926  00      	    defb 00000000b
1763:     -	0927  00      	    defb 00000000b
1764:				
1765:				    ; code=176, hex=0xB0, ascii="!0"
1766:     -	0928  54      	    defb 01010100b
1767:     -	0929  00      	    defb 00000000b
1768:     -	092A  A8      	    defb 10101000b
1769:     -	092B  00      	    defb 00000000b
1770:     -	092C  54      	    defb 01010100b
1771:     -	092D  00      	    defb 00000000b
1772:     -	092E  A8      	    defb 10101000b
1773:     -	092F  00      	    defb 00000000b
1774:				
1775:				    ; code=177, hex=0xB1, ascii="!1"
1776:     -	0930  54      	    defb 01010100b
1777:     -	0931  A8      	    defb 10101000b
1778:     -	0932  54      	    defb 01010100b
1779:     -	0933  A8      	    defb 10101000b
1780:     -	0934  54      	    defb 01010100b
1781:     -	0935  A8      	    defb 10101000b
1782:     -	0936  54      	    defb 01010100b
1783:     -	0937  A8      	    defb 10101000b
1784:				
1785:				    ; code=178, hex=0xB2, ascii="!2"
1786:     -	0938  A8      	    defb 10101000b
1787:     -	0939  FC      	    defb 11111100b
1788:     -	093A  54      	    defb 01010100b
1789:     -	093B  FC      	    defb 11111100b
1790:     -	093C  A8      	    defb 10101000b
1791:     -	093D  FC      	    defb 11111100b
1792:     -	093E  54      	    defb 01010100b
1793:     -	093F  FC      	    defb 11111100b
1794:				
1795:				    ; code=180, hex=0xB4, ascii="!4"
1796:     -	0940  10      	    defb 00010000b
1797:     -	0941  10      	    defb 00010000b
1798:     -	0942  10      	    defb 00010000b
1799:     -	0943  F0      	    defb 11110000b
1800:     -	0944  10      	    defb 00010000b
1801:     -	0945  10      	    defb 00010000b
1802:     -	0946  10      	    defb 00010000b
1803:     -	0947  10      	    defb 00010000b
1804:				
1805:				    ; code=181, hex=0xB5, ascii="!5"
1806:     -	0948  10      	    defb 00010000b
1807:     -	0949  F0      	    defb 11110000b
1808:     -	094A  10      	    defb 00010000b
1809:     -	094B  F0      	    defb 11110000b
1810:     -	094C  10      	    defb 00010000b
1811:     -	094D  10      	    defb 00010000b
1812:     -	094E  10      	    defb 00010000b
1813:     -	094F  10      	    defb 00010000b
1814:				
1815:				    ; code=182, hex=0xB6, ascii="!6"
1816:     -	0950  50      	    defb 01010000b
1817:     -	0951  50      	    defb 01010000b
1818:     -	0952  50      	    defb 01010000b
1819:     -	0953  D0      	    defb 11010000b
1820:     -	0954  50      	    defb 01010000b
1821:     -	0955  50      	    defb 01010000b
1822:     -	0956  50      	    defb 01010000b
1823:     -	0957  50      	    defb 01010000b
1824:				
1825:				    ; code=183, hex=0xB7, ascii="!7"
1826:     -	0958  00      	    defb 00000000b
1827:     -	0959  00      	    defb 00000000b
1828:     -	095A  00      	    defb 00000000b
1829:     -	095B  F0      	    defb 11110000b
1830:     -	095C  50      	    defb 01010000b
1831:     -	095D  50      	    defb 01010000b
1832:     -	095E  50      	    defb 01010000b
1833:     -	095F  50      	    defb 01010000b
1834:				
1835:				    ; code=184, hex=0xB8, ascii="!8"
1836:     -	0960  00      	    defb 00000000b
1837:     -	0961  F0      	    defb 11110000b
1838:     -	0962  10      	    defb 00010000b
1839:     -	0963  F0      	    defb 11110000b
1840:     -	0964  10      	    defb 00010000b
1841:     -	0965  10      	    defb 00010000b
1842:     -	0966  10      	    defb 00010000b
1843:     -	0967  10      	    defb 00010000b
1844:				
1845:				    ; code=185, hex=0xB9, ascii="!9"
1846:     -	0968  50      	    defb 01010000b
1847:     -	0969  D0      	    defb 11010000b
1848:     -	096A  10      	    defb 00010000b
1849:     -	096B  D0      	    defb 11010000b
1850:     -	096C  50      	    defb 01010000b
1851:     -	096D  50      	    defb 01010000b
1852:     -	096E  50      	    defb 01010000b
1853:     -	096F  50      	    defb 01010000b
1854:				
1855:				    ; code=186, hex=0xBA, ascii="!:"
1856:     -	0970  50      	    defb 01010000b
1857:     -	0971  50      	    defb 01010000b
1858:     -	0972  50      	    defb 01010000b
1859:     -	0973  50      	    defb 01010000b
1860:     -	0974  50      	    defb 01010000b
1861:     -	0975  50      	    defb 01010000b
1862:     -	0976  50      	    defb 01010000b
1863:     -	0977  50      	    defb 01010000b
1864:				
1865:				    ; code=187, hex=0xBB, ascii="!;"
1866:     -	0978  00      	    defb 00000000b
1867:     -	0979  F0      	    defb 11110000b
1868:     -	097A  10      	    defb 00010000b
1869:     -	097B  D0      	    defb 11010000b
1870:     -	097C  50      	    defb 01010000b
1871:     -	097D  50      	    defb 01010000b
1872:     -	097E  50      	    defb 01010000b
1873:     -	097F  50      	    defb 01010000b
1874:				
1875:				    ; code=188, hex=0xBC, ascii="!<"
1876:     -	0980  50      	    defb 01010000b
1877:     -	0981  D0      	    defb 11010000b
1878:     -	0982  10      	    defb 00010000b
1879:     -	0983  F0      	    defb 11110000b
1880:     -	0984  00      	    defb 00000000b
1881:     -	0985  00      	    defb 00000000b
1882:     -	0986  00      	    defb 00000000b
1883:     -	0987  00      	    defb 00000000b
1884:				
1885:				    ; code=189, hex=0xBD, ascii="!="
1886:     -	0988  50      	    defb 01010000b
1887:     -	0989  50      	    defb 01010000b
1888:     -	098A  50      	    defb 01010000b
1889:     -	098B  F0      	    defb 11110000b
1890:     -	098C  00      	    defb 00000000b
1891:     -	098D  00      	    defb 00000000b
1892:     -	098E  00      	    defb 00000000b
1893:     -	098F  00      	    defb 00000000b
1894:				
1895:				    ; code=190, hex=0xBE, ascii="!>"
1896:     -	0990  10      	    defb 00010000b
1897:     -	0991  F0      	    defb 11110000b
1898:     -	0992  10      	    defb 00010000b
1899:     -	0993  F0      	    defb 11110000b
1900:     -	0994  00      	    defb 00000000b
1901:     -	0995  00      	    defb 00000000b
1902:     -	0996  00      	    defb 00000000b
1903:     -	0997  00      	    defb 00000000b
1904:				
1905:				    ; code=191, hex=0xBF, ascii="!?"
1906:     -	0998  00      	    defb 00000000b
1907:     -	0999  00      	    defb 00000000b
1908:     -	099A  00      	    defb 00000000b
1909:     -	099B  F0      	    defb 11110000b
1910:     -	099C  10      	    defb 00010000b
1911:     -	099D  10      	    defb 00010000b
1912:     -	099E  10      	    defb 00010000b
1913:     -	099F  10      	    defb 00010000b
1914:				
1915:				    ; code=192, hex=0xC0, ascii="!@"
1916:     -	09A0  10      	    defb 00010000b
1917:     -	09A1  10      	    defb 00010000b
1918:     -	09A2  10      	    defb 00010000b
1919:     -	09A3  1C      	    defb 00011100b
1920:     -	09A4  00      	    defb 00000000b
1921:     -	09A5  00      	    defb 00000000b
1922:     -	09A6  00      	    defb 00000000b
1923:     -	09A7  00      	    defb 00000000b
1924:				
1925:				    ; code=193, hex=0xC1, ascii="!A"
1926:     -	09A8  10      	    defb 00010000b
1927:     -	09A9  10      	    defb 00010000b
1928:     -	09AA  10      	    defb 00010000b
1929:     -	09AB  FC      	    defb 11111100b
1930:     -	09AC  00      	    defb 00000000b
1931:     -	09AD  00      	    defb 00000000b
1932:     -	09AE  00      	    defb 00000000b
1933:     -	09AF  00      	    defb 00000000b
1934:				
1935:				    ; code=194, hex=0xC2, ascii="!B"
1936:     -	09B0  00      	    defb 00000000b
1937:     -	09B1  00      	    defb 00000000b
1938:     -	09B2  00      	    defb 00000000b
1939:     -	09B3  FC      	    defb 11111100b
1940:     -	09B4  10      	    defb 00010000b
1941:     -	09B5  10      	    defb 00010000b
1942:     -	09B6  10      	    defb 00010000b
1943:     -	09B7  10      	    defb 00010000b
1944:				
1945:				    ; code=195, hex=0xC3, ascii="!C"
1946:     -	09B8  10      	    defb 00010000b
1947:     -	09B9  10      	    defb 00010000b
1948:     -	09BA  10      	    defb 00010000b
1949:     -	09BB  1C      	    defb 00011100b
1950:     -	09BC  10      	    defb 00010000b
1951:     -	09BD  10      	    defb 00010000b
1952:     -	09BE  10      	    defb 00010000b
1953:     -	09BF  10      	    defb 00010000b
1954:				
1955:				    ; code=196, hex=0xC4, ascii="!D"
1956:     -	09C0  00      	    defb 00000000b
1957:     -	09C1  00      	    defb 00000000b
1958:     -	09C2  00      	    defb 00000000b
1959:     -	09C3  FC      	    defb 11111100b
1960:     -	09C4  00      	    defb 00000000b
1961:     -	09C5  00      	    defb 00000000b
1962:     -	09C6  00      	    defb 00000000b
1963:     -	09C7  00      	    defb 00000000b
1964:				
1965:				    ; code=197, hex=0xC5, ascii="!E"
1966:     -	09C8  10      	    defb 00010000b
1967:     -	09C9  10      	    defb 00010000b
1968:     -	09CA  10      	    defb 00010000b
1969:     -	09CB  FC      	    defb 11111100b
1970:     -	09CC  10      	    defb 00010000b
1971:     -	09CD  10      	    defb 00010000b
1972:     -	09CE  10      	    defb 00010000b
1973:     -	09CF  10      	    defb 00010000b
1974:				
1975:				    ; code=198, hex=0xC6, ascii="!F"
1976:     -	09D0  10      	    defb 00010000b
1977:     -	09D1  1C      	    defb 00011100b
1978:     -	09D2  10      	    defb 00010000b
1979:     -	09D3  1C      	    defb 00011100b
1980:     -	09D4  10      	    defb 00010000b
1981:     -	09D5  10      	    defb 00010000b
1982:     -	09D6  10      	    defb 00010000b
1983:     -	09D7  10      	    defb 00010000b
1984:				
1985:				    ; code=199, hex=0xC7, ascii="!G"
1986:     -	09D8  50      	    defb 01010000b
1987:     -	09D9  50      	    defb 01010000b
1988:     -	09DA  50      	    defb 01010000b
1989:     -	09DB  5C      	    defb 01011100b
1990:     -	09DC  50      	    defb 01010000b
1991:     -	09DD  50      	    defb 01010000b
1992:     -	09DE  50      	    defb 01010000b
1993:     -	09DF  50      	    defb 01010000b
1994:				
1995:				    ; code=200, hex=0xC8, ascii="!H"
1996:     -	09E0  50      	    defb 01010000b
1997:     -	09E1  5C      	    defb 01011100b
1998:     -	09E2  40      	    defb 01000000b
1999:     -	09E3  7C      	    defb 01111100b
2000:     -	09E4  00      	    defb 00000000b
2001:     -	09E5  00      	    defb 00000000b
2002:     -	09E6  00      	    defb 00000000b
2003:     -	09E7  00      	    defb 00000000b
2004:				
2005:				    ; code=201, hex=0xC9, ascii="!I"
2006:     -	09E8  00      	    defb 00000000b
2007:     -	09E9  7C      	    defb 01111100b
2008:     -	09EA  40      	    defb 01000000b
2009:     -	09EB  5C      	    defb 01011100b
2010:     -	09EC  50      	    defb 01010000b
2011:     -	09ED  50      	    defb 01010000b
2012:     -	09EE  50      	    defb 01010000b
2013:     -	09EF  50      	    defb 01010000b
2014:				
2015:				    ; code=202, hex=0xCA, ascii="!J"
2016:     -	09F0  50      	    defb 01010000b
2017:     -	09F1  DC      	    defb 11011100b
2018:     -	09F2  00      	    defb 00000000b
2019:     -	09F3  FC      	    defb 11111100b
2020:     -	09F4  00      	    defb 00000000b
2021:     -	09F5  00      	    defb 00000000b
2022:     -	09F6  00      	    defb 00000000b
2023:     -	09F7  00      	    defb 00000000b
2024:				
2025:				    ; code=203, hex=0xCB, ascii="!K"
2026:     -	09F8  00      	    defb 00000000b
2027:     -	09F9  FC      	    defb 11111100b
2028:     -	09FA  00      	    defb 00000000b
2029:     -	09FB  DC      	    defb 11011100b
2030:     -	09FC  50      	    defb 01010000b
2031:     -	09FD  50      	    defb 01010000b
2032:     -	09FE  50      	    defb 01010000b
2033:     -	09FF  50      	    defb 01010000b
2034:				
2035:				    ; code=204, hex=0xCC, ascii="!L"
2036:     -	0A00  50      	    defb 01010000b
2037:     -	0A01  5C      	    defb 01011100b
2038:     -	0A02  40      	    defb 01000000b
2039:     -	0A03  5C      	    defb 01011100b
2040:     -	0A04  50      	    defb 01010000b
2041:     -	0A05  50      	    defb 01010000b
2042:     -	0A06  50      	    defb 01010000b
2043:     -	0A07  50      	    defb 01010000b
2044:				
2045:				    ; code=205, hex=0xCD, ascii="!M"
2046:     -	0A08  00      	    defb 00000000b
2047:     -	0A09  FC      	    defb 11111100b
2048:     -	0A0A  00      	    defb 00000000b
2049:     -	0A0B  FC      	    defb 11111100b
2050:     -	0A0C  00      	    defb 00000000b
2051:     -	0A0D  00      	    defb 00000000b
2052:     -	0A0E  00      	    defb 00000000b
2053:     -	0A0F  00      	    defb 00000000b
2054:				
2055:				    ; code=206, hex=0xCE, ascii="!N"
2056:     -	0A10  50      	    defb 01010000b
2057:     -	0A11  DC      	    defb 11011100b
2058:     -	0A12  00      	    defb 00000000b
2059:     -	0A13  DC      	    defb 11011100b
2060:     -	0A14  50      	    defb 01010000b
2061:     -	0A15  50      	    defb 01010000b
2062:     -	0A16  50      	    defb 01010000b
2063:     -	0A17  50      	    defb 01010000b
2064:				
2065:				    ; code=207, hex=0xCF, ascii="!O"
2066:     -	0A18  10      	    defb 00010000b
2067:     -	0A19  FC      	    defb 11111100b
2068:     -	0A1A  00      	    defb 00000000b
2069:     -	0A1B  FC      	    defb 11111100b
2070:     -	0A1C  00      	    defb 00000000b
2071:     -	0A1D  00      	    defb 00000000b
2072:     -	0A1E  00      	    defb 00000000b
2073:     -	0A1F  00      	    defb 00000000b
2074:				
2075:				    ; code=208, hex=0xD0, ascii="!P"
2076:     -	0A20  50      	    defb 01010000b
2077:     -	0A21  50      	    defb 01010000b
2078:     -	0A22  50      	    defb 01010000b
2079:     -	0A23  FC      	    defb 11111100b
2080:     -	0A24  00      	    defb 00000000b
2081:     -	0A25  00      	    defb 00000000b
2082:     -	0A26  00      	    defb 00000000b
2083:     -	0A27  00      	    defb 00000000b
2084:				
2085:				    ; code=209, hex=0xD1, ascii="!Q"
2086:     -	0A28  00      	    defb 00000000b
2087:     -	0A29  FC      	    defb 11111100b
2088:     -	0A2A  00      	    defb 00000000b
2089:     -	0A2B  FC      	    defb 11111100b
2090:     -	0A2C  10      	    defb 00010000b
2091:     -	0A2D  10      	    defb 00010000b
2092:     -	0A2E  10      	    defb 00010000b
2093:     -	0A2F  10      	    defb 00010000b
2094:				
2095:				    ; code=210, hex=0xD2, ascii="!R"
2096:     -	0A30  00      	    defb 00000000b
2097:     -	0A31  00      	    defb 00000000b
2098:     -	0A32  00      	    defb 00000000b
2099:     -	0A33  FC      	    defb 11111100b
2100:     -	0A34  50      	    defb 01010000b
2101:     -	0A35  50      	    defb 01010000b
2102:     -	0A36  50      	    defb 01010000b
2103:     -	0A37  50      	    defb 01010000b
2104:				
2105:				    ; code=211, hex=0xD3, ascii="!S"
2106:     -	0A38  50      	    defb 01010000b
2107:     -	0A39  50      	    defb 01010000b
2108:     -	0A3A  50      	    defb 01010000b
2109:     -	0A3B  7C      	    defb 01111100b
2110:     -	0A3C  00      	    defb 00000000b
2111:     -	0A3D  00      	    defb 00000000b
2112:     -	0A3E  00      	    defb 00000000b
2113:     -	0A3F  00      	    defb 00000000b
2114:				
2115:				    ; code=212, hex=0xD4, ascii="!T"
2116:     -	0A40  10      	    defb 00010000b
2117:     -	0A41  1C      	    defb 00011100b
2118:     -	0A42  10      	    defb 00010000b
2119:     -	0A43  1C      	    defb 00011100b
2120:     -	0A44  00      	    defb 00000000b
2121:     -	0A45  00      	    defb 00000000b
2122:     -	0A46  00      	    defb 00000000b
2123:     -	0A47  00      	    defb 00000000b
2124:				
2125:				    ; code=213, hex=0xD5, ascii="!U"
2126:     -	0A48  00      	    defb 00000000b
2127:     -	0A49  1C      	    defb 00011100b
2128:     -	0A4A  10      	    defb 00010000b
2129:     -	0A4B  1C      	    defb 00011100b
2130:     -	0A4C  10      	    defb 00010000b
2131:     -	0A4D  10      	    defb 00010000b
2132:     -	0A4E  10      	    defb 00010000b
2133:     -	0A4F  10      	    defb 00010000b
2134:				
2135:				    ; code=214, hex=0xD6, ascii="!V"
2136:     -	0A50  00      	    defb 00000000b
2137:     -	0A51  00      	    defb 00000000b
2138:     -	0A52  00      	    defb 00000000b
2139:     -	0A53  7C      	    defb 01111100b
2140:     -	0A54  50      	    defb 01010000b
2141:     -	0A55  50      	    defb 01010000b
2142:     -	0A56  50      	    defb 01010000b
2143:     -	0A57  50      	    defb 01010000b
2144:				
2145:				    ; code=215, hex=0xD7, ascii="!W"
2146:     -	0A58  50      	    defb 01010000b
2147:     -	0A59  50      	    defb 01010000b
2148:     -	0A5A  50      	    defb 01010000b
2149:     -	0A5B  DC      	    defb 11011100b
2150:     -	0A5C  50      	    defb 01010000b
2151:     -	0A5D  50      	    defb 01010000b
2152:     -	0A5E  50      	    defb 01010000b
2153:     -	0A5F  50      	    defb 01010000b
2154:				
2155:				    ; code=216, hex=0xD8, ascii="!X"
2156:     -	0A60  10      	    defb 00010000b
2157:     -	0A61  FC      	    defb 11111100b
2158:     -	0A62  00      	    defb 00000000b
2159:     -	0A63  FC      	    defb 11111100b
2160:     -	0A64  10      	    defb 00010000b
2161:     -	0A65  10      	    defb 00010000b
2162:     -	0A66  10      	    defb 00010000b
2163:     -	0A67  10      	    defb 00010000b
2164:				
2165:				    ; code=217, hex=0xD9, ascii="!Y"
2166:     -	0A68  10      	    defb 00010000b
2167:     -	0A69  10      	    defb 00010000b
2168:     -	0A6A  10      	    defb 00010000b
2169:     -	0A6B  F0      	    defb 11110000b
2170:     -	0A6C  00      	    defb 00000000b
2171:     -	0A6D  00      	    defb 00000000b
2172:     -	0A6E  00      	    defb 00000000b
2173:     -	0A6F  00      	    defb 00000000b
2174:				
2175:				    ; code=218, hex=0xDA, ascii="!Z"
2176:     -	0A70  00      	    defb 00000000b
2177:     -	0A71  00      	    defb 00000000b
2178:     -	0A72  00      	    defb 00000000b
2179:     -	0A73  1C      	    defb 00011100b
2180:     -	0A74  10      	    defb 00010000b
2181:     -	0A75  10      	    defb 00010000b
2182:     -	0A76  10      	    defb 00010000b
2183:     -	0A77  10      	    defb 00010000b
2184:				
2185:				    ; code=219, hex=0xDB, ascii="!["
2186:     -	0A78  FC      	    defb 11111100b
2187:     -	0A79  FC      	    defb 11111100b
2188:     -	0A7A  FC      	    defb 11111100b
2189:     -	0A7B  FC      	    defb 11111100b
2190:     -	0A7C  FC      	    defb 11111100b
2191:     -	0A7D  FC      	    defb 11111100b
2192:     -	0A7E  FC      	    defb 11111100b
2193:     -	0A7F  FC      	    defb 11111100b
2194:				
2195:				    ; code=220, hex=0xDC, ascii="!\"
2196:     -	0A80  00      	    defb 00000000b
2197:     -	0A81  00      	    defb 00000000b
2198:     -	0A82  00      	    defb 00000000b
2199:     -	0A83  00      	    defb 00000000b
2200:     -	0A84  FC      	    defb 11111100b
2201:     -	0A85  FC      	    defb 11111100b
2202:     -	0A86  FC      	    defb 11111100b
2203:     -	0A87  FC      	    defb 11111100b
2204:				
2205:				    ; code=221, hex=0xDD, ascii="!]"
2206:     -	0A88  E0      	    defb 11100000b
2207:     -	0A89  E0      	    defb 11100000b
2208:     -	0A8A  E0      	    defb 11100000b
2209:     -	0A8B  E0      	    defb 11100000b
2210:     -	0A8C  E0      	    defb 11100000b
2211:     -	0A8D  E0      	    defb 11100000b
2212:     -	0A8E  E0      	    defb 11100000b
2213:     -	0A8F  E0      	    defb 11100000b
2214:				
2215:				    ; code=222, hex=0xDE, ascii="!^"
2216:     -	0A90  1C      	    defb 00011100b
2217:     -	0A91  1C      	    defb 00011100b
2218:     -	0A92  1C      	    defb 00011100b
2219:     -	0A93  1C      	    defb 00011100b
2220:     -	0A94  1C      	    defb 00011100b
2221:     -	0A95  1C      	    defb 00011100b
2222:     -	0A96  1C      	    defb 00011100b
2223:     -	0A97  1C      	    defb 00011100b
2224:				
2225:				    ; code=223, hex=0xDF, ascii="!_"
2226:     -	0A98  FC      	    defb 11111100b
2227:     -	0A99  FC      	    defb 11111100b
2228:     -	0A9A  FC      	    defb 11111100b
2229:     -	0A9B  FC      	    defb 11111100b
2230:     -	0A9C  00      	    defb 00000000b
2231:     -	0A9D  00      	    defb 00000000b
2232:     -	0A9E  00      	    defb 00000000b
2233:     -	0A9F  00      	    defb 00000000b
2234:				
2235:				    ; code=224, hex=0xE0, ascii="!`"
2236:     -	0AA0  00      	    defb 00000000b
2237:     -	0AA1  00      	    defb 00000000b
2238:     -	0AA2  34      	    defb 00110100b
2239:     -	0AA3  48      	    defb 01001000b
2240:     -	0AA4  48      	    defb 01001000b
2241:     -	0AA5  34      	    defb 00110100b
2242:     -	0AA6  00      	    defb 00000000b
2243:     -	0AA7  00      	    defb 00000000b
2244:				
2245:				    ; code=225, hex=0xE1, ascii="!a"
2246:     -	0AA8  00      	    defb 00000000b
2247:     -	0AA9  70      	    defb 01110000b
2248:     -	0AAA  48      	    defb 01001000b
2249:     -	0AAB  70      	    defb 01110000b
2250:     -	0AAC  48      	    defb 01001000b
2251:     -	0AAD  48      	    defb 01001000b
2252:     -	0AAE  70      	    defb 01110000b
2253:     -	0AAF  40      	    defb 01000000b
2254:				
2255:				    ; code=226, hex=0xE2, ascii="!b"
2256:     -	0AB0  78      	    defb 01111000b
2257:     -	0AB1  48      	    defb 01001000b
2258:     -	0AB2  40      	    defb 01000000b
2259:     -	0AB3  40      	    defb 01000000b
2260:     -	0AB4  40      	    defb 01000000b
2261:     -	0AB5  40      	    defb 01000000b
2262:     -	0AB6  40      	    defb 01000000b
2263:     -	0AB7  00      	    defb 00000000b
2264:				
2265:				    ; code=227, hex=0xE3, ascii="!c"
2266:     -	0AB8  00      	    defb 00000000b
2267:     -	0AB9  7C      	    defb 01111100b
2268:     -	0ABA  28      	    defb 00101000b
2269:     -	0ABB  28      	    defb 00101000b
2270:     -	0ABC  28      	    defb 00101000b
2271:     -	0ABD  28      	    defb 00101000b
2272:     -	0ABE  28      	    defb 00101000b
2273:     -	0ABF  00      	    defb 00000000b
2274:				
2275:				    ; code=228, hex=0xE4, ascii="!d"
2276:     -	0AC0  78      	    defb 01111000b
2277:     -	0AC1  48      	    defb 01001000b
2278:     -	0AC2  20      	    defb 00100000b
2279:     -	0AC3  10      	    defb 00010000b
2280:     -	0AC4  20      	    defb 00100000b
2281:     -	0AC5  48      	    defb 01001000b
2282:     -	0AC6  78      	    defb 01111000b
2283:     -	0AC7  00      	    defb 00000000b
2284:				
2285:				    ; code=229, hex=0xE5, ascii="!e"
2286:     -	0AC8  00      	    defb 00000000b
2287:     -	0AC9  00      	    defb 00000000b
2288:     -	0ACA  3C      	    defb 00111100b
2289:     -	0ACB  48      	    defb 01001000b
2290:     -	0ACC  48      	    defb 01001000b
2291:     -	0ACD  30      	    defb 00110000b
2292:     -	0ACE  00      	    defb 00000000b
2293:     -	0ACF  00      	    defb 00000000b
2294:				
2295:				    ; code=230, hex=0xE6, ascii="!f"
2296:     -	0AD0  00      	    defb 00000000b
2297:     -	0AD1  00      	    defb 00000000b
2298:     -	0AD2  48      	    defb 01001000b
2299:     -	0AD3  48      	    defb 01001000b
2300:     -	0AD4  48      	    defb 01001000b
2301:     -	0AD5  70      	    defb 01110000b
2302:     -	0AD6  40      	    defb 01000000b
2303:     -	0AD7  40      	    defb 01000000b
2304:				
2305:				    ; code=231, hex=0xE7, ascii="!g"
2306:     -	0AD8  00      	    defb 00000000b
2307:     -	0AD9  00      	    defb 00000000b
2308:     -	0ADA  28      	    defb 00101000b
2309:     -	0ADB  50      	    defb 01010000b
2310:     -	0ADC  10      	    defb 00010000b
2311:     -	0ADD  10      	    defb 00010000b
2312:     -	0ADE  10      	    defb 00010000b
2313:     -	0ADF  00      	    defb 00000000b
2314:				
2315:				    ; code=232, hex=0xE8, ascii="!h"
2316:     -	0AE0  38      	    defb 00111000b
2317:     -	0AE1  10      	    defb 00010000b
2318:     -	0AE2  38      	    defb 00111000b
2319:     -	0AE3  44      	    defb 01000100b
2320:     -	0AE4  38      	    defb 00111000b
2321:     -	0AE5  10      	    defb 00010000b
2322:     -	0AE6  38      	    defb 00111000b
2323:     -	0AE7  00      	    defb 00000000b
2324:				
2325:				    ; code=233, hex=0xE9, ascii="!i"
2326:     -	0AE8  30      	    defb 00110000b
2327:     -	0AE9  48      	    defb 01001000b
2328:     -	0AEA  48      	    defb 01001000b
2329:     -	0AEB  78      	    defb 01111000b
2330:     -	0AEC  48      	    defb 01001000b
2331:     -	0AED  48      	    defb 01001000b
2332:     -	0AEE  30      	    defb 00110000b
2333:     -	0AEF  00      	    defb 00000000b
2334:				
2335:				    ; code=234, hex=0xEA, ascii="!j"
2336:     -	0AF0  00      	    defb 00000000b
2337:     -	0AF1  38      	    defb 00111000b
2338:     -	0AF2  44      	    defb 01000100b
2339:     -	0AF3  44      	    defb 01000100b
2340:     -	0AF4  28      	    defb 00101000b
2341:     -	0AF5  28      	    defb 00101000b
2342:     -	0AF6  6C      	    defb 01101100b
2343:     -	0AF7  00      	    defb 00000000b
2344:				
2345:				    ; code=235, hex=0xEB, ascii="!k"
2346:     -	0AF8  30      	    defb 00110000b
2347:     -	0AF9  40      	    defb 01000000b
2348:     -	0AFA  20      	    defb 00100000b
2349:     -	0AFB  10      	    defb 00010000b
2350:     -	0AFC  38      	    defb 00111000b
2351:     -	0AFD  48      	    defb 01001000b
2352:     -	0AFE  30      	    defb 00110000b
2353:     -	0AFF  00      	    defb 00000000b
2354:				
2355:				    ; code=236, hex=0xEC, ascii="!l"
2356:     -	0B00  00      	    defb 00000000b
2357:     -	0B01  00      	    defb 00000000b
2358:     -	0B02  28      	    defb 00101000b
2359:     -	0B03  54      	    defb 01010100b
2360:     -	0B04  54      	    defb 01010100b
2361:     -	0B05  28      	    defb 00101000b
2362:     -	0B06  00      	    defb 00000000b
2363:     -	0B07  00      	    defb 00000000b
2364:				
2365:				    ; code=237, hex=0xED, ascii="!m"
2366:     -	0B08  00      	    defb 00000000b
2367:     -	0B09  10      	    defb 00010000b
2368:     -	0B0A  38      	    defb 00111000b
2369:     -	0B0B  54      	    defb 01010100b
2370:     -	0B0C  54      	    defb 01010100b
2371:     -	0B0D  38      	    defb 00111000b
2372:     -	0B0E  10      	    defb 00010000b
2373:     -	0B0F  00      	    defb 00000000b
2374:				
2375:				    ; code=238, hex=0xEE, ascii="!n"
2376:     -	0B10  00      	    defb 00000000b
2377:     -	0B11  38      	    defb 00111000b
2378:     -	0B12  40      	    defb 01000000b
2379:     -	0B13  78      	    defb 01111000b
2380:     -	0B14  40      	    defb 01000000b
2381:     -	0B15  38      	    defb 00111000b
2382:     -	0B16  00      	    defb 00000000b
2383:     -	0B17  00      	    defb 00000000b
2384:				
2385:				    ; code=239, hex=0xEF, ascii="!o"
2386:     -	0B18  00      	    defb 00000000b
2387:     -	0B19  30      	    defb 00110000b
2388:     -	0B1A  48      	    defb 01001000b
2389:     -	0B1B  48      	    defb 01001000b
2390:     -	0B1C  48      	    defb 01001000b
2391:     -	0B1D  48      	    defb 01001000b
2392:     -	0B1E  00      	    defb 00000000b
2393:     -	0B1F  00      	    defb 00000000b
2394:				
2395:				    ; code=240, hex=0xF0, ascii="!p"
2396:     -	0B20  00      	    defb 00000000b
2397:     -	0B21  78      	    defb 01111000b
2398:     -	0B22  00      	    defb 00000000b
2399:     -	0B23  78      	    defb 01111000b
2400:     -	0B24  00      	    defb 00000000b
2401:     -	0B25  78      	    defb 01111000b
2402:     -	0B26  00      	    defb 00000000b
2403:     -	0B27  00      	    defb 00000000b
2404:				
2405:				    ; code=241, hex=0xF1, ascii="!q"
2406:     -	0B28  00      	    defb 00000000b
2407:     -	0B29  10      	    defb 00010000b
2408:     -	0B2A  38      	    defb 00111000b
2409:     -	0B2B  10      	    defb 00010000b
2410:     -	0B2C  00      	    defb 00000000b
2411:     -	0B2D  38      	    defb 00111000b
2412:     -	0B2E  00      	    defb 00000000b
2413:     -	0B2F  00      	    defb 00000000b
2414:				
2415:				    ; code=242, hex=0xF2, ascii="!r"
2416:     -	0B30  40      	    defb 01000000b
2417:     -	0B31  30      	    defb 00110000b
2418:     -	0B32  08      	    defb 00001000b
2419:     -	0B33  30      	    defb 00110000b
2420:     -	0B34  40      	    defb 01000000b
2421:     -	0B35  00      	    defb 00000000b
2422:     -	0B36  78      	    defb 01111000b
2423:     -	0B37  00      	    defb 00000000b
2424:				
2425:				    ; code=243, hex=0xF3, ascii="!s"
2426:     -	0B38  08      	    defb 00001000b
2427:     -	0B39  30      	    defb 00110000b
2428:     -	0B3A  40      	    defb 01000000b
2429:     -	0B3B  30      	    defb 00110000b
2430:     -	0B3C  08      	    defb 00001000b
2431:     -	0B3D  00      	    defb 00000000b
2432:     -	0B3E  78      	    defb 01111000b
2433:     -	0B3F  00      	    defb 00000000b
2434:				
2435:				    ; code=244, hex=0xF4, ascii="!t"
2436:     -	0B40  00      	    defb 00000000b
2437:     -	0B41  08      	    defb 00001000b
2438:     -	0B42  14      	    defb 00010100b
2439:     -	0B43  10      	    defb 00010000b
2440:     -	0B44  10      	    defb 00010000b
2441:     -	0B45  10      	    defb 00010000b
2442:     -	0B46  10      	    defb 00010000b
2443:     -	0B47  10      	    defb 00010000b
2444:				
2445:				    ; code=245, hex=0xF5, ascii="!u"
2446:     -	0B48  10      	    defb 00010000b
2447:     -	0B49  10      	    defb 00010000b
2448:     -	0B4A  10      	    defb 00010000b
2449:     -	0B4B  10      	    defb 00010000b
2450:     -	0B4C  10      	    defb 00010000b
2451:     -	0B4D  50      	    defb 01010000b
2452:     -	0B4E  20      	    defb 00100000b
2453:     -	0B4F  00      	    defb 00000000b
2454:				
2455:				    ; code=246, hex=0xF6, ascii="!v"
2456:     -	0B50  00      	    defb 00000000b
2457:     -	0B51  10      	    defb 00010000b
2458:     -	0B52  00      	    defb 00000000b
2459:     -	0B53  7C      	    defb 01111100b
2460:     -	0B54  00      	    defb 00000000b
2461:     -	0B55  10      	    defb 00010000b
2462:     -	0B56  00      	    defb 00000000b
2463:     -	0B57  00      	    defb 00000000b
2464:				
2465:				    ; code=247, hex=0xF7, ascii="!w"
2466:     -	0B58  00      	    defb 00000000b
2467:     -	0B59  28      	    defb 00101000b
2468:     -	0B5A  50      	    defb 01010000b
2469:     -	0B5B  00      	    defb 00000000b
2470:     -	0B5C  28      	    defb 00101000b
2471:     -	0B5D  50      	    defb 01010000b
2472:     -	0B5E  00      	    defb 00000000b
2473:     -	0B5F  00      	    defb 00000000b
2474:				
2475:				    ; code=248, hex=0xF8, ascii="!x"
2476:     -	0B60  30      	    defb 00110000b
2477:     -	0B61  48      	    defb 01001000b
2478:     -	0B62  48      	    defb 01001000b
2479:     -	0B63  30      	    defb 00110000b
2480:     -	0B64  00      	    defb 00000000b
2481:     -	0B65  00      	    defb 00000000b
2482:     -	0B66  00      	    defb 00000000b
2483:     -	0B67  00      	    defb 00000000b
2484:				
2485:				    ; code=249, hex=0xF9, ascii="!y"
2486:     -	0B68  00      	    defb 00000000b
2487:     -	0B69  00      	    defb 00000000b
2488:     -	0B6A  00      	    defb 00000000b
2489:     -	0B6B  30      	    defb 00110000b
2490:     -	0B6C  30      	    defb 00110000b
2491:     -	0B6D  00      	    defb 00000000b
2492:     -	0B6E  00      	    defb 00000000b
2493:     -	0B6F  00      	    defb 00000000b
2494:				
2495:				    ; code=250, hex=0xFA, ascii="!z"
2496:     -	0B70  00      	    defb 00000000b
2497:     -	0B71  00      	    defb 00000000b
2498:     -	0B72  00      	    defb 00000000b
2499:     -	0B73  20      	    defb 00100000b
2500:     -	0B74  00      	    defb 00000000b
2501:     -	0B75  00      	    defb 00000000b
2502:     -	0B76  00      	    defb 00000000b
2503:     -	0B77  00      	    defb 00000000b
2504:				
2505:				    ; code=251, hex=0xFB, ascii="!{"
2506:     -	0B78  00      	    defb 00000000b
2507:     -	0B79  1C      	    defb 00011100b
2508:     -	0B7A  10      	    defb 00010000b
2509:     -	0B7B  10      	    defb 00010000b
2510:     -	0B7C  50      	    defb 01010000b
2511:     -	0B7D  50      	    defb 01010000b
2512:     -	0B7E  20      	    defb 00100000b
2513:     -	0B7F  00      	    defb 00000000b
2514:				
2515:				    ; code=252, hex=0xFC, ascii="!|"
2516:     -	0B80  50      	    defb 01010000b
2517:     -	0B81  28      	    defb 00101000b
2518:     -	0B82  28      	    defb 00101000b
2519:     -	0B83  28      	    defb 00101000b
2520:     -	0B84  00      	    defb 00000000b
2521:     -	0B85  00      	    defb 00000000b
2522:     -	0B86  00      	    defb 00000000b
2523:     -	0B87  00      	    defb 00000000b
2524:				
2525:				    ; code=253, hex=0xFD, ascii="!}"
2526:     -	0B88  60      	    defb 01100000b
2527:     -	0B89  10      	    defb 00010000b
2528:     -	0B8A  20      	    defb 00100000b
2529:     -	0B8B  70      	    defb 01110000b
2530:     -	0B8C  00      	    defb 00000000b
2531:     -	0B8D  00      	    defb 00000000b
2532:     -	0B8E  00      	    defb 00000000b
2533:     -	0B8F  00      	    defb 00000000b
2534:				
2535:				    ; code=254, hex=0xFE, ascii="!~"
2536:     -	0B90  00      	    defb 00000000b
2537:     -	0B91  00      	    defb 00000000b
2538:     -	0B92  78      	    defb 01111000b
2539:     -	0B93  78      	    defb 01111000b
2540:     -	0B94  78      	    defb 01111000b
2541:     -	0B95  78      	    defb 01111000b
2542:     -	0B96  00      	    defb 00000000b
2543:     -	0B97  00      	    defb 00000000b
2544:				
2545:				    ; code=255, hex=0xFF, ascii="!^"
2546:     -	0B98  00      	    defb 00000000b
2547:     -	0B99  00      	    defb 00000000b
2548:     -	0B9A  00      	    defb 00000000b
2549:     -	0B9B  00      	    defb 00000000b
2550:     -	0B9C  00      	    defb 00000000b
2551:     -	0B9D  00      	    defb 00000000b
2552:     -	0B9E  00      	    defb 00000000b
**** include/vdptext.s ****
 201:     -	0B9F  00      	    defb 00000000b
 202:				
 203:				
 204:				
 205:				; b contains x
 206:				; c contains y
 207:     -	0BA0          	vdp_cursor_set:
 208: 4304+4	0BA0  78      	    ld a, b
 209: 4308+13	0BA1  320240  	    ld (var_curserx),a
 210: 4321+4	0BA4  79      	    ld a,c
 211: 4325+13	0BA5  320340  	    ld (var_cursery),a
 212: 4338+10	0BA8  C9      	    ret
 213:				
 214:     -	0BA9          	vdp_cursor_move:
 215: 4348+11	0BA9  E5      	    push hl
 216: 4359+11	0BAA  D5      	    push de
 217: 4370+10	0BAB  210000  	    ld hl,0
 218: 4380+7	0BAE  1600    	    ld d,0
 219: 4387+13	0BB0  3A0340  	    ld a,(var_cursery)
 220: 4400+4	0BB3  5F      	    ld e,a
 221: 4404+11	0BB4  19      	    add hl,de   ;  Y x 1
 222: 4415+11	0BB5  29      	    add hl,hl   ;x2
 223: 4426+11	0BB6  29      	    add hl,hl   ;x4
 224: 4437+11	0BB7  19      	    add hl,de   ;x5
 225: 4448+11	0BB8  29      	    add hl, hl  ;x10
 226: 4459+11	0BB9  29      	    add hl, hl  ;x20
 227: 4470+11	0BBA  29      	    add hl, hl  ;x40 
 228: 4481+13	0BBB  3A0240  	    ld a,(var_curserx)
 229: 4494+4	0BBE  5F      	    ld e,a
 230: 4498+11	0BBF  19      	    add hl,de   ;add x
 231: 4509+10	0BC0  110038  	    ld de, TmsNameLoc
 232: 4519+11	0BC3  19      	    add hl,de   ;add table offset
 233: 4530+4	0BC4  7D      	    ld a,l
 234: 4534+11	0BC5  D381    	    out (VDP_REG),a
 235: 4545+4	0BC7  7C      	    ld a,h
 236: 4549+7	0BC8  F640    	    or 0x40
 237: 4556+11	0BCA  D381    	    out (VDP_REG),a
 238: 4567+10	0BCC  D1      	    pop de
 239: 4577+10	0BCD  E1      	    pop hl
 240: 4587+10	0BCE  C9      	    ret
 241:				
 242:				; HL contains address
 243:     -	0BCF          	vdp_address:
 244: 4597+4	0BCF  7D      	    ld a,l
 245: 4601+11	0BD0  D381    	    out (VDP_REG),a
 246: 4612+4	0BD2  7C      	    ld a,h
 247: 4616+7	0BD3  F640    	    or 0x40
 248: 4623+11	0BD5  D381    	    out (VDP_REG),a  
 249: 4634+10	0BD7  C9      	    ret
 250:				
 251:     -	0BD8          	vdp_char:
 252: 4644+11	0BD8  F5      	    push af             ;store to-print char
 253: 4655+13	0BD9  3A0240  	    ld a,(var_curserx)  ;load x
 254: 4668+7	0BDC  FE28    	    cp 40               ;if eol reached
 255: 4675+7+5	0BDE  280B    	    jr z,vdp_char_nl     
 256: 4682+4	0BE0  3C      	    inc a               ;else incerment
 257: 4686+13	0BE1  320240  	    ld (var_curserx),a  ;and store
 258: 4699+10	0BE4  F1      	    pop af              ;print char
 259: 4709+11	0BE5  D380    	    out (VDP_MEM),a
 260: 4720+17	0BE7  CD7003  	    call vdp_wait
 261: 4737+10	0BEA  C9      	    ret
 262:     -	0BEB          	vdp_char_nl:    ;new line
 263: 4747+4	0BEB  AF      	    xor a               ;reset x pos
 264: 4751+13	0BEC  320240  	    ld (var_curserx),a  ;
 265: 4764+13	0BEF  3A0340  	    ld a,(var_cursery)
 266: 4777+7	0BF2  FE18    	    cp 24
 267: 4784+7+5	0BF4  280B    	    jr z,vdp_char_scroll
 268: 4791+4	0BF6  3C      	    inc a
 269: 4795+13	0BF7  320340  	    ld (var_cursery),a  
 270: 4808+10	0BFA  F1      	    pop af              ;print char
 271: 4818+11	0BFB  D380    	    out (VDP_MEM),a
 272: 4829+17	0BFD  CD7003  	    call vdp_wait
 273: 4846+10	0C00  C9      	    ret
 274:     -	0C01          	vdp_char_scroll:    ;last line full -> scroll
 275: 4856+17	0C01  CD170C  	    call vdp_scroll
 276: 4873+4	0C04  AF      	    xor a               
 277: 4877+13	0C05  320240  	    ld (var_curserx),a  
 278: 4890+7	0C08  3E17    	    ld a,23
 279: 4897+13	0C0A  320340  	    ld (var_cursery),a  
 280: 4910+17	0C0D  CDA90B  	    call vdp_cursor_move
 281: 4927+10	0C10  F1      	    pop af              ;print char
 282: 4937+11	0C11  D380    	    out (VDP_MEM),a
 283: 4948+17	0C13  CD7003  	    call vdp_wait
 284: 4965+10	0C16  C9      	    ret
 285:				
 286:     -	0C17          	vdp_scroll:
 287: 4975+11	0C17  E5      	    push hl
 288: 4986+11	0C18  C5      	    push bc
 289: 4997+11	0C19  D5      	    push de
 290:				    ;BC = first position (dest)
 291:				    ;HL = second position (src)
 292: 5008+10	0C1A  010038  	    ld bc, TmsNameLoc    ; load start of text-buffer (name table) into reg bc
 293:     -	0C1D          	vdp_scroll_line:
 294: 5018+4	0C1D  60      	    ld h,b
 295: 5022+4	0C1E  69      	    ld l,c
 296:				
 297: 5026+10	0C1F  112800  	    ld de, 40   ; line width
 298: 5036+11	0C22  19      	    add hl, de  ;HL is now the second position
 299:				
 300: 5047+4	0C23  7D      	    ld a,l          ; setup VDP address
 301: 5051+11	0C24  D381    	    out (VDP_REG),a
 302: 5062+4	0C26  7C      	    ld a,h
 303: 5066+7	0C27  E63F    	    and 3fh
 304: 5073+11	0C29  D381    	    out (VDP_REG),a
 305: 5084+17	0C2B  CD7003  	    call vdp_wait
 306: 5101+11	0C2E  DB80    	    in a, (VDP_MEM)    ; read byte
 307: 5112+11	0C30  F5      	    push af
 308:				
 309: 5123+4	0C31  79      	    ld a,c          ; setup VDP address
 310: 5127+11	0C32  D381    	    out (VDP_REG),a
 311: 5138+4	0C34  78      	    ld a,b
 312: 5142+7	0C35  E63F    	    and 3fh         
 313: 5149+7	0C37  F640    	    or 40h          ; write bit
 314: 5156+11	0C39  D381    	    out (VDP_REG),a
 315: 5167+10	0C3B  F1      	    pop af
 316: 5177+17	0C3C  CD7003  	    call vdp_wait
 317: 5194+11	0C3F  D380    	    out (VDP_MEM),a
 318:				
 319: 5205+6	0C41  03      	    inc bc
 320:				
 321: 5211+4	0C42  60      	    ld h,b
 322: 5215+4	0C43  69      	    ld l,c
 323: 5219+10	0C44  11C03B  	    ld de, TmsNameLoc + 960    ; buffer end
 324: 5229+15	0C47  ED52    	    sbc hl, de
 325:				
 326: 5244+10	0C49  C21D0C  	    jp nz, vdp_scroll_line
 327:				
 328:     -	0C4C          	vdp_scroll_clear_l24:
 329: 5254+10	0C4C  01983B  	    ld bc, TmsNameLoc + 920
 330:     -	0C4F          	vdp_scroll_clear_l24_loop:
 331:				
 332: 5264+4	0C4F  79      	    ld a,c          ; setup VDP addressh
 333: 5268+11	0C50  D381    	    out (VDP_REG),a
 334: 5279+4	0C52  78      	    ld a,b
 335: 5283+7	0C53  E63F    	    and 3fh         
 336: 5290+7	0C55  F640    	    or 40h          ; write bit
 337: 5297+11	0C57  D381    	    out (VDP_REG),a
 338: 5308+7	0C59  3E20    	    ld a, ' '
 339: 5315+11	0C5B  D380    	    out (VDP_MEM),a
 340: 5326+17	0C5D  CD7003  	    call vdp_wait
 341:				
 342: 5343+6	0C60  03      	    inc bc
 343: 5349+4	0C61  60      	    ld h,b
 344: 5353+4	0C62  69      	    ld l,c
 345: 5357+10	0C63  11C03B  	    ld de, TmsNameLoc + 960   ; buffer end
 346: 5367+15	0C66  ED52    	    sbc hl, de
 347:				
 348: 5382+10	0C68  C24F0C  	    jp nz, vdp_scroll_clear_l24_loop
 349:				
 350: 5392+10	0C6B  D1      	    pop de
 351: 5402+10	0C6C  C1      	    pop bc
 352: 5412+10	0C6D  E1      	    pop hl
 353: 5422+10	0C6E  C9      	    ret
 354:				
 355:				
 356:     -	0C6F          	vdp_im2_pos:
 357: 5432+11	0C6F  E5      	    push hl
 358: 5443+11	0C70  D5      	    push de
 359: 5454+10	0C71  210000  	    ld hl,0
 360: 5464+7	0C74  1600    	    ld d,0
 361: 5471+13	0C76  3A0340  	    ld a,(var_cursery)
 362: 5484+4	0C79  5F      	    ld e,a
 363: 5488+11	0C7A  19      	    add hl,de   ;  Y x 1
 364: 5499+11	0C7B  29      	    add hl,hl   ;x2
 365: 5510+11	0C7C  29      	    add hl,hl   ;x4
 366: 5521+11	0C7D  29      	    add hl,hl   ;x8
 367: 5532+11	0C7E  29      	    add hl,hl   ;x16
 368: 5543+11	0C7F  29      	    add hl,hl   ;x32 
 369: 5554+13	0C80  3A0240  	    ld a,(var_curserx)
 370: 5567+4	0C83  5F      	    ld e,a
 371: 5571+11	0C84  19      	    add hl,de   ;add x
 372: 5582+10	0C85  110038  	    ld de, TmsNameLoc
 373: 5592+11	0C88  19      	    add hl,de   ;add table offset
 374: 5603+4	0C89  7D      	    ld a,l
 375: 5607+11	0C8A  D381    	    out (VDP_REG),a
 376: 5618+4	0C8C  7C      	    ld a,h
 377: 5622+7	0C8D  F640    	    or 0x40
 378: 5629+11	0C8F  D381    	    out (VDP_REG),a
 379: 5640+10	0C91  D1      	    pop de
 380: 5650+10	0C92  E1      	    pop hl
**** main.asm ****
 390: 5660+10	0C93  C9      	    ret
 391:				.include "ps2.s"
**** include/ps2.s ****
   1:				;PS2 Implementation
   2:				;PIO1 Port C has PS2 Pins
   3:				;C/0 -> INPUT   CLK
   4:				;C/1 -> INPUT   DATA
   5:				;C/2 -> OUTPUT  CLK_LOW (ACTIVE_LOW)
   6:				;C/3 -> OUTPUT  DATA_LOW (ACTIVE_LOW)
   7:				;DATA and CLK are pulled high via 4.7k resistor
   8:				;C/4-7 are unused
   9:				
  10:     -	0C94          	keyboard_init:
  11: 5670+7	0C94  3ECF    	    ld a, 0xCF  ;controll word: Set mode 3 (no interrupts)
  12: 5677+11	0C96  D367    	    out (IO_PIO_1_B_C), a
  13: 5688+7	0C98  3E03    	    ld a, 0x03  ;bit mask: 1 and 2 input, rest output (I/!O)
  14: 5695+11	0C9A  D367    	    out (IO_PIO_1_B_C), a
  15:				
  16: 5706+7	0C9C  3E0C    	    ld a, 0x0C  ;disable CLK_LOW, DATA_LOW pulldown (RX enable)
  17: 5713+11	0C9E  D366    	    out (IO_PIO_1_B_D), a
  18: 5724+17	0CA0  CD210D  	    call keyboard_off
  19:				
  20: 5741+10	0CA3  C9      	    ret
  21:				
  22:				; a contains result
  23:     -	0CA4          	keyboard_read:
  24: 5751+17	0CA4  CD260D  	    call keyboard_on
  25: 5768+4	0CA7  00      	    nop
  26: 5772+17	0CA8  CDF10C  	    call keyboard_wait_clk
  27: 5789+11	0CAB  DB66    	    in a,(IO_PIO_1_B_D) ;read data bit
  28: 5800+7	0CAD  E602    	    and 0x02
  29: 5807+10	0CAF  C2EB0C  	    jp nz, keyboard_read_fault  ;if startbit not 0 then fault
  30: 5817+7	0CB2  0680    	    ld b,0x80      ;b is buffer for input data
  31: 5824+7	0CB4  0E00    	    ld c,0          ;parity counter
  32:     -	0CB6          	keyboard_read_loop:
  33: 5831+17	0CB6  CDF10C  	    call keyboard_wait_clk
  34: 5848+11	0CB9  DB66    	    in a,(IO_PIO_1_B_D) ;read data bit
  35: 5859+4	0CBB  0F      	    rrca        ;carry now contains the clock bit
  36: 5863+4	0CBC  0F      	    rrca        ;carry now contains the received bit
  37: 5867+7+5	0CBD  3002    	    jr nc, keyboard_read_loop_odd
  38: 5874+4	0CBF  0C      	    inc c   ;if positiv bit, incement parity counter
  39: 5878+4	0CC0  37      	    scf
  40:     -	0CC1          	keyboard_read_loop_odd:
  41: 5882+4	0CC1  78      	    ld a,b      ;load buffer in a
  42: 5886+4	0CC2  1F      	    rra         ;carry bit is now appended to buffer
  43: 5890+4	0CC3  47      	    ld b,a      ;store a to buffer
  44: 5894+10	0CC4  D2B60C  	    jp nc, keyboard_read_loop   ;repeat for 8 times
  45:     -	0CC7          	keyboard_read_parity:
  46: 5904+17	0CC7  CDF10C  	    call keyboard_wait_clk      
  47: 5921+4	0CCA  79      	    ld a,c  ;load parity counter to a and calculate parity
  48: 5925+4	0CCB  1F      	    rra     ;if bit1 is set -> odd # of 1s else even # of 1s
  49: 5929+7+5	0CCC  3808    	    jr c, keyboard_read_podd
  50:				    ;parity even
  51: 5936+11	0CCE  DB66    	    in a,(IO_PIO_1_B_D) ;read parity bit
  52: 5947+7	0CD0  E602    	    and 0x02    ;test if parity bit is also even
  53: 5954+7+5	0CD2  2817    	    jr z, keyboard_read_fault
  54: 5961+12	0CD4  1806    	    jr keyboard_read_stop
  55:     -	0CD6          	keyboard_read_podd:
  56:				    ;parity odd
  57: 5973+11	0CD6  DB66    	    in a,(IO_PIO_1_B_D) ;read parity bit
  58: 5984+7	0CD8  E602    	    and 0x02    ;test if parity bit is also odd
  59: 5991+7+5	0CDA  200F    	    jr nz, keyboard_read_fault
  60:     -	0CDC          	keyboard_read_stop:
  61: 5998+17	0CDC  CDF10C  	    call keyboard_wait_clk    
  62: 6015+11	0CDF  DB66    	    in a,(IO_PIO_1_B_D) ;read data bit
  63: 6026+7	0CE1  E602    	    and 0x02
  64: 6033+10	0CE3  CAEB0C  	    jp z, keyboard_read_fault  ;if stopbit not 1 then fault
  65: 6043+17	0CE6  CD210D  	    call keyboard_off
  66: 6060+4	0CE9  78      	    ld a,b  ;else load buffer to a
  67: 6064+10	0CEA  C9      	    ret     ;and return
  68:				
  69:     -	0CEB          	keyboard_read_fault:
  70: 6074+17	0CEB  CD080D  	    call keyboard_abort
  71:				    ;call keyboard_off
  72: 6091+7	0CEE  3EFF    	    ld a,0xFF
  73: 6098+10	0CF0  C9      	    ret
  74:				
  75:     -	0CF1          	keyboard_wait_clk:         
  76:     -	0CF1          	keyboard_wait_clk_high:             ;wait until high
  77: 6108+11	0CF1  DB66    	    in a,(IO_PIO_1_B_D)             
  78: 6119+7	0CF3  E601    	    and 0x01
  79: 6126+10	0CF5  CAF10C  	    jp z,keyboard_wait_clk_high
  80:     -	0CF8          	keyboard_wait_clk_low:              ;wait until low
  81: 6136+11	0CF8  DB66    	    in a,(IO_PIO_1_B_D)
  82: 6147+7	0CFA  E601    	    and 0x01
  83: 6154+10	0CFC  C2F80C  	    jp nz,keyboard_wait_clk_low
  84: 6164+10	0CFF  C9      	    ret
  85:				
  86:				
  87:     -	0D00          	keyboard_wait_clk_high_only:             ;wait until high
  88: 6174+11	0D00  DB66    	    in a,(IO_PIO_1_B_D)             
  89: 6185+7	0D02  E601    	    and 0x01
  90: 6192+10	0D04  CAF10C  	    jp z,keyboard_wait_clk_high
  91: 6202+10	0D07  C9      	    ret
  92:				
  93:				
  94:     -	0D08          	keyboard_abort:
  95: 6212+11	0D08  C5      	    push bc
  96: 6223+7	0D09  0600    	    ld b,0
  97: 6230+7	0D0B  0E01    	    ld c,1
  98: 6237+7	0D0D  3E08    	    ld a,0x08   ;activate clock pulldown
  99: 6244+11	0D0F  D366    	    out (IO_PIO_1_B_D),a
 100: 6255+10	0D11  210B00  	    ld hl,11
 101:     -	0D14          	keyboard_abort_delay:               ;35-T-States    = 105326.028571 loops per sec
 102:				                                    ;  = 0.00000949433 s/loop
 103: 6265+15	0D14  ED42    	    sbc hl,bc                       ;15 T-States
 104: 6280+4	0D16  00      	    nop                             ;4  T-States
 105: 6284+4	0D17  00      	    nop                             ;4  T-States
 106: 6288+10	0D18  C2140D  	    jp nz, keyboard_abort_delay     ;12 T-States
 107:				
 108: 6298+7	0D1B  3E0C    	    ld a,0x0C   ;deactivate clock pulldown
 109: 6305+11	0D1D  D366    	    out (IO_PIO_1_B_D),a
 110: 6316+10	0D1F  C1      	    pop bc
 111: 6326+10	0D20  C9      	    ret
 112:				
 113:				
 114:     -	0D21          	keyboard_off:
 115: 6336+7	0D21  3E08    	    ld a,0x08   ;activate clock pulldown
 116: 6343+11	0D23  D366    	    out (IO_PIO_1_B_D),a
 117: 6354+10	0D25  C9      	    ret
 118:				
 119:     -	0D26          	keyboard_on:
 120: 6364+7	0D26  3E0C    	    ld a,0x0C   ;deactivate clock pulldown
 121: 6371+11	0D28  D366    	    out (IO_PIO_1_B_D),a
**** main.asm ****
 392: 6382+10	0D2A  C9      	    ret
 393:				.include "prg_ps2demo.s"
**** include/prg_ps2demo.s ****
   1:     -	0D2B          	ps2demo_run:
   2:				
   3: 6392+17	0D2B  CD940C  	    call keyboard_init
   4:				
   5:     -	0D2E          	ps2demo_run_loop:
   6: 6409+17	0D2E  CDA40C  	    call keyboard_read
   7: 6426+17	0D31  CD5002  	    call print_a_hex
   8: 6443+17	0D34  CD3002  	    call print_newLine
   9: 6460+10	0D37  C32E0D  	    jp ps2demo_run_loop
  10:				
  11:				
  12:				
**** main.asm ****
 394:				.include "prg_splash.s"
**** include/prg_splash.s ****
   1:				; Z8C Splash-Screen
   2:				
   3:     -	0D3A          	splash_run:
   4: 6470+7	0D3A  3EC0    	    ld a, 11000000b ; Set 16k memory and disable blank blank and Mode I
   5: 6477+7	0D3C  0681    	    ld b,TmsCtrl1Reg
   6: 6484+17	0D3E  CD6A03  	    call vdp_reg_write  ; write to reg 1
   7:				
   8:				    ;clear memory
   9: 6501+10	0D41  110038  	    ld de, TmsNameLoc
  10: 6511+10	0D44  01C03B  	    ld bc, TmsNameLoc+960
  11: 6521+17	0D47  CD8B03  	    call vdp_tms_clear
  12:				
  13: 6538+10	0D4A  110004  	    ld de, TmsPatternLoc + (128*8)    ;setup start addr
  14: 6548+10	0D4D  212F0E  	    ld hl,[spash_pattern] ;HL contains start addr of spash_pattern
  15: 6558+10	0D50  010801  	    ld bc,8 + (32*8)
  16: 6568+17	0D53  CD7303  	    call vdp_setup_font
  17:				
  18:				    ;create color table entry
  19: 6585+10	0D56  210020  	    ld hl, TmsColorTableLoc
  20: 6595+17	0D59  CDCF0B  	    call vdp_address
  21:				
  22: 6612+7	0D5C  0620    	    ld b, 32
  23:     -	0D5E          	splash_run_ld_clr_loop:
  24: 6619+7	0D5E  3EF0    	    ld a, 0xF0
  25: 6626+11	0D60  D380    	    out (VDP_MEM),a
  26: 6637+4	0D62  05      	    dec b
  27: 6641+4	0D63  78      	    ld a,b
  28: 6645+7	0D64  FE10    	    cp 16
  29: 6652+10	0D66  C25E0D  	    jp nz, splash_run_ld_clr_loop
  30:     -	0D69          	splash_run_ld_clr_loop2:
  31: 6662+7	0D69  3E90    	    ld a, 0x90
  32: 6669+11	0D6B  D380    	    out (VDP_MEM),a
  33: 6680+4	0D6D  05      	    dec b
  34: 6684+10	0D6E  C2690D  	    jp nz, splash_run_ld_clr_loop2
  35:				
  36:				
  37:				    ;print pattern
  38: 6694+10	0D71  210038  	    ld hl, TmsNameLoc
  39: 6704+17	0D74  CDCF0B  	    call vdp_address
  40: 6721+4	0D77  AF      	    xor a
  41:				
  42:				
  43:				
  44: 6725+7	0D78  3E80    	    ld a, 128 ;first tile
  45: 6732+7	0D7A  0600    	    ld b, 0 ;start x
  46: 6739+7	0D7C  0E00    	    ld c, 0 ;start y
  47: 6746+7	0D7E  1608    	    ld d, 8 ;size x
  48: 6753+7	0D80  1E04    	    ld e, 4 ;size y
  49:				
  50: 6760+13	0D82  320440  	    ld (var_scratch), a
  51: 6773+4	0D85  7A      	    ld a,d
  52: 6777+13	0D86  320540  	    ld (var_scratch + 1), a
  53:				
  54: 6790+4	0D89  78      	    ld a,b
  55: 6794+13	0D8A  320240  	    ld (var_curserx), a
  56: 6807+4	0D8D  79      	    ld a,c
  57: 6811+13	0D8E  320340  	    ld (var_cursery), a
  58: 6824+17	0D91  CD6F0C  	    call vdp_im2_pos
  59:				    
  60:     -	0D94          	_pattern_loop_column:
  61: 6841+13	0D94  3A0440  	    ld a,(var_scratch)
  62: 6854+11	0D97  D380    	    out (VDP_MEM),a
  63: 6865+4	0D99  3C      	    inc a
  64: 6869+13	0D9A  320440  	    ld (var_scratch),a
  65: 6882+4	0D9D  15      	    dec d
  66: 6886+10	0D9E  CAA40D  	    jp z,_pattern_loop_next_row
  67: 6896+10	0DA1  C3940D  	    jp _pattern_loop_column
  68:				
  69:     -	0DA4          	_pattern_loop_next_row:
  70: 6906+13	0DA4  3A0540  	    ld a, (var_scratch + 1)
  71: 6919+4	0DA7  57      	    ld d,a
  72: 6923+4	0DA8  1D      	    dec e
  73: 6927+10	0DA9  CAB90D  	    jp z,_pattern_loop_next_end
  74:				    
  75: 6937+13	0DAC  3A0340  	    ld a,(var_cursery)
  76: 6950+4	0DAF  3C      	    inc a
  77: 6954+13	0DB0  320340  	    ld (var_cursery), a
  78: 6967+17	0DB3  CD6F0C  	    call vdp_im2_pos
  79:				
  80: 6984+10	0DB6  C3940D  	    jp _pattern_loop_column
  81:				
  82:     -	0DB9          	_pattern_loop_next_end:
  83:				
  84: 6994+7	0DB9  3E09    	    ld a,9
  85: 7001+13	0DBB  320240  	    ld (var_curserx), a
  86: 7014+7	0DBE  3E00    	    ld a,0
  87: 7021+13	0DC0  320340  	    ld (var_cursery), a
  88: 7034+17	0DC3  CD6F0C  	    call vdp_im2_pos
  89: 7051+10	0DC6  21F30D  	    ld hl, [STR_Title1]
  90: 7061+17	0DC9  CD2402  	    call print_str
  91:				
  92: 7078+7	0DCC  3E02    	    ld a,2
  93: 7085+13	0DCE  320340  	    ld (var_cursery), a
  94: 7098+7	0DD1  3E09    	    ld a,9
  95: 7105+13	0DD3  320240  	    ld (var_curserx), a
  96: 7118+17	0DD6  CD6F0C  	    call vdp_im2_pos
  97: 7135+10	0DD9  21070E  	    ld hl, [STR_Title2]
  98: 7145+17	0DDC  CD2402  	    call print_str
  99: 7162+7	0DDF  3E03    	    ld a,3
 100: 7169+13	0DE1  320340  	    ld (var_cursery), a
 101: 7182+7	0DE4  3E09    	    ld a,9
 102: 7189+13	0DE6  320240  	    ld (var_curserx), a
 103: 7202+17	0DE9  CD6F0C  	    call vdp_im2_pos
 104: 7219+10	0DEC  211C0E  	    ld hl, [STR_Title3]
 105: 7229+17	0DEF  CD2402  	    call print_str
 106: 7246+4	0DF2  76      	    halt
 107:				
 108:				
 109:     -	0DF3          	STR_Title1:
 110:     -	0DF3  4120486F	    db 'A Homebrew Computer',0
	              6D656272
	              65772043
	              6F6D7075
	              74657200
 111:     -	0E07          	STR_Title2:
 112:     -	0E07  62792044	    db 'by Dennis Gunia 2022',0
	              656E6E69
	              73204775
	              6E696120
	              32303232
	              00
 113:     -	0E1C          	STR_Title3:
 114:     -	0E1C  7777772E	    db 'www.dennisgunia.de',0
	              64656E6E
	              69736775
	              6E69612E
	              646500
 115:				
 116:     -	0E2F          	spash_pattern:
 117:     -	0E2F          	tile_0: ;(0,0)
 118:     -	0E2F  003F7F7F	    db 0,63,127,127,127,63,0,0
	              7F3F0000
 119:     -	0E37          	tile_1: ;(1,0)
 120:     -	0E37  00FFFFFF	    db 0,255,255,255,255,255,3,7
	              FFFF0307
 121:     -	0E3F          	tile_2: ;(2,0)
 122:     -	0E3F  00FCFEFE	    db 0,252,254,254,254,253,253,249
	              FEFDFDF9
 123:     -	0E47          	tile_3: ;(3,0)
 124:     -	0E47  000F7FFF	    db 0,15,127,255,255,252,248,248
	              FFFCF8F8
 125:     -	0E4F          	tile_4: ;(4,0)
 126:     -	0E4F  00FFFFFF	    db 0,255,255,255,255,127,63,63
	              FF7F3F3F
 127:     -	0E57          	tile_5: ;(5,0)
 128:     -	0E57  00FFFFFF	    db 0,255,255,255,255,255,15,31
	              FFFF0F1F
 129:     -	0E5F          	tile_6: ;(6,0)
 130:     -	0E5F  00FFFFFF	    db 0,255,255,255,255,255,240,224
	              FFFFF0E0
 131:     -	0E67          	tile_7: ;(7,0)
 132:     -	0E67  00E0FCFE	    db 0,224,252,254,254,254,28,0
	              FEFE1C00
 133:     -	0E6F          	tile_8: ;(0,1)
 134:     -	0E6F  00000000	    db 0,0,0,0,0,0,1,3
	              00000103
 135:     -	0E77          	tile_9: ;(1,1)
 136:     -	0E77  0F1F3F3F	    db 15,31,63,63,127,255,254,252
	              7FFFFEFC
 137:     -	0E7F          	tile_10: ;(2,1)
 138:     -	0E7F  F1E1C0C0	    db 241,225,192,192,128,0,0,1
	              80000001
 139:     -	0E87          	tile_11: ;(3,1)
 140:     -	0E87  F8F8FC7F	    db 248,248,252,127,63,127,255,248
	              3F7FFFF8
 141:     -	0E8F          	tile_12: ;(4,1)
 142:     -	0E8F  3F3F7EFC	    db 63,63,126,252,248,252,254,63
	              F8FCFE3F
 143:     -	0E97          	tile_13: ;(5,1)
 144:     -	0E97  1F3F3F3F	    db 31,63,63,63,63,63,63,63
	              3F3F3F3F
 145:     -	0E9F          	tile_14: ;(6,1)
 146:     -	0E9F  C0800000	    db 192,128,0,0,0,0,0,0
	              00000000
 147:     -	0EA7          	tile_15: ;(7,1)
 148:     -	0EA7  00000000	    db 0,0,0,0,0,0,0,0
	              00000000
 149:     -	0EAF          	tile_16: ;(0,2)
 150:     -	0EAF  03070F1F	    db 3,7,15,31,63,127,127,127
	              3F7F7F7F
 151:     -	0EB7          	tile_17: ;(1,2)
 152:     -	0EB7  F8F8F0E0	    db 248,248,240,224,192,255,255,255
	              C0FFFFFF
 153:     -	0EBF          	tile_18: ;(2,2)
 154:     -	0EBF  03030303	    db 3,3,3,3,3,255,255,255
	              03FFFFFF
 155:     -	0EC7          	tile_19: ;(3,2)
 156:     -	0EC7  F0F0F0F0	    db 240,240,240,240,240,248,255,255
	              F0F8FFFF
 157:     -	0ECF          	tile_20: ;(4,2)
 158:     -	0ECF  1F1F1F1F	    db 31,31,31,31,31,63,255,254
	              1F3FFFFE
 159:     -	0ED7          	tile_21: ;(5,2)
 160:     -	0ED7  BFBF9F9F	    db 191,191,159,159,143,135,7,1
	              8F870701
 161:     -	0EDF          	tile_22: ;(6,2)
 162:     -	0EDF  0080C0E0	    db 0,128,192,224,240,255,255,255
	              F0FFFFFF
 163:     -	0EE7          	tile_23: ;(7,2)
 164:     -	0EE7  00000000	    db 0,0,0,0,28,254,254,254
	              1CFEFEFE
 165:     -	0EEF          	tile_24: ;(0,3)
 166:     -	0EEF  7F3F0000	    db 127,63,0,0,0,0,0,0
	              00000000
 167:     -	0EF7          	tile_25: ;(1,3)
 168:     -	0EF7  FFFF0000	    db 255,255,0,0,0,0,0,0
	              00000000
 169:     -	0EFF          	tile_26: ;(2,3)
 170:     -	0EFF  FFFF0000	    db 255,255,0,0,0,0,0,0
	              00000000
 171:     -	0F07          	tile_27: ;(3,3)
 172:     -	0F07  FFFF0000	    db 255,255,0,0,0,0,0,0
	              00000000
 173:     -	0F0F          	tile_28: ;(4,3)
 174:     -	0F0F  FCF00000	    db 252,240,0,0,0,0,0,0
	              00000000
 175:     -	0F17          	tile_29: ;(5,3)
 176:     -	0F17  00000000	    db 0,0,0,0,0,0,0,0
	              00000000
 177:     -	0F1F          	tile_30: ;(6,3)
 178:     -	0F1F  FF1F0000	    db 255,31,0,0,0,0,0,0
	              00000000
 179:     -	0F27          	tile_31: ;(7,3)
 180:     -	0F27  FCE00000	    db 252,224,0,0,0,0,0,0
	              00000000
**** main.asm ****
 395:				.include "parity.s"
**** include/parity.s ****
   1:				; a contains data
   2:				; bc destroied
   3:				; carry is set if odd, reset if even
   4:     -	0F2F          	calc_parity:
   5: 7250+7	0F2F  0E00    	    ld c,0  ;parity data
   6: 7257+7	0F31  0608    	    ld b,8  ;byte counter
   7:     -	0F33          	calc_parity_loop:
   8: 7264+4	0F33  0F      	    rrca
   9: 7268+7+5	0F34  3001    	    jr nc,calc_parity_loop_2    ;if not zero then skip increment
  10: 7275+4	0F36  0C      	    inc c
  11:     -	0F37          	calc_parity_loop_2:
  12: 7279+8+5	0F37  10FA    	    djnz calc_parity_loop
  13: 7287+4	0F39  79      	    ld a,c
  14: 7291+4	0F3A  1F      	    rra     ;carry is set to bit 0 of high-counter. 
  15:				            ;if bit1 is set -> odd # of 1s else even # of 1s
**** main.asm ****
 396: 7295+10	0F3B  C9      	    ret
 397:				; Strings
 398:     -	0F3C          	STR_Banner_Start:
 399:     -	0F3C  5A384320	    db "Z8C Monitor V2 by Dennis Gunia (2022)",0
	              4D6F6E69
	              746F7220
	              56322062
	              79204465
	              6E6E6973
	              2047756E
	              69612028
	              32303232
	              2900
 400:     -	0F62          	STR_SyntaxError:
 401:     -	0F62  73796E3F	    db "syn?",0
	              00
 402:     -	0F67          	STR_Unknown:
 403:     -	0F67  636D643F	    db "cmd?",0
	              00
 404:     -	0F6C          	STR_HEXDUMP_HEADER:
 405:     -	0F6C  42415345	    db 'BASE 0  1  2  3  4  5  6  7',0
	              20302020
	              31202032
	              20203320
	              20342020
	              35202036
	              20203700
 406:				
 407:				.include "xmodem.s"
**** include/xmodem.s ****
   1:				;-------------------------------------------------------------------------
   2:				; Z80 XMODEM implementation by Dennis Gunia
   3:				; 2022 - www,dennisgunia.de
   4:				;
   5:				; important doc: https://web.mit.edu/6.115/www/amulet/xmodem.htm
   6:				;                http://www.blunk-electronic.de/train-z/pdf/xymodem.pdf
   7:				;-------------------------------------------------------------------------
   8:				
   9:				;Symbols
  10:     -	0001          	SYM_SOH equ 0x01
  11:     -	0004          	SYM_EOT equ 0x04
  12:     -	0006          	SYM_ACK equ 0x06
  13:     -	0015          	SYM_NAK equ 0x15
  14:     -	0017          	SYM_ETB equ 0x17
  15:     -	0018          	SYM_CAN equ 0x18
  16:     -	0043          	SYM_C   equ 0x43
  17:				
  18:				;Memory locations
  19:     -	40FB          	MEM_VAR_BLOCK equ 0x40FB    ;last block
  20:     -	40FC          	MEM_VAR_TIMEA equ 0x40FC    ;timer var (mills)
  21:     -	40FE          	MEM_VAR_TIMER equ 0x40FE    ;timer var (seconds)
  22:     -	40FE          	MEM_INT_VEC_T equ 0x40FE    ;interrupt vector table
  23:				
  24:     -	4400          	MEM_LOC_LOAD  equ 0x4400    ;load location for program
  25:				
  26:				;XMODEM routine
  27:     -	0F88          	xmodem_init:
  28: 7305+17	0F88  CD9302  	    call A_RTS_OFF
  29:				    
  30: 7322+7	0F8B  3EA7    	    LD A,10100111b      ; Init CTC Channel 3
  31: 7329+11	0F8D  D302    	    OUT (IO_CTC0_C2),A
  32: 7340+7	0F8F  3E0E    	    LD A,14             ; 1028.57Hz ISR
  33: 7347+11	0F91  D302    	    OUT (IO_CTC0_C2),A
  34: 7358+7	0F93  3E00    	    LD A,00h            ; Set CTC Ch3 Interrupt Vector
  35: 7365+11	0F95  D300    	    OUT (IO_CTC0_C0),A
  36:				    ;load int vector to ram
  37: 7376+10	0F97  216510  	    ld hl,xmodem_int        ;CTC Ch3 INT routine
  38: 7386+16	0F9A  220442  	    ld (0x4200 + 0x04),hl   
  39:				    ;reset timer vars
  40: 7402+10	0F9D  210000  	    ld hl,0x0000
  41: 7412+16	0FA0  22FC40  	    ld (MEM_VAR_TIMEA),hl
  42: 7428+16	0FA3  22FE40  	    ld (MEM_VAR_TIMER),hl
  43:				
  44: 7444+7	0FA6  3E42    	    ld a,0x42           ; Set interrupt vector register
  45: 7451+9	0FA8  ED47    	    ld i,a
  46: 7460+8	0FAA  ED5E    	    im 2                ; Z80 Interrupt mode
  47:				
  48: 7468+10	0FAC  21E010  	    ld hl,MSG_START     ; Print start banner
  49: 7478+17	0FAF  CD2402  	    call print_str
  50: 7495+4	0FB2  FB      	    ei                  ; Enable interrupts
  51:				    ; init done. Continue with xmodem_await_conn
  52:				
  53:     -	0FB3          	xmodem_await_conn:          ;Wait for initial connection
  54: 7499+7	0FB3  3E43    	    ld a, SYM_C             ;Send C to notify sender, that we want CRC
  55: 7506+17	0FB5  CDB610  	    call xmodem_out         
  56: 7523+17	0FB8  CD8910  	    call xmodem_read_wait   ;Read with timeout
  57: 7540+10	0FBB  DAB30F  	    jp c, xmodem_await_conn ;Carry flag set = timeout -> repeat
  58:				    ;else continue
  59:				
  60:     -	0FBE          	xmodem_packet:              ;XmodemCRC packet start
  61:				    ;use 1st byte to decide further processing
  62: 7550+7	0FBE  FE04    	    cp SYM_EOT              ;End of Transmission 
  63: 7557+10	0FC0  CA1C10  	    jp z, xmodem_packet_EOT
  64: 7567+7	0FC3  FE18    	    cp SYM_CAN              ;Cancel (Force receiver to start sending C's)
  65: 7574+10	0FC5  CAB30F  	    jp z, xmodem_await_conn
  66: 7584+7	0FC8  FE01    	    cp SYM_SOH              ;Start of 
  67: 7591+10	0FCA  CAD00F  	    jp z, xmodem_packet_get
  68:				
  69: 7601+10	0FCD  C32410  	    jp xmodem_err           ;anything else is an error -> abort transmission
  70:				
  71:     -	0FD0          	xmodem_packet_get:          ;if first byte == SYM_SOH -> receive block
  72: 7611+17	0FD0  CD8910  	    call xmodem_read_wait   ;get byte 2 => block ID
  73: 7628+10	0FD3  DA0811  	    jp c, xmodem_nak
  74: 7638+4	0FD6  47      	    ld b,a
  75: 7642+13	0FD7  32FB40  	    ld (MEM_VAR_BLOCK), a   ;store block id to memory
  76: 7655+17	0FDA  CD8910  	    call xmodem_read_wait   ;get byte 3 => block ID complement 
  77: 7672+10	0FDD  DA0811  	    jp c, xmodem_nak
  78: 7682+4	0FE0  80      	    add b
  79: 7686+7	0FE1  FEFF    	    cp 255                  ;both size infos should always sum to 255
  80: 7693+10	0FE3  C22410  	    jp nz,xmodem_err        ;if not 255 then its an error
  81:				
  82:				    ;calculate block start address in RAM
  83:				    ;multiply by 128
  84:				    ;use more efficient bit-wise operations
  85: 7703+4	0FE6  3D      	    dec a       ;a-1 to remove 1 sector offset
  86: 7707+4	0FE7  78      	    ld a,b
  87: 7711+4	0FE8  1F      	    rra         ;shift 1 bit to the right
  88: 7715+7	0FE9  E67F    	    and 0x7F
  89: 7722+4	0FEB  67      	    ld h,a
  90: 7726+4	0FEC  78      	    ld a,b
  91: 7730+4	0FED  3D      	    dec a       ;a-1 to remove 1 sector offset
  92: 7734+4	0FEE  0F      	    rrca        ;shift bit0 to bit 7
  93: 7738+7	0FEF  E680    	    and 0x80    ;mask out all other bits
  94: 7745+4	0FF1  6F      	    ld l,a
  95:				    ;result:
  96:				    ;hl = 0aaaaaaa a000000
  97:				
  98: 7749+10	0FF2  110044  	    ld de,MEM_LOC_LOAD  
  99: 7759+11	0FF5  19      	    add hl,de               ;add calculated offset to base address
 100:				    ;hl now contains the true start address of this sector
 101:				
 102: 7770+7	0FF6  0680    	    ld b,128    ;preload counter for data baytes
 103: 7777+7	0FF8  0E00    	    ld c,0      ;packet length counter ( used for overflow error )
 104:				
 105:     -	0FFA          	xmodem_packet_get_data: ;get 128 data bytes (loop)
 106: 7784+11	0FFA  E5      	    push hl                 ;push hl onto stack because xmodem_read_wait destroys hl
 107: 7795+17	0FFB  CD8910  	    call xmodem_read_wait   ;read byte or timeout
 108: 7812+10	0FFE  DA0811  	    jp c, xmodem_nak        ;if timeout -> nak and retry
 109: 7822+10	1001  E1      	    pop hl                  ;restore hl
 110: 7832+7	1002  77      	    ld (hl), a              ;store received byte in memory
 111: 7839+6	1003  23      	    inc hl                  ;increment pointer
 112: 7845+4	1004  0C      	    inc c                   ;increment packet length counter 
 113: 7849+4	1005  05      	    dec b                   ;decerment data bytes remmaining
 114: 7853+10	1006  C2FA0F  	    jp nz, xmodem_packet_get_data   ;if bytes remaining, loop
 115:				    ;else continue with crc bytes
 116:				
 117:     -	1009          	xmodem_packet_get_crc:      ;get 16-Bit CRC
 118: 7863+17	1009  CD8910  	    call xmodem_read_wait  
 119: 7880+10	100C  DA0811  	    jp c, xmodem_nak
 120: 7890+4	100F  57      	    ld d,a
 121: 7894+4	1010  0C      	    inc c
 122: 7898+17	1011  CD8910  	    call xmodem_read_wait   
 123: 7915+10	1014  DA0811  	    jp c, xmodem_nak
 124: 7925+4	1017  5F      	    ld e,a 
 125: 7929+4	1018  0C      	    inc c
 126:				    ;de now contains CRC value
 127:				    ;check if c is not bigger than 130 byte (128 data + 2crc)
 128:				    ;TODO if so NACK
 129:				
 130:				    ;de contains 16-bit CRC
 131:				    ;TODO if crc error NACK
 132: 7933+10	1019  C3FA10  	    jp xmodem_ack         ;ack block -> then jump to start again
 133:				
 134:     -	101C          	xmodem_packet_EOT:          ;End of transmission SUB. 
 135: 7943+7	101C  3E06    	    ld a, SYM_ACK           ;Acknowledge EOT
 136: 7950+17	101E  CDB610  	    call xmodem_out
 137: 7967+10	1021  C35E10  	    jp xmodem_end           ;and end xmodem
 138:				
 139:				
 140:				
 141:     -	1024          	xmodem_err:                 ;non recoverable error -> abort
 142: 7977+7	1024  3E18    	    ld a, SYM_CAN
 143: 7984+17	1026  CDB610  	    call xmodem_out
 144: 8001+7	1029  3E18    	    ld a, SYM_CAN
 145: 8008+17	102B  CDB610  	    call xmodem_out
 146: 8025+7	102E  3E18    	    ld a, SYM_CAN
 147: 8032+17	1030  CDB610  	    call xmodem_out
 148: 8049+7	1033  3E18    	    ld a, SYM_CAN
 149: 8056+17	1035  CDB610  	    call xmodem_out
 150: 8073+7	1038  3E18    	    ld a, SYM_CAN
 151: 8080+17	103A  CDB610  	    call xmodem_out
 152: 8097+7	103D  3E18    	    ld a, SYM_CAN
 153: 8104+17	103F  CDB610  	    call xmodem_out
 154: 8121+7	1042  3E18    	    ld a, SYM_CAN
 155: 8128+17	1044  CDB610  	    call xmodem_out
 156: 8145+7	1047  3E18    	    ld a, SYM_CAN
 157: 8152+17	1049  CDB610  	    call xmodem_out
 158: 8169+7	104C  3E18    	    ld a, SYM_CAN
 159: 8176+17	104E  CDB610  	    call xmodem_out
 160: 8193+7	1051  3E18    	    ld a, SYM_CAN
 161: 8200+17	1053  CDB610  	    call xmodem_out
 162: 8217+7	1056  3E18    	    ld a, SYM_CAN
 163:				
 164: 8224+10	1058  21C710  	    ld hl, MSG_ERROR
 165: 8234+17	105B  CD2402  	    call print_str
 166:				
 167:				    ;overflow to end
 168:     -	105E          	xmodem_end:
 169: 8251+4	105E  F3      	    di                      ;disable interrupts
 170: 8255+17	105F  CD3002  	    call print_newLine      ;print new line
 171: 8272+10	1062  C38900  	    jp PROMPT_BEGIN         ;return ti prompt
 172:				
 173:				;isr is used as counter for timeouts
 174:     -	1065          	xmodem_int:
 175: 8282+4	1065  F3      	    di                      ;setup ISR (disable further interrupts, exchange registers)
 176: 8286+4	1066  08      	    ex AF,AF'
 177: 8290+4	1067  D9      	    exx
 178:				
 179: 8294+16	1068  2AFC40  	    ld hl,(MEM_VAR_TIMEA)   ;millis counter
 180: 8310+6	106B  23      	    inc hl
 181: 8316+16	106C  22FC40  	    ld (MEM_VAR_TIMEA),hl
 182:				
 183: 8332+10	106F  110404  	    ld de,1028              ;every 1028 millis counter
 184: 8342+15	1072  ED52    	    sbc hl,de
 185: 8357+10	1074  C28410  	    jp nz, xmodem_int_cont  ;if less than 1028 millis, loop
 186:				
 187: 8367+10	1077  210000  	    ld hl,0                 ;reset millis
 188: 8377+16	107A  22FC40  	    ld (MEM_VAR_TIMEA),hl   
 189: 8393+16	107D  2AFE40  	    ld hl,(MEM_VAR_TIMER)   ;incement seconds
 190: 8409+6	1080  23      	    inc hl
 191: 8415+16	1081  22FE40  	    ld (MEM_VAR_TIMER),hl
 192:     -	1084          	xmodem_int_cont:            ;end isr
 193: 8431+4	1084  08      	    ex AF,AF'               ;restore registers
 194: 8435+4	1085  D9      	    exx
 195: 8439+4	1086  FB      	    EI                      ;enable interrupts
 196: 8443+14	1087  ED4D    	    reti                    ;exit ISR
 197:				
 198:				
 199:				
 200:				
 201:				
 202:				; A returns char
 203:				; Carry is set if timeout
 204:     -	0003          	xmodem_read_timeount    equ     3  ;3 seconds timeout
 205:     -	1089          	xmodem_read_wait:
 206: 8457+4	1089  F3      	    di
 207: 8461+10	108A  210000  	    ld hl,0
 208: 8471+16	108D  22FC40  	    ld (MEM_VAR_TIMEA),hl
 209: 8487+16	1090  22FE40  	    ld (MEM_VAR_TIMER),hl
 210: 8503+4	1093  FB      	    ei
 211: 8507+17	1094  CD9C02  	    call A_RTS_ON
 212:     -	1097          	xmodem_read_wait_loop:
 213:				    ;check timeout
 214: 8524+16	1097  2AFE40  	    ld hl,(MEM_VAR_TIMER)
 215: 8540+4	109A  7D      	    ld a, l
 216: 8544+7	109B  FE03    	    cp xmodem_read_timeount
 217: 8551+10	109D  CAB410  	    jp z, xmodem_read_wait_timeout    ;if timeout retry
 218:				
 219:				    ; if no timeout
 220: 8561+4	10A0  AF      	    xor a               ; a = 0
 221: 8565+11	10A1  D313    	    out (IO_SIO0B_C), a ; select reg 0
 222: 8576+11	10A3  DB13    	    in a, (IO_SIO0B_C)  ; read reg 0
 223: 8587+7	10A5  E601    	    and	1               ; mask D0 (recieve char available)
 224: 8594+10	10A7  CA9710  	    jp Z,xmodem_read_wait_loop  ; wait if no char
 225:				    
 226:				    ; if char avail
 227: 8604+11	10AA  DB11    	    in a, (IO_SIO0B_D)  ; read char 
 228:				    ;call debug_a_hex
 229: 8615+11	10AC  F5      	    push af
 230: 8626+17	10AD  CD9302  	    call A_RTS_OFF
 231: 8643+10	10B0  F1      	    pop af
 232: 8653+4	10B1  37      	    scf
 233: 8657+4	10B2  3F      	    ccf
 234: 8661+10	10B3  C9      	    ret                 ; return
 235:     -	10B4          	xmodem_read_wait_timeout:
 236: 8671+4	10B4  37      	    scf
 237: 8675+10	10B5  C9      	    ret
 238:				
 239:				
 240:     -	10B6          	xmodem_out:
 241: 8685+11	10B6  D311    	    out (IO_SIO0B_D), a
 242: 8696+17	10B8  CDBC10  	    call xmodem_wait_out
 243: 8713+10	10BB  C9      	    ret
 244:				
 245:     -	10BC          	xmodem_wait_out:
 246: 8723+4	10BC  97      	    sub a ;clear a, write into WR0: select RR0
 247: 8727+4	10BD  3C      	    inc a ;select RR1
 248: 8731+11	10BE  D313    	    out (IO_SIO0B_C),A
 249: 8742+11	10C0  DB13    	    in A,(IO_SIO0B_C) ;read RRx
 250: 8753+8	10C2  CB47    	    bit 0,A
 251: 8761+7+5	10C4  28F6    	    jr z,xmodem_wait_out
 252: 8768+10	10C6  C9      	    ret
 253:				
 254:     -	10C7          	MSG_ERROR:
 255:     -	10C7  4572726F	    db "Error: unexpected byte",13,10,0
	              723A2075
	              6E657870
	              65637465
	              64206279
	              74650D0A
	              00
 256:				
 257:     -	10E0          	MSG_START:
 258:     -	10E0  41776169	    db "Await xmodem connection",13,10,0
	              7420786D
	              6F64656D
	              20636F6E
	              6E656374
	              696F6E0D
	              0A00
 259:				
 260:				
 261:     -	10FA          	xmodem_ack:             ;ack routine. Only use when expecting transmission afterwards.
 262: 8778+7	10FA  3E06    	    ld a, SYM_ACK       ;send ACK
 263: 8785+17	10FC  CDB610  	    call xmodem_out 
 264: 8802+17	10FF  CD8910  	    call xmodem_read_wait   ;wait for response
 265: 8819+10	1102  DAFA10  	    jp c, xmodem_ack        ;if timeout repeat
 266: 8829+10	1105  C3BE0F  	    jp xmodem_packet        ;if received, continue with new packet
 267:				
 268:     -	1108          	xmodem_nak:             ;nak routine. Only use when expecting transmission afterwards.
 269: 8839+7	1108  3E15    	    ld a, SYM_NAK           ;send NAK
 270: 8846+17	110A  CDB610  	    call xmodem_out         
 271: 8863+17	110D  CD8910  	    call xmodem_read_wait   ;wait for response
 272: 8880+10	1110  DA0811  	    jp c, xmodem_nak        ;if timeout repeat
 273: 8890+10	1113  C3BE0F  	    jp xmodem_packet        ;if received, continue with new packet
**** main.asm ****
**** main.asm ****
 408:				;.include "debug.s"



Statistics:

     4	passes
     0	jr promotions
   256	symbols
  4374	bytes



Symbol Table:

AY0_WRITE_REG   81        129
A_RTS_OFF        293      659
A_RTS_ON         29C      668
CMD_EXEC         10A      266
CMD_IO_READ      1F8      504
CMD_IO_WRITE     1CF      463
CMD_SET          193      403
CMD_SET_END      1C9      457
CMD_SET_LOOP     1AE      430
CMD_SYNTAX_ERROR  214      532
CMD_VIEW         129      297
CMD_VIEW_END     18D      397
CMD_VIEW_ROW     162      354
CMD_VIEW_ROW_LOOP  174      372
DHEX_TO_BYTE     2A5      677
DHEX_TO_BYTE_FAILED  2C1      705
HEX_TO_BIN       2C5      709
HEX_TO_BIN_2     2D3      723
HEX_TO_INVALID_2  2DA      730
IO_AY0_ADDR    =40        64
IO_AY0_DATA    =41        65
IO_AY1_ADDR    =42        66
IO_AY1_DATA    =43        67
IO_CTC0_C0     =00        0
IO_CTC0_C1     =01        1
IO_CTC0_C2     =02        2
IO_CTC0_C3     =03        3
IO_PIO_0_A_C   =61        97
IO_PIO_0_A_D   =60        96
IO_PIO_0_B_C   =63        99
IO_PIO_0_B_D   =62        98
IO_PIO_1_A_C   =65        101
IO_PIO_1_A_D   =64        100
IO_PIO_1_B_C   =67        103
IO_PIO_1_B_D   =66        102
IO_REG0        =20        32
IO_RTC_AMPM    =25        37
IO_RTC_CTR_D   =2D        45
IO_RTC_CTR_E   =2E        46
IO_RTC_CTR_F   =2F        47
IO_RTC_DAY0    =26        38
IO_RTC_DAY1    =27        39
IO_RTC_HOUR    =24        36
IO_RTC_MIN0    =22        34
IO_RTC_MIN1    =23        35
IO_RTC_MON0    =28        40
IO_RTC_MON1    =29        41
IO_RTC_SEC0    =20        32
IO_RTC_SEC1    =21        33
IO_RTC_WEEK    =2C        44
IO_RTC_YEAR1   =2B        43
IO_RTC_YERR0   =2A        42
IO_SIO0A_C     =12        18
IO_SIO0A_D     =10        16
IO_SIO0B_C     =13        19
IO_SIO0B_D     =11        17
Includes         220      544
MEM_INT_VEC_T  =40FE      16638
MEM_LOC_LOAD   =4400      17408
MEM_VAR_BLOCK  =40FB      16635
MEM_VAR_TIMEA  =40FC      16636
MEM_VAR_TIMER  =40FE      16638
MSG_ERROR       10C7      4295
MSG_START       10E0      4320
PRG_RAM_START  =4110      16656
PRG_RAM_TOP    =FF00      65280
PROG_MEM_START =4000      16384
PROG_ROM_START = 100      256
PROMPT_BEGIN    89        137
PROMPT_BEGIN_READ_BACKSPACE C2        194
PROMPT_BEGIN_READ_LOOP 98        152
PROMPT_BEGIN_READ_PROCESS DC        220
STACK_RAM_TOP  =FFFF      65535
START_ROM      =00        0
STRCONV_BYTES_TO_HEX  2DC      732
STRCONV_BYTES_TO_HEX_1  2EB      747
STRCONV_BYTES_TO_HEX_2  2F5      757
STR_Banner_Start  F3C      3900
STR_HEXDUMP_HEADER  F6C      3948
STR_SyntaxError  F62      3938
STR_Title1       DF3      3571
STR_Title2       E07      3591
STR_Title3       E1C      3612
STR_Unknown      F67      3943
SYM_ACK        =06        6
SYM_C          =43        67
SYM_CAN        =18        24
SYM_EOT        =04        4
SYM_ETB        =17        23
SYM_NAK        =15        21
SYM_SOH        =01        1
SYS_BUF_START  =4010      16400
SYS_RAM_START  =4000      16384
TmsBitmapColorLen= 800      2048
TmsBitmapPatternLen=1800      6144
TmsBlack       =01        1
TmsColorReg    =87        135
TmsColorTableLoc=2000      8192
TmsColorTableReg=83        131
TmsCtrl0Reg    =80        128
TmsCtrl1Reg    =81        129
TmsCyan        =07        7
TmsDarkBlue    =04        4
TmsDarkGreen   =0C        12
TmsDarkRed     =06        6
TmsDarkYellow  =0A        10
TmsFont          3A8      936
TmsGray        =0E        14
TmsLightBlue   =05        5
TmsLightGreen  =03        3
TmsLightRed    =09        9
TmsLightYellow =0B        11
TmsMagenta     =0D        13
TmsMediumGreen =02        2
TmsMediumRed   =08        8
TmsMulticolorPatternLen= 600      1536
TmsNameLoc     =3800      14336
TmsNameReg     =82        130
TmsPatternLoc  =00        0
TmsPatternReg  =84        132
TmsSpriteAttrReg=85        133
TmsSpritePatternReg=86        134
TmsTextNameLen = 3C0      960
TmsTextPatternLen= 800      2048
TmsTileColorLen=20        32
TmsTileNameLen = 300      768
TmsTilePatternLen= 800      2048
TmsTransparent =00        0
TmsWhite       =0F        15
VAR_CONSOLE_BAUD=18        24
VAR_CONSOLE_CONF=0F        15
VDP_MEM        =80        128
VDP_REG        =81        129
_pattern_loop_column  D94      3476
_pattern_loop_next_end  DB9      3513
_pattern_loop_next_row  DA4      3492
calc_parity      F2F      3887
calc_parity_loop  F33      3891
calc_parity_loop_2  F37      3895
keyboard_abort   D08      3336
keyboard_abort_delay  D14      3348
keyboard_init    C94      3220
keyboard_off     D21      3361
keyboard_on      D26      3366
keyboard_read    CA4      3236
keyboard_read_fault  CEB      3307
keyboard_read_loop  CB6      3254
keyboard_read_loop_odd  CC1      3265
keyboard_read_parity  CC7      3271
keyboard_read_podd  CD6      3286
keyboard_read_stop  CDC      3292
keyboard_wait_clk  CF1      3313
keyboard_wait_clk_high  CF1      3313
keyboard_wait_clk_high_only  D00      3328
keyboard_wait_clk_low  CF8      3320
main            00        0
mon_start_complete 71        113
mon_start_init_serial 2D        45
mon_start_init_sound 18        24
mon_start_ram   5D        93
mon_start_ram_loop 66        102
mon_var_template 03        3
mon_var_template_end 4015      16405
print_a_hex      250      592
print_char       220      544
print_clear      22F      559
print_delete     26C      620
print_delete_end  282      642
print_newLine    230      560
print_newLine_scroll  244      580
print_parity     283      643
print_parity_odd  28C      652
print_str        224      548
print_str_end    22E      558
ps2demo_run      D2B      3371
ps2demo_run_loop  D2E      3374
read_char        261      609
spash_pattern    E2F      3631
splash_run       D3A      3386
splash_run_ld_clr_loop  D5E      3422
splash_run_ld_clr_loop2  D69      3433
tile_0           E2F      3631
tile_1           E37      3639
tile_10          E7F      3711
tile_11          E87      3719
tile_12          E8F      3727
tile_13          E97      3735
tile_14          E9F      3743
tile_15          EA7      3751
tile_16          EAF      3759
tile_17          EB7      3767
tile_18          EBF      3775
tile_19          EC7      3783
tile_2           E3F      3647
tile_20          ECF      3791
tile_21          ED7      3799
tile_22          EDF      3807
tile_23          EE7      3815
tile_24          EEF      3823
tile_25          EF7      3831
tile_26          EFF      3839
tile_27          F07      3847
tile_28          F0F      3855
tile_29          F17      3863
tile_3           E47      3655
tile_30          F1F      3871
tile_31          F27      3879
tile_4           E4F      3663
tile_5           E57      3671
tile_6           E5F      3679
tile_7           E67      3687
tile_8           E6F      3695
tile_9           E77      3703
var_buffer      4014      16404
var_buffer_len  4000      16384
var_curserx     4002      16386
var_cursery     4003      16387
var_last_char   4001      16385
var_scratch     4004      16388
vdp_address      BCF      3023
vdp_char         BD8      3032
vdp_char_nl      BEB      3051
vdp_char_scroll  C01      3073
vdp_cursor_move  BA9      2985
vdp_cursor_set   BA0      2976
vdp_im2_pos      C6F      3183
vdp_reg_write    36A      874
vdp_scroll       C17      3095
vdp_scroll_clear_l24  C4C      3148
vdp_scroll_clear_l24_loop  C4F      3151
vdp_scroll_line  C1D      3101
vdp_setup_font   373      883
vdp_setup_font_loop  37D      893
vdp_tms_clear    38B      907
vdp_tms_clear_loop  398      920
vdp_wait         370      880
vdpconsole_init  2F6      758
xmodem_ack      10FA      4346
xmodem_await_conn  FB3      4019
xmodem_end      105E      4190
xmodem_err      1024      4132
xmodem_init      F88      3976
xmodem_int      1065      4197
xmodem_int_cont 1084      4228
xmodem_nak      1108      4360
xmodem_out      10B6      4278
xmodem_packet    FBE      4030
xmodem_packet_EOT 101C      4124
xmodem_packet_get  FD0      4048
xmodem_packet_get_crc 1009      4105
xmodem_packet_get_data  FFA      4090
xmodem_read_timeount=03        3
xmodem_read_wait 1089      4233
xmodem_read_wait_loop 1097      4247
xmodem_read_wait_timeout 10B4      4276
xmodem_wait_out 10BC      4284
