   1:				.include "addresses.s"
**** functions/addresses.s ****
   1:     -	0000          	IO_CTC0_C0  equ 0x00
   2:     -	0001          	IO_CTC0_C1  equ 0x01
   3:     -	0002          	IO_CTC0_C2  equ 0x02
   4:     -	0003          	IO_CTC0_C3  equ 0x03
   5:				
   6:     -	0012          	IO_SIO0A_C  equ 00010010b
   7:     -	0010          	IO_SIO0A_D  equ 00010000b
   8:     -	0013          	IO_SIO0B_C  equ 00010011b
   9:     -	0011          	IO_SIO0B_D  equ 00010001b
  10:				
  11:     -	0020          	IO_RTC_SEC0  equ 00100000b
  12:     -	0021          	IO_RTC_SEC1  equ 00100001b
  13:     -	0022          	IO_RTC_MIN0  equ 00100010b
  14:     -	0023          	IO_RTC_MIN1  equ 00100011b
  15:     -	0024          	IO_RTC_HOUR  equ 00100100b
  16:     -	0025          	IO_RTC_AMPM  equ 00100101b
  17:     -	0026          	IO_RTC_DAY0  equ 00100110b
  18:     -	0027          	IO_RTC_DAY1  equ 00100111b
  19:     -	0028          	IO_RTC_MON0  equ 00101000b
  20:     -	0029          	IO_RTC_MON1  equ 00101001b
  21:     -	002A          	IO_RTC_YERR0 equ 00101010b
  22:     -	002B          	IO_RTC_YEAR1 equ 00101011b
  23:     -	002C          	IO_RTC_WEEK  equ 00101100b
  24:     -	002D          	IO_RTC_CTR_D equ 00101101b
  25:     -	002E          	IO_RTC_CTR_E equ 00101110b
  26:     -	002F          	IO_RTC_CTR_F equ 00101111b
  27:				
  28:     -	0040          	IO_AY0_ADDR equ 01000000b
  29:     -	0041          	IO_AY0_DATA equ 01000001b
  30:     -	0042          	IO_AY1_ADDR equ 01000010b
  31:     -	0043          	IO_AY1_DATA equ 01000011b
  32:				
  33:     -	0000          	START_ROM   equ 0x0000
  34:     -	0020          	IO_REG0     equ 0x20
  35:				
  36:     -	0100          	PROG_ROM_START equ 0x0100
**** main.asm ****
   2:     -	4000          	PROG_MEM_START equ 04000h
   3:				
   4:     -	4000          	MEM_CURSOR_STATE equ 0x4000  ; 1 byte var
   5:     -	4001          	MEM_LAST_CHAR equ 0x4001  ; 1 byte var
   6:     -	4003          	MEM_PROMPT_SIZE equ 0x4003
   7:     -	4005          	MEM_PROMPT_START equ 0x4005
   8:				
   9:     -	E000          	CMD_CRS_SPEED equ 0xE000
  10:				
  11:     -	0000          	init:
  12:     -	0000          	    org 0x0000
  13:    0+10	0000  C38C05  	    jp init_led
  14:				
  15:     -	0003          	INT_VEC:
  16:     -	000C          	    org 0Ch
  17:     -	000C  BE01    	    DEFW RX_CHA_AVAILABLE
  18:     -	000E          	    org 0Eh
  19:     -	000E  DC05    	    DEFW SPEC_RX_CONDITON
  20:				    
  21:				
  22:     -	0100          	    org 0x0100
  23:				; Include Kernel Libs
  24:				.include "conversions.s"
**** functions/conversions.s ****
   1:				
   2:				; Kernel Conversion Functions
   3:				
   4:				
   5:				
   6:				;*****************
   7:				; Convert Byte to Hex Char (ASCII)
   8:				;*****************
   9:				;Description: the StrLength function inline
  10:				;
  11:				;Inputs: A contains input byte
  12:				;
  13:				;Outputs: BC contains 2 Bytes of ASCII (HEX)
  14:				;
  15:				;Destroys: A, BC,
  16:     -	0100          	STRCONV_BYTES_TO_HEX:
  17:   10+11	0100  F5      	    PUSH AF;Backup A Register
  18:   21+4	0101  1F      	    RRA
  19:   25+4	0102  1F      	    RRA
  20:   29+4	0103  1F      	    RRA
  21:   33+4	0104  1F      	    RRA
  22:   37+17	0105  CD0F01  	    CALL STRCONV_BYTES_TO_HEX_1
  23:				    ;LD A,D
  24:   54+4	0108  47      	    LD B,A  
  25:   58+10	0109  F1      	    POP AF ; Reload first Byte
  26:   68+17	010A  CD0F01  	    CALL STRCONV_BYTES_TO_HEX_1
  27:				    ;LD A,D
  28:   85+4	010D  4F      	    LD C,A
  29:   89+10	010E  C9      	    RET
  30:				
  31:     -	010F          	STRCONV_BYTES_TO_HEX_1:
  32:   99+7	010F  E60F    	    AND 0x0F
  33:  106+7	0111  C630    	    ADD 48
  34:  113+7	0113  FE3A    	    CP 58 ; Check if less than 58 (less than ASCII 9)
  35:  120+7+5	0115  3802    	    JR C, STRCONV_BYTES_TO_HEX_2
  36:  127+7	0117  C607    	    ADD 7 ; A-F
  37:     -	0119          	STRCONV_BYTES_TO_HEX_2:
  38:				    ;LD D,A
  39:  134+10	0119  C9      	    RET
  40:				
  41:				
  42:				
**** main.asm ****
  25:				.include "console.s"
**** functions/console.s ****
   1:				; Kernel Konsole Functions
   2:				
   3:     -	0010          	VAR_CONSOLE_BAUD equ 16d ; BAUD 14400 @ 3.686441MHz & CPUCLK/2
   4:				
   5:				;*****************
   6:				; CONSOLE_PRINTSTR
   7:				;*****************
   8:				;Description: Sends null-terminated String via Serial Port
   9:				;
  10:				;Inputs: BC contains start address of stringg
  11:				;
  12:				;Outputs: Output to IO_SIO0B_D
  13:				;
  14:				;Destroys: none
  15:     -	011A          	CONSOLE_PRINTSTR:
  16:				    ; BC contains String offset
  17:				    ; Prints null terminated string
  18:  144+11	011A  F5      	    PUSH AF
  19:  155+11	011B  C5      	    PUSH BC
  20:     -	011C          	CONSOLE_PRINTSTR_LOOP:
  21:  166+7	011C  0A      	    LD A,(BC)
  22:				
  23:				    ; Return if nullbyte
  24:  173+7	011D  F600    	    OR 0
  25:  180+7+5	011F  280C    	    JR Z, CONSOLE_PRINTSTR_EXIT
  26:				    ; Print Char
  27:  187+11	0121  D311    	    out (IO_SIO0B_D),A
  28:  198+17	0123  CDFE07  	    CALL TermPrintChar
  29:  215+17	0126  CD3B01  	    call TX_EMP
  30:				
  31:				    ; INC BC and JP start of loop
  32:  232+6	0129  03      	    INC BC
  33:  238+10	012A  C31C01  	    jp CONSOLE_PRINTSTR_LOOP
  34:     -	012D          	CONSOLE_PRINTSTR_EXIT:
  35:  248+10	012D  C1      	    POP BC
  36:  258+10	012E  F1      	    POP AF
  37:  268+10	012F  C9      	    RET
  38:				
  39:				;*****************
  40:				; CONSOLE_READ_CHAR
  41:				;*****************
  42:				;Description: Gets a single byte from console port
  43:				;
  44:				;Inputs: BC contains start address of stringg
  45:				;
  46:				;Outputs: Output to IO_SIO0B_D
  47:				;
  48:				;Destroys: A
  49:				
  50:     -	0130          	CONSOLE_READ_CHAR:
  51:  278+4	0130  AF      	    XOR	A
  52:  282+11	0131  D313    	    OUT (IO_SIO0B_C), A
  53:  293+11	0133  DB13    	    IN A, (IO_SIO0B_C)
  54:  304+7	0135  E601    	    AND	1
  55:  311+5+6	0137  C8      	    RET	Z	
  56:  316+11	0138  DB11    	    IN A, (IO_SIO0B_D)
  57:				    ;LD D,A
  58:  327+10	013A  C9      	    RET
  59:				
  60:				;*****************
  61:				; CONSOLE_TX_WAIT/TX_EMP
  62:				;*****************
  63:				;Description: Waits until byte is sent
  64:				;
  65:				;Inputs: none
  66:				;
  67:				;Outputs: none
  68:				;
  69:				;Destroys: A
  70:     -	013B          	TX_EMP: ; DONT USE!!! DEPRECATED
  71:  337+10	013B  C33E01  	    jp CONSOLE_TX_WAIT
  72:     -	013E          	CONSOLE_TX_WAIT:
  73:				    ; check for TX buffer empty
  74:  347+4	013E  97      	    sub a ;clear a, write into WR0: select RR0
  75:  351+4	013F  3C      	    inc a ;select RR1
  76:  355+11	0140  D313    	    out (IO_SIO0B_C),A
  77:  366+11	0142  DB13    	    in A,(IO_SIO0B_C) ;read RRx
  78:  377+8	0144  CB47    	    bit 0,A
  79:  385+10	0146  CA3E01  	    jp z,CONSOLE_TX_WAIT
  80:  395+10	0149  C9      	    ret
  81:				
  82:				;*****************
  83:				; CONSOLE_INIT
  84:				;*****************
  85:				;Description: Initializes CTC & SIO on Port B
  86:				;
  87:				;Inputs: none 
  88:				;
  89:				;Outputs: none
  90:				;
  91:				;Destroys: A
  92:     -	014A          	CONSOLE_INIT:
  93:				    ; Setup CTC
  94:				    ; Init Ch1 (SIO0B)
  95:				    ; For 4MHz CPU CLK 00000111b
  96:				    ; For EXT CLK
  97:  405+7	014A  3E0F    	    LD A,00001111b
  98:  412+11	014C  D301    	    OUT (IO_CTC0_C1),A
  99:				
 100:  423+7	014E  3E10    	    LD A,VAR_CONSOLE_BAUD
 101:  430+11	0150  D301    	    OUT (IO_CTC0_C1),A
 102:				
 103:				    ; Setup SIO
 104:				     ;set up TX and RX:W
 105:  441+7	0152  3E30    	    ld a,00110000b ;write into WR0: error reset, select WR0
 106:  448+11	0154  D313    	    out (IO_SIO0B_C),A
 107:  459+7	0156  3E18    	    ld a,018h ;write into WR0: channel reset
 108:  466+11	0158  D313    	    out (IO_SIO0B_C),A
 109:				
 110:  477+7	015A  3E04    	    ld a,004h ;write into WR0: select WR4
 111:  484+11	015C  D313    	    out (IO_SIO0B_C),A
 112:				    ;ld a,44h ;44h write into WR4: clkx16,1 stop bit, no parity
 113:  495+7	015E  3E04    	    ld a,04h ;44h write into WR4: clkx1,1 stop bit, no parity
 114:  502+11	0160  D313    	    out (IO_SIO0B_C),A
 115:				
 116:  513+7	0162  3E05    	    ld a,005h ;write into WR0: select WR5
 117:  520+11	0164  D313    	    out (IO_SIO0B_C),A
 118:				    ;ld a,0E8h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
 119:  531+7	0166  3E68    	    ld a,068h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
 120:  538+11	0168  D313    	    out (IO_SIO0B_C),A
 121:				
 122:  549+7	016A  3E01    	    ld a,01h ;write into WR0: select WR1
 123:  556+11	016C  D313    	    out (IO_SIO0B_C),A
 124:  567+7	016E  3E04    	    ld a,00000100b ;no interrupt in CH B, special RX condition affects vect
 125:  574+11	0170  D313    	    out (IO_SIO0B_C),A
 126:				
 127:  585+7	0172  3E02    	    ld a,02h ;write into WR0: select WR2
 128:  592+11	0174  D313    	    out (IO_SIO0B_C),A
 129:  603+7	0176  3E00    	    ld a,0h ;write into WR2: cmd line int vect (see int vec table)
 130:				    ;bits D3,D2,D1 are changed according to RX condition
 131:  610+11	0178  D313    	    out (IO_SIO0B_C),A
 132:				
 133:				    ;ld a,01h ;write into WR0: select WR1
 134:				    ;out (IO_SIO0B_C),A
 135:				    ;ld a,00011000b ;interrupt on all RX characters, parity is not a spec RX condition
 136:				    ;buffer overrun is a spec RX condition
 137:				    ;out (IO_SIO0B_C),A
 138:				
 139:				    ;enable SIO channel A RX
 140:  621+7	017A  3E03    	    ld a,003h ;write into WR0: select WR3
 141:  628+11	017C  D313    	    out (IO_SIO0B_C),A
 142:  639+7	017E  3EC1    	    ld a,0C1h ;RX 8bit, auto enable off, RX on
 143:  646+11	0180  D313    	    out (IO_SIO0B_C),A
 144:				    ;Channel A RX active
 145:				
 146:  657+7	0182  3E25    	    LD A,'%'
 147:  664+11	0184  D311    	    out (IO_SIO0B_D),A
 148:  675+17	0186  CD3E01  	    call CONSOLE_TX_WAIT
 149:				
 150:  692+10	0189  C9      	    RET
 151:				;;
 152:				
 153:				;*****************
 154:				; CONSOLE_CURSOR
 155:				;*****************
 156:				;Description: Initializes CTC & SIO on Port B
 157:				;
 158:				;Inputs: A=0 off , A=1 on 
 159:				;
 160:				;Outputs: none
 161:				;
 162:				;Destroys: A
 163:     -	018A          	CONSOLE_CURSOR:
 164:  702+4	018A  A7      	    AND A               ;Check if A == 0
 165:  706+10	018B  CA9201  	    JP Z,CONSOLE_CURSOR_OFF
 166:				
 167:  716+10	018E  019601  	    LD BC,[MSG_CRSR_0]
 168:				    ;CALL CONSOLE_PRINTSTR
 169:				
 170:  726+10	0191  C9      	    RET                 ;Exit Sub
 171:     -	0192          	CONSOLE_CURSOR_OFF:
 172:  736+10	0192  019D01  	    LD BC,[MSG_CRSR_1]
 173:				    ;CALL CONSOLE_PRINTSTR
 174:				
 175:  746+10	0195  C9      	    RET                 ;Exit Sub
 176:				
 177:     -	0196          	MSG_CRSR_0:
 178:     -	0196  1B5B3F32	    db 0x1B, "[?25h",0
	              356800
 179:     -	019D          	MSG_CRSR_1:
**** main.asm ****
  26:     -	019D  1B5B3F32	    db 0x1B, "[?25l",0
	              356C00
  27:				.include "io.s"
**** functions/io.s ****
   1:				; A contains Data
   2:				; C Contains Addr
   3:     -	01A4          	AY0_WRITE_REG:
   4:  756+4	01A4  47      	    LD B,A
   5:  760+4	01A5  7A      	    LD A,D
   6:  764+11	01A6  D340    	    OUT (IO_AY0_ADDR),A
   7:  775+4	01A8  78      	    LD A,B
   8:  779+11	01A9  D341    	    OUT (IO_AY0_DATA),A
   9:  790+10	01AB  C9      	    RET
  10:				
  11:				; Serial Util Functions
  12:     -	01AC          	A_RTS_OFF:
  13:  800+7	01AC  3E05    	    ld a,005h ;write into WR0: select WR5
  14:  807+11	01AE  D313    	    out (IO_SIO0B_C),A
  15:  818+7	01B0  3EE8    	    ld a,0E8h ;DTR active, TX 8bit, BREAK off, TX on, RTS inactive
  16:  825+11	01B2  D313    	    out (IO_SIO0B_C),A
  17:  836+10	01B4  C9      	    ret
  18:     -	01B5          	A_RTS_ON:
  19:  846+7	01B5  3E05    	    ld a,005h ;write into WR0: select WR5
  20:  853+11	01B7  D313    	    out (IO_SIO0B_C),A
  21:  864+7	01B9  3EEA    	    ld a,0EAh ;DTR active, TX 8bit, BREAK off, TX on, RTS active
  22:  871+11	01BB  D313    	    out (IO_SIO0B_C),A
  23:  882+10	01BD  C9      	    ret
  24:				
  25:     -	01BE          	RX_CHA_AVAILABLE:
  26:  892+11	01BE  F5      	    push AF ;backup AF
  27:				
  28:  903+7	01BF  3EFF    	    LD A,0xFF
  29:  910+11	01C1  D320    	    OUT (IO_REG0),A
  30:				
  31:  921+17	01C3  CDAC01  	    call A_RTS_OFF
  32:  938+11	01C6  DB11    	    in A,(IO_SIO0B_D) ;read RX character into A
  33:				    ; A holds received character
  34:				    ;do something with the received character
  35:				    ;echo character to host
  36:  949+11	01C8  D311    	    out (IO_SIO0B_D),A
  37:  960+17	01CA  CD3B01  	    call TX_EMP
  38:  977+4	01CD  FB      	    ei ;see comments below
  39:  981+17	01CE  CDB501  	    call A_RTS_ON ;see comments below
  40:				
  41:				    ;LD A,0x00
  42:				    ;OUT (IO_REG0),A
  43:				
  44:  998+10	01D1  F1      	    pop AF ;restore AF
**** main.asm ****
  28: 1008+14	01D2  ED4D    	    Reti
  29:				.include "commands.s"
**** functions/commands.s ****
   1:     -	01D4          	MOD_COMMANDS:
   2:				    ;org 0x0370
   3:				
   4:				;-------------------------------------------------------------
   5:				; command directory
   6:				;-------------------------------------------------------------
   7:     -	01D4          	ARR_COMMANDS:
   8:				    ; Version
   9:     -	01D4  D902    	    word [CMD_VERSION]
  10:     -	01D6  76657200	    db "ver",0
  11:				    ; Clear Screen
  12:     -	01DA  EE02    	    word [CMD_CLEAR]
  13:     -	01DC  636C7200	    db "clr",0
  14:				    ; Help
  15:     -	01E0  C402    	    word [CMD_HELP]
  16:     -	01E2  3F00    	    db "?",0
  17:				    ; Set Memory
  18:     -	01E4  9503    	    word [CMD_MSET]
  19:     -	01E6  6D736574	    db "mset $",0
	              202400
  20:				    ; Get Memory
  21:     -	01ED  B903    	    word [CMD_MGET]
  22:     -	01EF  6D676574	    db "mget $",0
	              202400
  23:				    ; IO Set
  24:     -	01F6  6903    	    word [CMD_IOSET]
  25:     -	01F8  696F7365	    db "ioset $",0
	              74202400
  26:				    ; IO Get
  27:     -	0200  3003    	    word [CMD_IOGET]
  28:     -	0202  696F6765	    db "ioget $",0
	              74202400
  29:				    ; Hey-Dump
  30:     -	020A  F802    	    word [CMD_HEXDUMP]
  31:     -	020C  68642024	    db "hd $",0
	              00
  32:				    ; Exec
  33:     -	0211  0C03    	    word [CMD_EXEC]
  34:     -	0213  65786563	    db "exec $",0
	              202400
  35:				
  36:				    ; Exec
  37:     -	021A  1E03    	    word [CMD_CALL]
  38:     -	021C  63616C6C	    db "call $",0
	              202400
  39:				    
  40:				    ;File System Functions
  41:				    ; List Files
  42:     -	0223  F803    	    word [CMD_NOT_IMPLEMENTED]
  43:     -	0225  646C6973	    db "dlist",0
	              7400
  44:				
  45:				    ; Go Subdirectory
  46:     -	022B  F803    	    word [CMD_NOT_IMPLEMENTED]
  47:     -	022D  64676F00	    db "dgo",0
  48:				
  49:				    ; Load File to Memory
  50:     -	0231  F803    	    word [CMD_NOT_IMPLEMENTED]
  51:     -	0233  646C6F61	    db "dload ",0
	              642000
  52:				
  53:				    ; Store File from Memory
  54:     -	023A  F803    	    word [CMD_NOT_IMPLEMENTED]
  55:     -	023C  64736176	    db "dsave ",0
	              652000
  56:				
  57:				    ; mount FS
  58:     -	0243  F803    	    word [CMD_NOT_IMPLEMENTED]
  59:     -	0245  646D6F75	    db "dmount ",0
	              6E742000
  60:				
  61:				    ; ununt FS
  62:     -	024D  F803    	    word [CMD_NOT_IMPLEMENTED]
  63:     -	024F  64756D6F	    db "dumount ",0
	              756E7420
	              00
  64:				
  65:				    ; remove file
  66:     -	0258  F803    	    word [CMD_NOT_IMPLEMENTED]
  67:     -	025A  6472656D	    db "drem ",0
	              2000
  68:				
  69:				    ; disk info
  70:     -	0260  F803    	    word [CMD_NOT_IMPLEMENTED]
  71:     -	0262  64696E66	    db "dinfo ",0
	              6F2000
  72:				
  73:     -	0269  0000    	    word 0x0000 ; END
  74:				
  75:     -	026B          	STR_NOTFOUND:
  76:     -	026B  0D0A696E	    db 13,10,"invalid command/syntax",13,10,0
	              76616C69
	              6420636F
	              6D6D616E
	              642F7379
	              6E746178
	              0D0A00
  77:				
  78:				;-------------------------------------------------------------
  79:				; command parser
  80:				;-------------------------------------------------------------
  81:				
  82:				;*****************
  83:				; PARSE_CMD
  84:				;*****************
  85:				;Description: Pares Input Command
  86:				;
  87:				;Inputs: none
  88:				;
  89:				;Outputs: none
  90:				;
  91:				;Destroys: A, BC, DE, HL
  92:     -	0286          	PARSE_CMD:
  93: 1022+10	0286  11D401  	    LD DE, [ARR_COMMANDS]           ; Load compare ADDR 
  94:				
  95:     -	0289          	PARSE_CMD_START:
  96: 1032+7	0289  1A      	    LD A, (DE)                       ;Load first 2 bytes: Jump address
  97: 1039+4	028A  4F      	    LD C,A
  98: 1043+6	028B  13      	    INC DE   
  99: 1049+7	028C  1A      	    LD A, (DE)                       ;Load first 2 bytes: Jump address
 100: 1056+4	028D  47      	    LD B,A
 101: 1060+6	028E  13      	    INC DE                          ;DE is now the starting address of the null-terminated-string 
 102:				    
 103:				    ; Compare 16 bit routine pointer
 104: 1066+10	028F  210000  	    LD HL,0000h                     ;load HL with value to compare -> 0x0000
 105: 1076+15	0292  ED42    	    SBC HL,BC                       ;substract HL from BC. If both match, Z flag will be set
 106: 1091+10	0294  CAB002  	    JP Z,PARSE_CMD_NO_MATCH         ;jmp to exit block for parser
 107:				    ; if > 0 -> continue
 108:				
 109: 1101+10	0297  210540  	    LD HL, [MEM_PROMPT_START]       ; Input Buffer
 110: 1111+17	029A  CDB702  	    CALL PARSE_CMD_CMP_STRING_START ;parse 1st elemeent
 111: 1128+10	029D  CAA902  	    JP Z,PARSE_CMD_START_FOUND      ;jmp to pointer if match
 112:				
 113:     -	02A0          	PARSE_CMD_START_NOT_FOUND:          ;inc DE to next element
 114: 1138+7	02A0  1A      	    LD A,(DE)                       ;find end of string -> load current byte
 115: 1145+6	02A1  13      	    INC DE                          
 116: 1151+4	02A2  A7      	    AND A                           ;find null termination
 117: 1155+10	02A3  CA8902  	    JP Z, PARSE_CMD_START          ;if current byte-1 == 0x00 -> continue loop @ PARSE_CMD_START
 118: 1165+10	02A6  C3A002  	    JP PARSE_CMD_START_NOT_FOUND
 119:				
 120:     -	02A9          	PARSE_CMD_START_FOUND:              ;if command matched
 121: 1175+17	02A9  CDAD02  	    CALL PARSE_CMD_START_EXEC       ;call routine
 122: 1192+10	02AC  C9      	    RET                             ;exit parser
 123:				
 124:     -	02AD          	PARSE_CMD_START_EXEC:               ;dynamic Z80 call -> serves as function and will put last PC value on stack
 125:				
 126:				
 127: 1202+4	02AD  60      	    LD H,B                       ;load HL with pointer to routine
 128: 1206+4	02AE  69      	    LD L,C
 129: 1210+4	02AF  E9      	    JP (HL)                         ;jmp to routine
 130:				    
 131:     -	02B0          	PARSE_CMD_NO_MATCH:                 ;if no command matched
 132: 1214+10	02B0  016B02  	    LD BC,[STR_NOTFOUND]            ;load pointer to string STR_NOTFOUND
 133: 1224+17	02B3  CD1A01  	    CALL CONSOLE_PRINTSTR           ;print null-terminated string to console
 134: 1241+10	02B6  C9      	    RET                             ;exit parser
 135:				
 136:				; HL = String to compare
 137:				; DE = String Pattern
 138:     -	02B7          	PARSE_CMD_CMP_STRING_START:
 139: 1251+7	02B7  1A      	    LD A,(DE)
 140: 1258+4	02B8  A7      	    AND A
 141: 1262+5+6	02B9  C8      	    RET Z; RETURN Z=1 if reached END wizhout mismatch
 142: 1267+7	02BA  BE      	    CP (HL)
 143: 1274+5+6	02BB  C0      	    RET NZ; If not Match (z=0) exit
 144:     -	02BC          	PARSE_CMD_CMP_STRING_START_MATCHED:
 145: 1279+7	02BC  7E      	    LD A,(HL)
 146: 1286+4	02BD  A7      	    AND A; String to compare reached end
 147: 1290+5+6	02BE  C8      	    RET Z
 148:     -	02BF          	PARSE_CMD_CMP_STRING_START_CONTINUE:
 149: 1295+6	02BF  23      	    INC HL
 150: 1301+6	02C0  13      	    INC DE
 151: 1307+10	02C1  C3B702  	    JP PARSE_CMD_CMP_STRING_START
 152:				    
 153:				;-------------------------------------------------------------
 154:				; commands routines
 155:				;-------------------------------------------------------------
 156:     -	02C4          	CMD_HELP:
 157: 1317+10	02C4  017904  	    LD BC,[MSG_CMD_HELP]
 158: 1327+17	02C7  CD1A01  	    CALL CONSOLE_PRINTSTR
 159:				
 160: 1344+7	02CA  3E0D    	    LD A,13
 161: 1351+11	02CC  D311    	    out (IO_SIO0B_D),A
 162: 1362+17	02CE  CD3B01  	    call TX_EMP
 163: 1379+7	02D1  3E0A    	    LD A,10
 164: 1386+11	02D3  D311    	    out (IO_SIO0B_D),A
 165: 1397+17	02D5  CD3B01  	    call TX_EMP
 166: 1414+10	02D8  C9      	    RET
 167:				
 168:     -	02D9          	CMD_VERSION:
 169: 1424+10	02D9  01F304  	    LD BC,[MSG_CMD_VER]
 170: 1434+17	02DC  CD1A01  	    CALL CONSOLE_PRINTSTR
 171:				
 172: 1451+7	02DF  3E0D    	    LD A,13
 173: 1458+11	02E1  D311    	    out (IO_SIO0B_D),A
 174: 1469+17	02E3  CD3B01  	    call TX_EMP
 175: 1486+7	02E6  3E0A    	    LD A,10
 176: 1493+11	02E8  D311    	    out (IO_SIO0B_D),A
 177: 1504+17	02EA  CD3B01  	    call TX_EMP
 178: 1521+10	02ED  C9      	    RET
 179:				
 180:     -	02EE          	CMD_CLEAR:
 181: 1531+10	02EE  011933  	    LD BC,[MSG_CLEAR]
 182: 1541+17	02F1  CD1A01  	    CALL CONSOLE_PRINTSTR
 183: 1558+17	02F4  CDEF32  	    CALL TermClear
 184: 1575+10	02F7  C9      	    RET
 185:				
 186:     -	02F8          	CMD_HEXDUMP:
 187: 1585+10	02F8  010940  	    LD BC,MEM_PROMPT_START + 4
 188: 1595+17	02FB  CD8407  	    CALL DHEX_TO_BYTE
 189: 1612+4	02FE  67      	    LD H,A
 190:				
 191: 1616+10	02FF  010B40  	    LD BC,MEM_PROMPT_START + 6
 192: 1626+17	0302  CD8407  	    CALL DHEX_TO_BYTE
 193: 1643+7	0305  E6F0    	    AND 0xF0
 194: 1650+4	0307  6F      	    LD L,A
 195:				
 196: 1654+17	0308  CDE106  	    CALL PRINT_HEXDUMP
 197: 1671+10	030B  C9      	    RET
 198:				
 199:     -	030C          	CMD_EXEC:
 200: 1681+10	030C  010B40  	    LD BC,MEM_PROMPT_START + 6
 201: 1691+17	030F  CD8407  	    CALL DHEX_TO_BYTE
 202: 1708+4	0312  67      	    LD H,A
 203:				
 204: 1712+10	0313  010D40  	    LD BC,MEM_PROMPT_START + 8
 205: 1722+17	0316  CD8407  	    CALL DHEX_TO_BYTE
 206: 1739+4	0319  6F      	    LD L,A
 207:				
 208: 1743+10	031A  31FF7F  	    LD SP,0x7FFF
 209: 1753+4	031D  E9      	    JP HL
 210:				
 211:     -	031E          	CMD_CALL:
 212: 1757+10	031E  010B40  	    LD BC,MEM_PROMPT_START + 6
 213: 1767+17	0321  CD8407  	    CALL DHEX_TO_BYTE
 214: 1784+4	0324  67      	    LD H,A
 215:				
 216: 1788+10	0325  010D40  	    LD BC,MEM_PROMPT_START + 8
 217: 1798+17	0328  CD8407  	    CALL DHEX_TO_BYTE
 218: 1815+4	032B  6F      	    LD L,A
 219: 1819+17	032C  CD2F03  	    CALL CMD_CALL_TRICK
 220:				
 221:     -	032F          	CMD_CALL_TRICK:
 222: 1836+4	032F  E9      	    JP HL
 223:				
 224:				
 225:     -	0330          	CMD_IOGET:
 226: 1840+10	0330  010C40  	    LD BC,MEM_PROMPT_START + 7
 227: 1850+17	0333  CD8407  	    CALL DHEX_TO_BYTE
 228: 1867+4	0336  4F      	    LD C, A
 229:				
 230: 1871+7	0337  3E0D    	    LD A,13
 231: 1878+11	0339  D311    	    out (IO_SIO0B_D),A
 232: 1889+17	033B  CDFE07  	    call TermPrintChar
 233: 1906+17	033E  CD3B01  	    call TX_EMP
 234: 1923+7	0341  3E0A    	    LD A,10
 235: 1930+11	0343  D311    	    out (IO_SIO0B_D),A
 236: 1941+17	0345  CDFE07  	    call TermPrintChar
 237: 1958+17	0348  CD3B01  	    call TX_EMP
 238:				
 239: 1975+12	034B  ED78    	    IN A,(C)
 240: 1987+17	034D  CDA606  	    CALL PRINT_A_HEX
 241: 2004+17	0350  CDFE07  	    call TermPrintChar
 242: 2021+7	0353  3E68    	    LD A,'h'
 243:				
 244: 2028+11	0355  D311    	    out (IO_SIO0B_D),A
 245: 2039+17	0357  CD3B01  	    call TX_EMP
 246: 2056+7	035A  3E0D    	    LD A,13
 247: 2063+11	035C  D311    	    out (IO_SIO0B_D),A
 248: 2074+17	035E  CD3B01  	    call TX_EMP
 249: 2091+7	0361  3E0A    	    LD A,10
 250: 2098+11	0363  D311    	    out (IO_SIO0B_D),A
 251: 2109+17	0365  CD3B01  	    call TX_EMP
 252: 2126+10	0368  C9      	    RET
 253:				
 254:     -	0369          	CMD_IOSET:
 255: 2136+10	0369  010C40  	    LD BC,MEM_PROMPT_START + 7
 256: 2146+17	036C  CD8407  	    CALL DHEX_TO_BYTE
 257: 2163+4	036F  67      	    LD H,A
 258:				
 259: 2167+10	0370  010F40  	    LD BC,MEM_PROMPT_START + 10
 260: 2177+17	0373  CD8407  	    CALL DHEX_TO_BYTE
 261:				
 262:				    ;; DEBUG START
 263: 2194+11	0376  F5      	    PUSH AF
 264:				
 265: 2205+7	0377  3E20    	    LD A,' '
 266: 2212+11	0379  D311    	    out (IO_SIO0B_D),A
 267: 2223+17	037B  CD3B01  	    call TX_EMP
 268:				
 269: 2240+4	037E  7C      	    LD A,H
 270: 2244+17	037F  CDA606  	    CALL PRINT_A_HEX
 271:				
 272: 2261+10	0382  F1      	    POP AF
 273:				    ;; DEBUG END
 274:				
 275: 2271+4	0383  4C      	    LD C,H
 276: 2275+12	0384  ED79    	    OUT (C),A
 277:				
 278: 2287+7	0386  3E0D    	    LD A,13
 279: 2294+11	0388  D311    	    out (IO_SIO0B_D),A
 280: 2305+17	038A  CD3B01  	    call TX_EMP
 281: 2322+7	038D  3E0A    	    LD A,10
 282: 2329+11	038F  D311    	    out (IO_SIO0B_D),A
 283: 2340+17	0391  CD3B01  	    call TX_EMP
 284: 2357+10	0394  C9      	    RET
 285:				
 286:     -	0395          	CMD_MSET:
 287: 2367+10	0395  010B40  	    LD BC,MEM_PROMPT_START + 6
 288: 2377+17	0398  CD8407  	    CALL DHEX_TO_BYTE
 289: 2394+4	039B  67      	    LD H,A
 290:				
 291: 2398+10	039C  010D40  	    LD BC,MEM_PROMPT_START + 8
 292: 2408+17	039F  CD8407  	    CALL DHEX_TO_BYTE
 293: 2425+4	03A2  6F      	    LD L,A
 294:				
 295:				    
 296: 2429+10	03A3  011040  	    LD BC,MEM_PROMPT_START + 11
 297: 2439+17	03A6  CD8407  	    CALL DHEX_TO_BYTE
 298:				    
 299: 2456+7	03A9  77      	    LD (HL),A
 300:				
 301: 2463+7	03AA  3E0D    	    LD A,13
 302: 2470+11	03AC  D311    	    out (IO_SIO0B_D),A
 303: 2481+17	03AE  CD3B01  	    call TX_EMP
 304: 2498+7	03B1  3E0A    	    LD A,10
 305: 2505+11	03B3  D311    	    out (IO_SIO0B_D),A
 306: 2516+17	03B5  CD3B01  	    call TX_EMP
 307: 2533+10	03B8  C9      	    RET
 308:				
 309:     -	03B9          	CMD_MGET:
 310: 2543+10	03B9  010B40  	    LD BC,MEM_PROMPT_START + 6
 311: 2553+17	03BC  CD8407  	    CALL DHEX_TO_BYTE
 312: 2570+4	03BF  67      	    LD H,A
 313:				
 314: 2574+10	03C0  010D40  	    LD BC,MEM_PROMPT_START + 8
 315: 2584+17	03C3  CD8407  	    CALL DHEX_TO_BYTE
 316: 2601+4	03C6  6F      	    LD L,A
 317:				
 318: 2605+7	03C7  3E0D    	    LD A,13
 319: 2612+11	03C9  D311    	    out (IO_SIO0B_D),A
 320: 2623+17	03CB  CDFE07  	    call TermPrintChar
 321: 2640+17	03CE  CD3B01  	    call TX_EMP
 322: 2657+7	03D1  3E0A    	    LD A,10
 323: 2664+11	03D3  D311    	    out (IO_SIO0B_D),A
 324: 2675+17	03D5  CDFE07  	    call TermPrintChar
 325: 2692+17	03D8  CD3B01  	    call TX_EMP
 326: 2709+7	03DB  7E      	    LD A,(HL)
 327: 2716+17	03DC  CDA606  	    CALL PRINT_A_HEX
 328: 2733+7	03DF  3E68    	    LD A,'h'
 329: 2740+11	03E1  D311    	    out (IO_SIO0B_D),A
 330: 2751+17	03E3  CDFE07  	    call TermPrintChar
 331: 2768+17	03E6  CD3B01  	    call TX_EMP
 332: 2785+7	03E9  3E0D    	    LD A,13
 333: 2792+11	03EB  D311    	    out (IO_SIO0B_D),A
 334: 2803+17	03ED  CD3B01  	    call TX_EMP
 335: 2820+7	03F0  3E0A    	    LD A,10
 336: 2827+11	03F2  D311    	    out (IO_SIO0B_D),A
 337: 2838+17	03F4  CD3B01  	    call TX_EMP
 338: 2855+10	03F7  C9      	    RET
 339:				
 340:     -	03F8          	CMD_NOT_IMPLEMENTED:
 341: 2865+10	03F8  017405  	    LD BC,[MSG_NOT_IMPLEMENTED]
 342: 2875+17	03FB  CD1A01  	    CALL CONSOLE_PRINTSTR
 343: 2892+10	03FE  C9      	    RET
 344:				
 345:				;-------------------------------------------------------------
 346:				; commands strings
 347:				;-------------------------------------------------------------
 348:     -	03FF          	MSG_SYS_VER:
 349:     -	03FF  1B5B324A	    db 27, '[2J', 27, '[H'
	              1B5B48
 350:     -	0406  5A384320	    db 'Z8C Mk IV - A Z80 Homebrew Computer',13,10
	              4D6B2049
	              56202D20
	              41205A38
	              3020486F
	              6D656272
	              65772043
	              6F6D7075
	              7465720D
	              0A
 351:     -	042B  4D6F6E69	    db 'Monitor ROM Ver. 1.0 by Dennis Gunia (2022)',13,10
	              746F7220
	              524F4D20
	              5665722E
	              20312E30
	              20627920
	              44656E6E
	              69732047
	              756E6961
	              20283230
	              3232290D
	              0A
 352:     -	0458  34386B20	    db '48k RAM - 4MHz Z80 CPU - Stack $',0
	              52414D20
	              2D20344D
	              487A205A
	              38302043
	              5055202D
	              20537461
	              636B2024
	              00
 353:				
 354:     -	0479          	MSG_CMD_HELP:
 355:     -	0479  0D0A    	    db 13,10
 356:     -	047B  68642024	    db "hd $<addr>  mget $<addr>"
	              3C616464
	              723E2020
	              6D676574
	              20243C61
	              6464723E
 357:     -	0493  6D736574	    db "mset $<addr> <val> ioget $<addr>",13,10
	              20243C61
	              6464723E
	              203C7661
	              6C3E2069
	              6F676574
	              20243C61
	              6464723E
	              0D0A
 358:     -	04B5  696F7365	    db "ioset $<addr> <val>  ? clr  ver",13,10
	              7420243C
	              61646472
	              3E203C76
	              616C3E20
	              203F2063
	              6C722020
	              7665720D
	              0A
 359:     -	04D6  65786563	    db "exec $<addr>  call $<addr>",13,10
	              20243C61
	              6464723E
	              20206361
	              6C6C2024
	              3C616464
	              723E0D0A
 360:				    ;db "dlist  dgo <dir>  dload <file> ($<addr>)",13,10
 361:				    ;db "dsave <file> $<addr> [<len>,$<addr_end>]",13,10
 362:				    ;db "dmount  dumount  drem <file>  dinfo"
 363:     -	04F2  00      	    db 0
 364:				
 365:     -	04F3          	MSG_CMD_VER:
 366:     -	04F3  0D0A    	    db 13,10
 367:     -	04F5  5A384320	    db "Z8C Monitor Programm ROM Version 1.0",13,10
	              4D6F6E69
	              746F7220
	              50726F67
	              72616D6D
	              20524F4D
	              20566572
	              73696F6E
	              20312E30
	              0D0A
 368:     -	051B  57726974	    db "Written by Dennis Gunia, 2022",13,10
	              74656E20
	              62792044
	              656E6E69
	              73204775
	              6E69612C
	              20323032
	              320D0A
 369:     -	053A  332E3638	    db "3.686411MHz 48K RAM System, John 3,16",13,10
	              36343131
	              4D487A20
	              34384B20
	              52414D20
	              53797374
	              656D2C20
	              4A6F686E
	              20332C31
	              360D0A
 370:     -	0561  7777772E	    db "www.dennisgunia.de"
	              64656E6E
	              69736775
	              6E69612E
	              6465
 371:     -	0573  00      	    db 0
 372:				
 373:     -	0574          	MSG_NOT_IMPLEMENTED:
 374:     -	0574  0D0A    	    db 13,10
 375:     -	0576  4E6F7420	    db "Not implemented yet",13,10
	              696D706C
	              656D656E
	              74656420
	              7965740D
	              0A
**** main.asm ****
  30:     -	058B  00      	    db 0
  31:				
  32:				; include subroutines
  33:				;.include "sub_soundtest.s"
  34:				
  35:				
  36:     -	058C          	init_led:
  37:				    ;org PROG_ROM_START
  38: 2902+7	058C  3E00    	    LD A,0x00
  39: 2909+11	058E  D320    	    OUT (IO_REG0),A
  40:				
  41:     -	0590          	init_console:
  42: 2920+17	0590  CD4A01  	    CALL CONSOLE_INIT
  43: 2937+10	0593  C3A407  	    jp TermInit
  44:     -	0596          	init_sound:
  45: 2947+7	0596  1608    	    LD	  D,0x08	; Select register #8
  46: 2954+7	0598  3E00    	    LD	  A,0x00	; Volume channel A 0
  47: 2961+17	059A  CDA401  	    CALL AY0_WRITE_REG
  48: 2978+7	059D  1609    	    LD	  D,0x09	; Select register #9
  49: 2985+7	059F  3E00    	    LD	  A,0x00	; Volume channel B 0
  50: 2992+17	05A1  CDA401  	    CALL AY0_WRITE_REG
  51: 3009+7	05A4  160A    	    LD	  D,0x0A	; Select register #10
  52: 3016+7	05A6  3E00    	    LD	  A,0x00	; Volume channel C 0
  53: 3023+17	05A8  CDA401  	    CALL AY0_WRITE_REG
  54:				    
  55:				
  56:				;INT_INI:
  57:				;    ld A,0
  58:				;    ld I,A  ;load I reg with zero
  59:				;    im 2    ;set int mode 2
  60:				;    ei      ;enable interupt
  61:				
  62: 3040+7	05AB  3E00    	    LD A,0x00
  63: 3047+11	05AD  D311    	    OUT (IO_SIO0B_D),A
  64: 3058+17	05AF  CD3B01  	    CALL TX_EMP
  65:				
  66: 3075+17	05B2  CDB501  	    call A_RTS_ON
  67:				
  68:				    ; PRINT BANNER
  69: 3092+10	05B5  01FF03  	    LD BC, [MSG_SYS_VER]
  70:				    ;CALL CONSOLE_PRINTSTR
  71:				
  72: 3102+10	05B8  31FF7F  	    LD SP,07FFFh
  73:				    ; Print SP Location
  74: 3112+20	05BB  ED730040	    LD (0x4000),SP
  75: 3132+13	05BF  3A0140  	    LD A,(0x4001)
  76: 3145+17	05C2  CDA606  	    CALL PRINT_A_HEX
  77: 3162+13	05C5  3A0040  	    LD A,(0x4000)
  78: 3175+17	05C8  CDA606  	    CALL PRINT_A_HEX
  79:				
  80: 3192+7	05CB  3E0D    	    LD A,13
  81: 3199+11	05CD  D311    	    out (IO_SIO0B_D),A
  82: 3210+17	05CF  CD3B01  	    call TX_EMP
  83: 3227+7	05D2  3E0A    	    LD A,10
  84: 3234+11	05D4  D311    	    out (IO_SIO0B_D),A
  85: 3245+17	05D6  CD3B01  	    call TX_EMP
  86:				
  87: 3262+10	05D9  C3F105  	    JP CONSOLE_PROMPT
  88:				
  89:				
  90:				
  91:				
  92:     -	05DC          	SPEC_RX_CONDITON:
  93:				    
  94: 3272+10	05DC  C30000  	    jp 0000h
  95:				
  96:				
  97:     -	05DF          	DELAY:
  98: 3282+15	05DF  DDE5    	    PUSH IX
  99: 3297+11	05E1  C5      	    PUSH BC
 100: 3308+14	05E2  DD210040	    LD IX,0x4000
 101: 3322+10	05E6  010100  	    LD BC,1
 102:     -	05E9          	DELAY_LOOP:
 103: 3332+15	05E9  DD09    	    ADD IX,BC
 104: 3347+7+5	05EB  30FC    	    JR NC, DELAY_LOOP
 105: 3354+10	05ED  C1      	    POP BC
 106: 3364+14	05EE  DDE1    	    POP IX
 107: 3378+10	05F0  C9      	    RET
 108:				
 109:				; Console Functions
 110:				
 111:				
 112:     -	05F1          	CONSOLE_PROMPT:
 113:				    ;Console Prompt
 114: 3388+7	05F1  3E0D    	    LD A, 13
 115: 3395+17	05F3  CDFE07  	    call TermPrintChar
 116: 3412+7	05F6  3E0A    	    LD A, 10
 117: 3419+11	05F8  D311    	    out (IO_SIO0B_D),A
 118: 3430+17	05FA  CDFE07  	    call TermPrintChar
 119: 3447+17	05FD  CD3B01  	    call TX_EMP
 120: 3464+7	0600  3E3F    	    LD A,'?'
 121: 3471+11	0602  D311    	    out (IO_SIO0B_D),A
 122: 3482+17	0604  CDFE07  	    call TermPrintChar
 123: 3499+17	0607  CD3B01  	    call TX_EMP
 124: 3516+7	060A  3E3E    	    LD A,'>'
 125: 3523+11	060C  D311    	    out (IO_SIO0B_D),A
 126: 3534+17	060E  CDFE07  	    call TermPrintChar
 127: 3551+17	0611  CD3B01  	    call TX_EMP
 128: 3568+7	0614  3E20    	    LD A,' '
 129: 3575+11	0616  D311    	    out (IO_SIO0B_D),A
 130: 3586+17	0618  CDFE07  	    call TermPrintChar
 131: 3603+17	061B  CD3B01  	    call TX_EMP
 132:				    ;LD A,"_"
 133:				    ;out (IO_SIO0B_D),A 
 134:				    ;call TX_EMP
 135:				
 136:				    ; Blinking Cursor
 137:				    ;LD IX,CMD_CRS_SPEED
 138:				    ;LD BC,1
 139:				    ;LD A,0
 140:				    ;LD (MEM_CURSOR_STATE),A
 141:				    ; SET PROMPT LENGTH TO 0
 142:				
 143:				    ;Enable Cursor
 144: 3620+7	061E  3E01    	    LD A,1
 145: 3627+17	0620  CD8A01  	    CALL CONSOLE_CURSOR
 146:				
 147: 3644+7	0623  3E00    	    LD A,0
 148: 3651+13	0625  320340  	    LD (MEM_PROMPT_SIZE),A
 149:				
 150:     -	0628          	CONSOLE_PROMPT_LOOP:
 151:				    ; READ INPUT
 152:				    ; Delete Cursor if input Avail
 153:				    ;JP CONSOLE_PROMPT_LOOP_2
 154: 3664+17	0628  CD3001  	    CALL CONSOLE_READ_CHAR
 155: 3681+4	062B  A7      	    AND A
 156: 3685+13	062C  320140  	    LD (MEM_LAST_CHAR),A
 157:				
 158: 3698+10	062F  CAA306  	    JP Z, CONSOLE_PROMPT_LOOP_2
 159:				    ; if newline
 160: 3708+7	0632  160D    	    LD D, 13
 161: 3715+4	0634  BA      	    CP D
 162: 3719+7+5	0635  2019    	    JR NZ, CONSOLE_PROMPT_LOOP_1
 163:				    
 164:				    ;Add NULL termination
 165: 3726+10	0637  210540  	    LD HL,MEM_PROMPT_START
 166: 3736+7	063A  0600    	    LD B,0
 167: 3743+13	063C  3A0340  	    LD A,(MEM_PROMPT_SIZE)
 168: 3756+4	063F  4F      	    LD C,A
 169: 3760+15	0640  ED4A    	    ADC HL, BC
 170: 3775+7	0642  3E00    	    LD A, 0x00
 171: 3782+7	0644  77      	    LD (HL), A
 172:				
 173:				    ;Disable Cursor
 174: 3789+7	0645  3E00    	    LD A,0
 175: 3796+17	0647  CD8A01  	    CALL CONSOLE_CURSOR
 176:				    ; Parse CMD
 177: 3813+17	064A  CD8602  	    CALL PARSE_CMD
 178:				
 179: 3830+10	064D  C3F105  	    JP CONSOLE_PROMPT
 180:				
 181:     -	0650          	CONSOLE_PROMPT_LOOP_1: ; Not new line
 182:				   
 183: 3840+13	0650  3A0140  	    LD A,(MEM_LAST_CHAR)
 184: 3853+7	0653  167F    	    LD D, 0x7F
 185: 3860+4	0655  BA      	    CP D
 186: 3864+7+5	0656  2024    	    JR NZ, CONSOLE_PROMPT_LOOP_1B
 187:				
 188:				    ; if Backspace
 189: 3871+13	0658  3A0340  	    LD A,(MEM_PROMPT_SIZE); test if 0
 190: 3884+4	065B  A7      	    AND A
 191: 3888+10	065C  CAA306  	    JP Z,CONSOLE_PROMPT_LOOP_2; no action if buffer empty
 192:				
 193:				    ;EXEC this if backspace (08d)
 194: 3898+7	065F  3E7F    	    LD A, 0x7F
 195: 3905+17	0661  CDFE07  	    CALL TermPrintChar
 196:				
 197:				    ;LD A, 0x7F
 198:				    ;out (IO_SIO0B_D),A
 199:				    ;call TX_EMP
 200:				
 201: 3922+7	0664  3E08    	    LD A,0x08
 202: 3929+11	0666  D311    	    out (IO_SIO0B_D),A
 203: 3940+17	0668  CD3B01  	    call TX_EMP
 204: 3957+7	066B  3E20    	    LD A,0x20
 205: 3964+11	066D  D311    	    out (IO_SIO0B_D),A
 206: 3975+17	066F  CD3B01  	    call TX_EMP
 207: 3992+7	0672  3E08    	    LD A,0x08
 208: 3999+11	0674  D311    	    out (IO_SIO0B_D),A
 209: 4010+17	0676  CD3B01  	    call TX_EMP
 210:				    ;LD A," "
 211:				    ;out (IO_SIO0B_D),A 
 212:				    ;call TX_EMP
 213:				
 214: 4027+10	0679  C3A306  	    JP CONSOLE_PROMPT_LOOP_2
 215:				
 216:     -	067C          	CONSOLE_PROMPT_LOOP_1B: ;IF not Backspace 
 217:				
 218:				
 219:				    ; CHECK if Controll Sequence
 220:				    
 221:				
 222:				    ; Continue
 223:				
 224: 4037+13	067C  3A0340  	    LD A,(MEM_PROMPT_SIZE)
 225: 4050+4	067F  3C      	    INC A
 226: 4054+13	0680  320340  	    LD (MEM_PROMPT_SIZE),A  ; store size to mem
 227:				
 228:				   
 229:				    ;out (IO_SIO0B_D),A
 230:				    ;call TX_EMP
 231:				
 232: 4067+13	0683  3A0140  	    LD A,(MEM_LAST_CHAR)
 233: 4080+11	0686  D311    	    out (IO_SIO0B_D),A
 234: 4091+17	0688  CD3B01  	    call TX_EMP
 235:				
 236: 4108+13	068B  3A0140  	    LD A,(MEM_LAST_CHAR)
 237: 4121+17	068E  CDFE07  	    call TermPrintChar
 238:				
 239:				    ;LD A," "
 240:				    ;out (IO_SIO0B_D),A 
 241:				    ;call TX_EMP
 242:				
 243:				    ;APPEND CHAR TO BUFFER
 244: 4138+11	0691  C5      	    PUSH BC
 245: 4149+10	0692  210540  	    LD HL,MEM_PROMPT_START
 246: 4159+7	0695  0600    	    LD B,0
 247: 4166+13	0697  3A0340  	    LD A,(MEM_PROMPT_SIZE)
 248: 4179+4	069A  3D      	    DEC A
 249: 4183+4	069B  4F      	    LD C,A
 250: 4187+15	069C  ED4A    	    ADC HL, BC
 251: 4202+13	069E  3A0140  	    LD A, (MEM_LAST_CHAR)
 252: 4215+7	06A1  77      	    LD (HL), A
 253: 4222+10	06A2  C1      	    POP BC
 254:				    
 255:				
 256:				
 257:     -	06A3          	CONSOLE_PROMPT_LOOP_2:
 258:				    ; Print Cursor
 259:				    ;ADD IX,BC
 260:				    ;JR NC, CONSOLE_PROMPT_LOOP
 261:				    ; Toggle cycle
 262:				    ;LD A,(MEM_CURSOR_STATE)
 263:				    ;XOR 1
 264:				    ;JR Z,CONSOLE_PROMPT_LOOP_3
 265:				    ;LD (MEM_CURSOR_STATE),A
 266:				
 267:				    ;LD A, 0x7F
 268:				    ;out (IO_SIO0B_D),A
 269:				    ;call TX_EMP
 270:				    ;LD A,'_'
 271:				    ;out (IO_SIO0B_D),A
 272:				    ;call TX_EMP
 273:				    ;LD IX,CMD_CRS_SPEED
 274:				    ;JP CONSOLE_PROMPT_LOOP
 275:				
 276:     -	06A3          	CONSOLE_PROMPT_LOOP_3:
 277:				    ;LD (MEM_CURSOR_STATE),A
 278:				    ;LD A, 0x7F
 279:				    ;out (IO_SIO0B_D),A
 280:				    ;call TX_EMP
 281:				    ;LD A,' '
 282:				    ;out (IO_SIO0B_D),A
 283:				    ;call TX_EMP
 284:				    ;LD IX,CMD_CRS_SPEED
 285: 4232+10	06A3  C32806  	    JP CONSOLE_PROMPT_LOOP
 286:				
 287:				; A Contains Byte
 288:     -	06A6          	PRINT_A_HEX:
 289: 4242+11	06A6  C5      	    PUSH BC
 290: 4253+11	06A7  D5      	    PUSH DE
 291: 4264+17	06A8  CD0001  	    CALL STRCONV_BYTES_TO_HEX   ; New Kernel Call
 292: 4281+4	06AB  78      	    LD A,B
 293: 4285+11	06AC  D311    	    out (IO_SIO0B_D),A
 294: 4296+17	06AE  CDFE07  	    CALL TermPrintChar
 295: 4313+17	06B1  CD3B01  	    call TX_EMP
 296: 4330+4	06B4  79      	    LD A,C
 297: 4334+11	06B5  D311    	    out (IO_SIO0B_D),A
 298: 4345+17	06B7  CDFE07  	    CALL TermPrintChar
 299: 4362+17	06BA  CD3B01  	    call TX_EMP
 300: 4379+10	06BD  D1      	    POP DE
 301: 4389+10	06BE  C1      	    POP BC
 302: 4399+10	06BF  C9      	    RET
 303:				
 304:     -	06C0          	MSG_HEXDUMP_HEADER:
 305:     -	06C0  0D0A4241	    db 13,10,'BASE   +0 +1 +2 +3 +4 +5 +6 +7',0
	              53452020
	              202B3020
	              2B31202B
	              32202B33
	              202B3420
	              2B35202B
	              36202B37
	              00
 306:				
 307:				; HL contains Start ADDR
 308:     -	06E1          	PRINT_HEXDUMP:
 309: 4409+11	06E1  F5      	    PUSH AF
 310: 4420+11	06E2  C5      	    PUSH BC
 311: 4431+11	06E3  E5      	    PUSH HL
 312:				    ; PRINT Header
 313: 4442+10	06E4  01C006  	    LD BC, [MSG_HEXDUMP_HEADER]
 314: 4452+17	06E7  CD1A01  	    CALL CONSOLE_PRINTSTR
 315: 4469+7	06EA  0E00    	    LD C,0  ; Line Counter
 316:				
 317:     -	06EC          	PRINT_HEXDUMP_SOL: ; Start of Line
 318: 4476+7	06EC  3E0D    	    LD A,13
 319: 4483+11	06EE  D311    	    out (IO_SIO0B_D),A
 320: 4494+17	06F0  CDFE07  	    CALL TermPrintChar
 321: 4511+17	06F3  CD3B01  	    call TX_EMP
 322: 4528+7	06F6  3E0A    	    LD A,10
 323: 4535+11	06F8  D311    	    out (IO_SIO0B_D),A
 324: 4546+17	06FA  CDFE07  	    CALL TermPrintChar
 325: 4563+17	06FD  CD3B01  	    call TX_EMP
 326:				
 327: 4580+4	0700  7C      	    LD A,H
 328: 4584+17	0701  CDA606  	    CALL PRINT_A_HEX
 329: 4601+4	0704  7D      	    LD A,L
 330: 4605+17	0705  CDA606  	    CALL PRINT_A_HEX
 331:				
 332: 4622+7	0708  3E68    	    LD A, 'h'
 333: 4629+11	070A  D311    	    out (IO_SIO0B_D),A
 334: 4640+17	070C  CDFE07  	    CALL TermPrintChar
 335: 4657+17	070F  CD3B01  	    call TX_EMP
 336: 4674+7	0712  3E3A    	    LD A, ':'
 337: 4681+11	0714  D311    	    out (IO_SIO0B_D),A
 338: 4692+17	0716  CDFE07  	    CALL TermPrintChar
 339: 4709+17	0719  CD3B01  	    call TX_EMP
 340: 4726+7	071C  3E20    	    LD A, ' '
 341: 4733+11	071E  D311    	    out (IO_SIO0B_D),A
 342: 4744+17	0720  CDFE07  	    CALL TermPrintChar
 343: 4761+17	0723  CD3B01  	    call TX_EMP
 344:				
 345: 4778+7	0726  0600    	    LD B,0  ; Column Counter
 346:     -	0728          	PRINT_HEXDUMP_LOOP1:
 347: 4785+7	0728  7E      	    LD A,(HL)
 348: 4792+17	0729  CDA606  	    CALL PRINT_A_HEX
 349: 4809+7	072C  3E20    	    LD A, ' '
 350: 4816+11	072E  D311    	    out (IO_SIO0B_D),A
 351: 4827+17	0730  CDFE07  	    CALL TermPrintChar
 352: 4844+17	0733  CD3B01  	    call TX_EMP
 353:				
 354: 4861+4	0736  04      	    INC B
 355: 4865+6	0737  23      	    INC HL
 356:				    ; Check If 8 columns
 357: 4871+4	0738  78      	    LD A,B
 358: 4875+7	0739  E608    	    AND 0x08
 359: 4882+10	073B  CA2807  	    JP Z, PRINT_HEXDUMP_LOOP1; IF less than 8
 360:				
 361: 4892+4	073E  0C      	    INC C
 362: 4896+4	073F  79      	    LD A,C
 363: 4900+7	0740  E610    	    AND 0x10
 364:				
 365: 4907+10	0742  CAEC06  	    JP Z, PRINT_HEXDUMP_SOL; IF less than 8
 366:				
 367: 4917+7	0745  3E0D    	    LD A,13
 368: 4924+11	0747  D311    	    out (IO_SIO0B_D),A
 369: 4935+17	0749  CDFE07  	    CALL TermPrintChar
 370: 4952+17	074C  CD3B01  	    call TX_EMP
 371: 4969+7	074F  3E0A    	    LD A,10
 372: 4976+11	0751  D311    	    out (IO_SIO0B_D),A
 373: 4987+17	0753  CDFE07  	    CALL TermPrintChar
 374: 5004+17	0756  CD3B01  	    call TX_EMP
 375:				
 376: 5021+10	0759  E1      	    POP HL
 377: 5031+10	075A  C1      	    POP BC
 378: 5041+10	075B  F1      	    POP AF
 379: 5051+10	075C  C9      	    RET
 380:				
 381:				
 382:				; HL = String to compare
 383:				; DE = String Pattern
 384:     -	075D          	CMP_STRING_START:
 385: 5061+7	075D  1A      	    LD A,(DE)
 386: 5068+4	075E  A7      	    AND A
 387: 5072+5+6	075F  C8      	    RET Z; RETURN Z=1 if reached END wizhout mismatch
 388: 5077+7	0760  BE      	    CP (HL)
 389: 5084+5+6	0761  C0      	    RET NZ; If not Match (z=0) exit
 390:     -	0762          	CMP_STRING_START_MATCHED:
 391: 5089+7	0762  7E      	    LD A,(HL)
 392: 5096+4	0763  A7      	    AND A; String to compare reached end
 393: 5100+5+6	0764  C8      	    RET Z
 394:     -	0765          	CMP_STRING_START_CONTINUE:
 395: 5105+6	0765  23      	    INC HL
 396: 5111+6	0766  13      	    INC DE
 397: 5117+10	0767  C35D07  	    JP CMP_STRING_START
 398:				    
 399:				; REG A Contains CHAR-Low
 400:				; If failed, Carry is set
 401:     -	076A          	HEX_TO_BIN:
 402: 5127+7	076A  D630    	    SUB 48 ; 0 is 0
 403: 5134+10	076C  EA7F07  	    JP PE, HEX_TO_INVALID_2; to low (SUB overflow)
 404: 5144+7	076F  FE0A    	    CP 10 ; Value is between 0 and 9
 405: 5151+7+5	0771  3805    	    JR C, HEX_TO_BIN_2
 406: 5158+7	0773  D607    	    SUB 7
 407: 5165+10	0775  EA7F07  	    JP PE, HEX_TO_INVALID_2; to low (SUB overflow)
 408:     -	0778          	HEX_TO_BIN_2:
 409: 5175+7	0778  FE10    	    CP 16
 410: 5182+7+5	077A  3003    	    JR NC, HEX_TO_INVALID_2; if bigger than 15-> fail
 411: 5189+7	077C  E60F    	    AND 0x0F
 412: 5196+10	077E  C9      	    RET
 413:     -	077F          	HEX_TO_INVALID_2:
 414: 5206+7	077F  3E01    	    LD A,1
 415: 5213+7	0781  C6FF    	    ADD 255
 416: 5220+10	0783  C9      	    RET
 417:				
 418:				; BC Contains Address to string
 419:				; E is 0xFF if error
 420:				; E is 0x00 if okay
 421:     -	0784          	DHEX_TO_BYTE:
 422: 5230+11	0784  C5      	    PUSH BC
 423:				    ; Load First Byte
 424: 5241+7	0785  0A      	    LD A,(BC)
 425: 5248+17	0786  CD6A07  	    CALL HEX_TO_BIN
 426:				    ;JP C,DHEX_TO_BYTE_FAILED
 427: 5265+8	0789  CB27    	    SLA A
 428: 5273+8	078B  CB27    	    SLA A
 429: 5281+8	078D  CB27    	    SLA A
 430: 5289+8	078F  CB27    	    SLA A
 431: 5297+4	0791  57      	    LD D,A
 432:				
 433: 5301+6	0792  03      	    INC BC
 434: 5307+7	0793  0A      	    LD A,(BC)
 435: 5314+17	0794  CD6A07  	    CALL HEX_TO_BIN
 436:				    ;JP C,DHEX_TO_BYTE_FAILED
 437: 5331+4	0797  B2      	    OR D ; Merge
 438:				    
 439: 5335+10	0798  C1      	    POP BC
 440: 5345+7	0799  1E00    	    LD E,0x00
 441: 5352+10	079B  C9      	    RET
 442:     -	079C          	DHEX_TO_BYTE_FAILED:
 443: 5362+7	079C  1EFF    	    LD E,0xFF
 444:				    ;LD A,0x00
 445: 5369+10	079E  C1      	    POP BC
 446: 5379+10	079F  C9      	    RET
 447:				
 448:				.include "vdpterm.s"
**** functions/vdpterm.s ****
   1:				;-------------------------------------------------
   2:				; Z8C/MEGA80 VDP Console IO Functions
   3:				; by Dennis Gunia 2022/02
   4:				; Version 0.1
   5:				;
   6:				; For Z8C Monitor
   7:				;-------------------------------------------------
   8:				
   9:				; Constant Values
  10:     -	40E0          	TermVarMemoryLocation        equ 0x40E0
  11:				
  12:				
  13:				; Dynamic VARs
  14:     -	07A0          	TermVarTemplate:
  15:     -	40E0          	    phase TermVarMemoryLocation  ;Change pointers to this template to the specified location
  16:     -	40E0          	TermCurrentX:   ; Start sector
  17:     -	40E0  01      	    defb 0x01
  18:     -	40E1          	TermCurrentY:   ; Start sector
  19:     -	40E1  04      	    defb 0x04
  20:     -	40E2          	TermCursorState:
  21:     -	40E2  00      	    defb 0x00
  22:     -	40E3          	TermCursorEnabled:
  23:     -	40E3  00      	    defb 0x00
  24:     -	40E4          	TermVarTemplateEnd:
  25:     -	07A4          	    dephase
  26:				
  27:				
  28:				
  29:     -	07A4          	TermInit:
  30:				    ; Copy TermVarTemplate to memory
  31: 5389+10	07A4  21E040  	    LD HL, TermVarMemoryLocation     ;Load destination into HL
  32: 5399+10	07A7  01A007  	    LD BC, [TermVarTemplate]         ;Load source into BC
  33: 5409+10	07AA  11E440  	    LD DE, [TermVarTemplateEnd]      ;Load end into DE
  34:     -	07AD          	TermInit_copy_loop:
  35: 5419+7	07AD  0A      	    LD A,(BC)       ;Copy value
  36: 5426+7	07AE  77      	    LD (HL),A       
  37: 5433+6	07AF  03      	    INC BC          ;Increment pointers
  38: 5439+6	07B0  23      	    INC HL
  39: 5445+11	07B1  E5      	    PUSH HL         ;Backup HL
  40: 5456+15	07B2  ED52    	    SBC HL,DE       ;Check if next pointer matches end
  41: 5471+10	07B4  E1      	    POP HL          ;Restore HL
  42: 5481+10	07B5  C2AD07  	    JP NZ, TermInit_copy_loop    ;Loop if pointer != end
  43:				    ; template copy done
  44:				
  45:				
  46:				    ; install font
  47: 5491+17	07B8  CD0028  	    call    setup_vars
  48: 5508+10	07BB  21EF2A  	    ld      hl, TmsFont
  49: 5518+17	07BE  CD4629  	    call    TmsTextMode                     ; initialize text mode
  50:				
  51: 5535+7	07C1  3E0C    	    ld      a, TmsDarkGreen                  ; set colors
  52: 5542+17	07C3  CDAB28  	    call    TmsBackground
  53: 5559+7	07C6  3E0F    	    ld      a, TmsWhite
  54: 5566+17	07C8  CD5C2A  	    call    TmsTextColor
  55:				
  56: 5583+7	07CB  3E00    	    ld      a, 0                           ; put title at 11, 1
  57: 5590+7	07CD  1E00    	    ld      e, 0
  58: 5597+17	07CF  CD6F2A  	    call    TmsTextPos
  59: 5614+10	07D2  211709  	    ld      hl, TitleMessage                ; output title
  60: 5624+17	07D5  CD862A  	    call    TmsStrOut
  61:				
  62: 5641+7	07D8  3E00    	    ld      a, 0                           ; put title at 11, 1
  63: 5648+7	07DA  1E04    	    ld      e, 4
  64: 5655+17	07DC  CD6F2A  	    call    TmsTextPos
  65:				
  66:				
  67: 5672+10	07DF  C39605  	    jp init_sound
  68:				
  69:     -	07E2          	TermSetCursor:
  70: 5682+13	07E2  3AE140  	    ld      a, (TermCurrentY)
  71: 5695+4	07E5  5F      	    ld      e, a
  72: 5699+13	07E6  3AE040  	    ld      a, (TermCurrentX)                           
  73:				    
  74: 5712+17	07E9  CD6F2A  	    call    TmsTextPos
  75: 5729+10	07EC  C9      	    ret
  76:				
  77:     -	07ED          	TermPrintStr:
  78:				    ; BC contains String offset
  79:				    ; Prints null terminated string
  80: 5739+11	07ED  F5      	    PUSH AF
  81: 5750+11	07EE  C5      	    PUSH BC
  82:     -	07EF          	TermPrintStr_LOOP:
  83: 5761+7	07EF  0A      	    LD A,(BC)
  84:				
  85:				    ; Return if nullbyte
  86: 5768+7	07F0  F600    	    OR 0
  87: 5775+7+5	07F2  2807    	    JR Z, TermPrintStr_EXIT
  88:				    ; Print Char
  89: 5782+17	07F4  CDFE07  	    CALL TermPrintChar
  90:				
  91:				    ; INC BC and JP start of loop
  92: 5799+6	07F7  03      	    INC BC
  93: 5805+10	07F8  C3EF07  	    jp TermPrintStr_LOOP
  94:     -	07FB          	TermPrintStr_EXIT:
  95: 5815+10	07FB  C1      	    POP BC
  96: 5825+10	07FC  F1      	    POP AF
  97: 5835+10	07FD  C9      	    RET
  98:				
  99:     -	07FE          	TermPrintChar:
 100: 5845+11	07FE  F5      	    push AF
 101: 5856+11	07FF  C5      	    push BC
 102: 5867+11	0800  D5      	    push DE
 103: 5878+11	0801  E5      	    push HL
 104:				    ; check if special char
 105: 5889+7	0802  FE7F    	    cp 0x7F ; Backspace
 106: 5896+10	0804  CA3F08  	    jp z, TermPrintCharSPDelete
 107: 5906+7	0807  FE0D    	    cp 13
 108: 5913+10	0809  CA9208  	    jp z, TermPrintCharSPCR
 109: 5923+7	080C  FE0A    	    cp 10
 110: 5930+10	080E  CA7208  	    jp z, TermPrintCharSPLF
 111:				    ; a has char
 112: 5940+17	0811  CD8F28  	    call TmsChrOut
 113: 5957+13	0814  3AE040  	    ld a,(TermCurrentX)
 114: 5970+4	0817  3C      	    inc a
 115: 5974+7	0818  FE27    	    cp 39
 116: 5981+10	081A  CA2908  	    jp z,TermPrintCharWrap; if line end
 117: 5991+10	081D  D22908  	    jp nc,TermPrintCharWrap; if line end
 118: 6001+13	0820  32E040  	    ld (TermCurrentX), a
 119: 6014+17	0823  CDE207  	    call TermSetCursor
 120: 6031+10	0826  C39C08  	    jp TermPrintCharDone
 121:     -	0829          	TermPrintCharWrap:
 122: 6041+4	0829  AF      	    xor a
 123: 6045+13	082A  32E040  	    ld (TermCurrentX), a
 124: 6058+13	082D  3AE140  	    ld a,(TermCurrentY)
 125: 6071+7	0830  FE17    	    cp 23   ; if already last line
 126: 6078+10	0832  CA8408  	    jp z, TermPrintCharSPLFScroll
 127: 6088+4	0835  3C      	    inc a
 128: 6092+13	0836  32E140  	    ld (TermCurrentY),a
 129: 6105+17	0839  CDE207  	    call TermSetCursor
 130: 6122+10	083C  C39C08  	    jp TermPrintCharDone
 131:     -	083F          	TermPrintCharSPDelete:
 132: 6132+13	083F  3AE040  	    ld a,(TermCurrentX)
 133: 6145+4	0842  A7      	    and a
 134: 6149+10	0843  CA5808  	    jp z, TermPrintCharSPDeleteWrap ; if at pos X 0 then go previous line
 135: 6159+4	0846  3D      	    dec a   ; else decrement X
 136: 6163+13	0847  32E040  	    ld (TermCurrentX), a
 137: 6176+17	084A  CDE207  	    call TermSetCursor
 138: 6193+7	084D  3E20    	    ld      a, " "     
 139: 6200+17	084F  CD8F28  	    call    TmsChrOut
 140: 6217+17	0852  CDE207  	    call TermSetCursor
 141: 6234+10	0855  C39C08  	    jp TermPrintCharDone
 142:     -	0858          	TermPrintCharSPDeleteWrap:
 143: 6244+7	0858  3E27    	    ld a,39
 144: 6251+13	085A  32E040  	    ld (TermCurrentX), a
 145: 6264+13	085D  3AE140  	    ld a,(TermCurrentY)
 146: 6277+4	0860  3D      	    dec a
 147: 6281+13	0861  32E140  	    ld (TermCurrentY),a
 148: 6294+17	0864  CDE207  	    call TermSetCursor
 149: 6311+7	0867  3E20    	    ld      a, " "     
 150: 6318+17	0869  CD8F28  	    call    TmsChrOut
 151: 6335+17	086C  CDE207  	    call TermSetCursor
 152: 6352+10	086F  C39C08  	    jp TermPrintCharDone
 153:				
 154:     -	0872          	TermPrintCharSPLF:  ; linefeed
 155: 6362+13	0872  3AE140  	    ld a,(TermCurrentY)
 156: 6375+7	0875  FE17    	    cp 23   ; if already last line
 157: 6382+10	0877  CA8408  	    jp z, TermPrintCharSPLFScroll
 158: 6392+4	087A  3C      	    inc a
 159: 6396+13	087B  32E140  	    ld (TermCurrentY),a
 160: 6409+17	087E  CDE207  	    call TermSetCursor
 161: 6426+10	0881  C39C08  	    jp TermPrintCharDone
 162:     -	0884          	TermPrintCharSPLFScroll:
 163: 6436+17	0884  CDA108  	    call TermScroll
 164: 6453+7	0887  3E17    	    ld a,23
 165: 6460+13	0889  32E140  	    ld (TermCurrentY),a
 166: 6473+17	088C  CDE207  	    call TermSetCursor
 167: 6490+10	088F  C39C08  	    jp TermPrintCharDone
 168:     -	0892          	TermPrintCharSPCR:  ; linefeed
 169: 6500+4	0892  AF      	    xor a
 170: 6504+13	0893  32E040  	    ld (TermCurrentX),a
 171: 6517+17	0896  CDE207  	    call TermSetCursor
 172: 6534+10	0899  C39C08  	    jp TermPrintCharDone
 173:				
 174:     -	089C          	TermPrintCharDone:
 175: 6544+10	089C  E1      	    pop HL
 176: 6554+10	089D  D1      	    pop DE
 177: 6564+10	089E  C1      	    pop BC
 178: 6574+10	089F  F1      	    pop AF
 179: 6584+10	08A0  C9      	    ret
 180:				
 181:     -	08A1          	TermScroll:
 182: 6594+10	08A1  010038  	    ld bc, 0x3800    ; load start of text-buffer into pointer
 183:				    ; enable blank
 184: 6604+7	08A4  3E80    	    ld a, 0x80
 185: 6611+11	08A6  D381    	    out (0x81),a
 186: 6622+7	08A8  3E81    	    ld a, 0x81
 187: 6629+11	08AA  D381    	    out (0x81),a
 188:				
 189:     -	08AC          	TermScrollLine:
 190: 6640+4	08AC  60      	    ld h,b
 191: 6644+4	08AD  69      	    ld l,c
 192:				
 193: 6648+10	08AE  112800  	    ld de, 40   ; line width
 194: 6658+11	08B1  19      	    add hl, de
 195:				
 196: 6669+4	08B2  7D      	    ld a,l          ; setup VDP address
 197: 6673+11	08B3  D381    	    out (0x81),a
 198: 6684+4	08B5  7C      	    ld a,h
 199: 6688+7	08B6  E63F    	    and 3fh
 200: 6695+11	08B8  D381    	    out (0x81),a
 201: 6706+17	08BA  CD1209  	    call VDPWait
 202: 6723+11	08BD  DB80    	    in a, (0x80)    ; read byte
 203: 6734+11	08BF  F5      	    push af
 204:				
 205: 6745+4	08C0  79      	    ld a,c          ; setup VDP addressh
 206: 6749+11	08C1  D381    	    out (0x81),a
 207: 6760+4	08C3  78      	    ld a,b
 208: 6764+7	08C4  E63F    	    and 3fh         
 209: 6771+7	08C6  F640    	    or 40h          ; write bit
 210: 6778+11	08C8  D381    	    out (0x81),a
 211: 6789+10	08CA  F1      	    pop af
 212: 6799+17	08CB  CD1209  	    call VDPWait
 213: 6816+11	08CE  D380    	    out (0x80),a
 214:				
 215: 6827+6	08D0  03      	    inc bc
 216:				
 217: 6833+4	08D1  60      	    ld h,b
 218: 6837+4	08D2  69      	    ld l,c
 219: 6841+10	08D3  11983B  	    ld de, VDPTextBufferEnd   ; buffer end
 220: 6851+15	08D6  ED52    	    sbc hl, de
 221:				
 222: 6866+10	08D8  C2AC08  	    jp nz, TermScrollLine
 223:				
 224:				    ; clear last line
 225: 6876+10	08DB  019803  	    ld bc,920
 226: 6886+4	08DE  79      	    ld a,c          ; setup VDP address
 227: 6890+11	08DF  D381    	    out (0x81),a
 228: 6901+4	08E1  78      	    ld a,b
 229: 6905+7	08E2  E63F    	    and 3fh         
 230: 6912+7	08E4  F640    	    or 40h          ; write bit
 231: 6919+11	08E6  D381    	    out (0x81),a
 232: 6930+7	08E8  0E28    	    ld c,40
 233:     -	08EA          	TermScrollClearLine:
 234: 6937+10	08EA  01983B  	    ld bc, 0x3800 + 920
 235:     -	08ED          	TermScrollClearLineLoop:
 236:				
 237: 6947+4	08ED  79      	    ld a,c          ; setup VDP addressh
 238: 6951+11	08EE  D381    	    out (0x81),a
 239: 6962+4	08F0  78      	    ld a,b
 240: 6966+7	08F1  E63F    	    and 3fh         
 241: 6973+7	08F3  F640    	    or 40h          ; write bit
 242: 6980+11	08F5  D381    	    out (0x81),a
 243: 6991+7	08F7  3E20    	    ld a, ' '
 244: 6998+11	08F9  D380    	    out (0x80),a
 245: 7009+17	08FB  CD1209  	    call VDPWait
 246:				
 247: 7026+6	08FE  03      	    inc bc
 248: 7032+4	08FF  60      	    ld h,b
 249: 7036+4	0900  69      	    ld l,c
 250: 7040+10	0901  11C03B  	    ld de, 0x3800 + 960   ; buffer end
 251: 7050+15	0904  ED52    	    sbc hl, de
 252:				
 253: 7065+10	0906  C2ED08  	    jp nz, TermScrollClearLineLoop
 254: 7075+7	0909  3ED0    	    ld a, 0xD0
 255: 7082+11	090B  D381    	    out (0x81),a
 256: 7093+7	090D  3E81    	    ld a, 0x81
 257: 7100+11	090F  D381    	    out (0x81),a
 258: 7111+10	0911  C9      	    ret
 259:				
 260:     -	0912          	VDPWait:
 261: 7121+4	0912  00      	    nop
 262: 7125+4	0913  00      	    nop
 263: 7129+4	0914  00      	    nop
 264: 7133+4	0915  00      	    nop
 265: 7137+10	0916  C9      	    ret
 266:				
 267:     -	0000          	VDPTextBufferStart  equ 0
 268:     -	3B98          	VDPTextBufferEnd    equ 0x3800 + 920
 269:				
 270:     -	0917          	TitleMessage:    
 271:     -	0917  20205A38	    db '  Z8C Mk IV - A Z80 Homebrew Computer   '
	              43204D6B
	              20495620
	              2D204120
	              5A383020
	              486F6D65
	              62726577
	              20436F6D
	              70757465
	              72202020
 272:     -	093F  2020524F	    db '  ROM Ver. 1.0 by Dennis Gunia (2022)   '
	              4D205665
	              722E2031
	              2E302062
	              79204465
	              6E6E6973
	              2047756E
	              69612028
	              32303232
	              29202020
 273:     -	0967  20202020	    db '         48k RAM - 4MHz Z80 CPU         ',0
	              20202020
	              2034386B
	              2052414D
	              202D2034
	              4D487A20
	              5A383020
	              43505520
	              20202020
	              20202020
	              00
 274:				
 275:     -	0990          	TmsSubs:
 276:				    .include "tms.s"                       ; TMS graphics routines
**** functions/tms.s ****
   1:				; TMS9918A graphics subroutines
   2:				; Copyright 2018-2020 J.B. Langston
   3:				;
   4:				; Permission is hereby granted, free of charge, to any person obtaining a 
   5:				; copy of this software and associated documentation files (the "Software"), 
   6:				; to deal in the Software without restriction, including without limitation 
   7:				; the rights to use, copy, modify, merge, publish, distribute, sublicense, 
   8:				; and/or sell copies of the Software, and to permit persons to whom the 
   9:				; Software is furnished to do so, subject to the following conditions:
  10:				; 
  11:				; The above copyright notice and this permission notice shall be included in
  12:				; all copies or substantial portions of the Software.
  13:				; 
  14:				; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  15:				; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
  16:				; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  17:				; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
  18:				; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
  19:				; FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
  20:				; DEALINGS IN THE SOFTWARE.
  21:				
  22:				; VDP Programmer's Guide: http://map.grauw.nl/resources/video/ti-vdp-programmers-guide.pdf
  23:				
  24:     -	E400          	     org 0xE400
  25:				; ---------------------------------------------------------------------------
  26:				; configuration parameters; can be changed at runtime
  27:     -	E400          	TmsPort:
  28:     -	E400  80      	        defb    0x80            ; port for TMS vram (reg is 1 higher)
  29:     -	E401          	TmsWait:
  30:     -	E401  40      	        defb    64              ; iterations to wait after ram access
  31:     -	E402          	TmsMode:
  32:     -	E402  0000    	        defw    0               ; mode registers
  33:     -	E404          	TmsNameAddr:
  34:     -	E404  0038    	        defw    3800h           ; name table address (multiples of 400H)
  35:     -	E406          	TmsColorAddr:
  36:     -	E406  0020    	        defw    2000h           ; color table address (multiples of 40H)
  37:     -	E408          	TmsPatternAddr:
  38:     -	E408  0000    	        defw    0               ; pattern table (multiples of 800H)
  39:     -	E40A          	TmsSpritePatternAddr:
  40:     -	E40A  0018    	        defw    1800h           ; sprite attribute table (multiples of 80H)
  41:     -	E40C          	TmsSpriteAttrAddr:
  42:     -	E40C  C03B    	        defw    3bc0h           ; sprite pattern table (multiples of 800H)
  43:     -	E40E          	TmsScreenColors:
  44:     -	E40E  00      	        defb    0               ; background (low nybble), text color (high nybble)
  45:				; ---------------------------------------------------------------------------
  46:				; register constants
  47:     -	2800          	    org 0x2800
  48:     -	2800          	setup_vars:
  49:				    
  50: 7147+7	2800  3E80    	    ld a,0x80
  51: 7154+13	2802  3200E4  	    ld (TmsPort),a
  52:				
  53: 7167+7	2805  3E02    	    ld a,2
  54: 7174+13	2807  3201E4  	    ld (TmsWait),a
  55:				
  56: 7187+7	280A  3E00    	    ld a,0
  57: 7194+13	280C  3202E4  	    ld (TmsMode),a
  58: 7207+7	280F  3E00    	    ld a,0
  59: 7214+13	2811  3203E4  	    ld (TmsMode+1),a
  60:				
  61: 7227+7	2814  3E00    	    ld a,0
  62: 7234+13	2816  3204E4  	    ld (TmsNameAddr),a
  63: 7247+7	2819  3E38    	    ld a,38h
  64: 7254+13	281B  3205E4  	    ld (TmsNameAddr+1),a
  65:				
  66: 7267+7	281E  3E00    	    ld a,0
  67: 7274+13	2820  3208E4  	    ld (TmsPatternAddr),a
  68: 7287+7	2823  3E00    	    ld a,0
  69: 7294+13	2825  3209E4  	    ld (TmsPatternAddr+1),a
  70:				
  71: 7307+7	2828  3E00    	    ld a,0
  72: 7314+13	282A  3206E4  	    ld (TmsColorAddr),a
  73: 7327+7	282D  3E20    	    ld a,20h
  74: 7334+13	282F  3207E4  	    ld (TmsColorAddr+1),a
  75:				
  76:				
  77: 7347+7	2832  3E00    	    ld a,0
  78: 7354+13	2834  320AE4  	    ld (TmsSpritePatternAddr),a
  79: 7367+7	2837  3E18    	    ld a,0x18
  80: 7374+13	2839  320BE4  	    ld (TmsSpritePatternAddr+1),a
  81:				
  82:				
  83: 7387+7	283C  3EC0    	    ld a,0xc0
  84: 7394+13	283E  320CE4  	    ld (TmsSpriteAttrAddr),a
  85: 7407+7	2841  3E3B    	    ld a,0x3b
  86: 7414+13	2843  320DE4  	    ld (TmsSpriteAttrAddr+1),a
  87:				
  88: 7427+10	2846  C9      	    ret
  89:				
  90:     -	0040          	TmsWriteBit:            equ 40h                 ; bit to indicate memory write
  91:				
  92:				; Registers
  93:     -	0080          	TmsCtrl0Reg:            equ 80h
  94:     -	0081          	TmsCtrl1Reg:            equ 81h
  95:     -	0082          	TmsNameReg:             equ 82h
  96:     -	0083          	TmsColorTableReg:       equ 83h
  97:     -	0084          	TmsPatternReg:          equ 84h
  98:     -	0085          	TmsSpriteAttrReg:       equ 85h
  99:     -	0086          	TmsSpritePatternReg:    equ 86h
 100:     -	0087          	TmsColorReg:            equ 87h
 101:				
 102:				; Control Register Bits
 103:     -	0200          	TmsM3:                  equ 200h
 104:     -	0100          	TmsExtVideo:            equ 100h
 105:     -	0080          	Tms16k:                 equ 80h
 106:     -	0040          	TmsDisplayEnable:       equ 40h
 107:     -	0020          	TmsIntEnableBit:        equ 20h
 108:     -	0010          	TmsM1:                  equ 10h
 109:     -	0008          	TmsM2:                  equ 8
 110:     -	0002          	TmsSprite32:            equ 2
 111:     -	0001          	TmsSpriteMag:           equ 1
 112:				
 113:				; ---------------------------------------------------------------------------
 114:				; table lengths
 115:				
 116:     -	0300          	TmsTileNameLen:         equ 300h
 117:     -	03C0          	TmsTextNameLen:         equ 3c0h
 118:				
 119:     -	0020          	TmsTileColorLen:        equ 20h
 120:     -	0800          	TmsBitmapColorLen:      equ 800h
 121:				
 122:     -	0800          	TmsTilePatternLen:      equ 800h
 123:     -	0800          	TmsTextPatternLen:      equ 800h
 124:     -	0600          	TmsMulticolorPatternLen: equ 600h
 125:     -	1800          	TmsBitmapPatternLen:    equ 1800h
 126:				
 127:				; ---------------------------------------------------------------------------
 128:				; color constants
 129:				
 130:     -	0000          	TmsTransparent:         equ 0
 131:     -	0001          	TmsBlack:               equ 1
 132:     -	0002          	TmsMediumGreen:         equ 2
 133:     -	0003          	TmsLightGreen:          equ 3
 134:     -	0004          	TmsDarkBlue:            equ 4
 135:     -	0005          	TmsLightBlue:           equ 5
 136:     -	0006          	TmsDarkRed:             equ 6
 137:     -	0007          	TmsCyan:                equ 7
 138:     -	0008          	TmsMediumRed:           equ 8
 139:     -	0009          	TmsLightRed:            equ 9
 140:     -	000A          	TmsDarkYellow:          equ 0ah
 141:     -	000B          	TmsLightYellow:         equ 0bh
 142:     -	000C          	TmsDarkGreen:           equ 0ch
 143:     -	000D          	TmsMagenta:             equ 0dh
 144:     -	000E          	TmsGray:                equ 0eh
 145:     -	000F          	TmsWhite:               equ 0fh
 146:				
 147:				; ---------------------------------------------------------------------------
 148:				; port I/O routines
 149:				
 150:				; These routines access the ports configured in TmsPort.
 151:				
 152:				; These memory locations can be set at runtime to support different hardware
 153:				; configurations from the same binary. TmsProbe automatically detects the
 154:				; TMS9918A on common ports.
 155:				
 156:				; The TMS9918A RAM must not be accessed more than once every 8 us or display 
 157:				; corruption may occur.  During vblank and with the display disabled, 
 158:				; accesses can be 2 us apart, but we will always use 8 us minimum delay.
 159:				
 160:				; TmsRamIn/TmsRamOut include a configurable delay loop, which waits for the
 161:				; configured iterations between VRAM writes to work properly with faster CPUs
 162:				
 163:				; Minimum time to execute each procedure call:
 164:				; Z80: 88 cycles, 8.8 us @ 10 MHz
 165:				; Z180: 80 cycles, 8.64 us @ 9.216 MHz, 4.32 us @ 18.432, 2.16 us @ 36.864
 166:				;
 167:				; Additional delay per djnz iteration:
 168:				; Z80: 8 cycles * (iterations - 1)
 169:				;       0.8 us @ 10 MHz
 170:				; Z180: 7 cycles * (iterations - 1)
 171:				;       0.756 us @ 9.216 MHz, 0.378 us @ 18.432, 0.189 us @ 36.864
 172:				
 173:				; Delay loop iterations required for different CPU speeds:
 174:				; Z80 @ 10 MHz or less: 1
 175:				; Z180 @ 9.216 MHz or less: 1
 176:				; Z180 @ 18.432 MHz: 10
 177:				; Z180 @ 36.864 MHz: 31
 178:     -	2847  010A1F  	TmsWaits:       defb 1, 10, 31          ; wait iterations to add for different CPU speeds
 179:				
 180:				; set up wait time based on clock multiplier in E
 181:     -	284A          	TmsSetWait:
 182: 7437+7	284A  3E01    	        ld a,1
 183: 7444+13	284C  3201E4  	        ld      (TmsWait), a
 184: 7457+10	284F  C9      	        ret
 185:				
 186:				; try to find TMS9918A on common ports
 187:     -	2850          	TmsProbe:
 188: 7467+10	2850  217428  	        ld      hl, TmsPorts
 189: 7477+7	2853  0603    	        ld      b, TmsNumPorts
 190:     -	2855          	TmsProbeNext:       
 191: 7484+7	2855  7E      	        ld      a, (hl)
 192: 7491+13	2856  3200E4  	        ld      (TmsPort), a
 193: 7504+17	2859  CD8528  	        call    TmsRegIn                ; clear vsync bit
 194: 7521+17	285C  CD8528  	        call    TmsRegIn                ; check it again
 195: 7538+10	285F  FA6F28  	        jp      m, TmsProbeFailed       ; if still set, not a TMS9918A
 196: 7548+10	2862  11FFFF  	        ld      de, 0ffffh              ; long enough for another vsync
 197:     -	2865          	TmsProbeWait:
 198: 7558+17	2865  CD8528  	        call    TmsRegIn                ; check vsync bit again
 199: 7575+5+6	2868  F8      	        ret     m                       ; if set, it's a TMS9918A (and Z is clear)
 200: 7580+6	2869  1B      	        dec     de                      ; otherwise, keep waiting
 201: 7586+4	286A  7B      	        ld      a, e
 202: 7590+4	286B  B2      	        or      d
 203: 7594+10	286C  C26528  	        jp      nz, TmsProbeWait
 204:     -	286F          	TmsProbeFailed:
 205: 7604+6	286F  23      	        inc     hl                      ; if still clear after this long, try next port
 206: 7610+8+5	2870  10E3    	        djnz    TmsProbeNext
 207: 7618+4	2872  AF      	        xor     a                       ; set Z if we ran out of ports to check
 208: 7622+10	2873  C9      	        ret
 209:				
 210:     -	2874          	TmsPorts:                               ; List of ports to probe:
 211:     -	2874  80      	        defb 0x80                       ; ColecoVision / SG-1000
 212:     -	2875  98      	        defb 98h                        ; MSX
 213:     -	2876  10      	        defb 10h                        ; Sord M5 (conflicts with z80ctrl SIO port)
 214:				        ;defb 8                         ; Tatung Einstein (conflicts with z80ctrl drive ports)
 215:				        ;defb 1                         ; MTX (not supported by TMS9918A video card)
 216:				        ; add additional ports to check here
 217:     -	0003          	TmsNumPorts:    equ $ - TmsPorts
 218:				
 219:				; set a single register value
 220:				;       A = register value
 221:				;       E = register to set
 222:     -	2877          	TmsSetReg:
 223: 7632+17	2877  CD7B28  	        call    TmsRegOut
 224: 7649+4	287A  7B      	        ld      a, e
 225:				        ; fallthrough to TmsRegOut
 226:				
 227:				; write to configured register port
 228:				; parameters:
 229:				;       A = value to write
 230:     -	287B          	TmsRegOut:
 231: 7653+11	287B  C5      	        push    bc
 232: 7664+20	287C  ED4B00E4	        ld      bc, (TmsPort)
 233: 7684+4	2880  0C      	        inc     c
 234: 7688+12	2881  ED79    	        out     (c), a
 235: 7700+10	2883  C1      	        pop     bc
 236: 7710+10	2884  C9      	        ret
 237:				
 238:				; read from configured register port
 239:				; returns:
 240:				;       A = value read
 241:     -	2885          	TmsRegIn:
 242: 7720+11	2885  C5      	        push    bc
 243: 7731+20	2886  ED4B00E4	        ld      bc, (TmsPort)
 244: 7751+4	288A  0C      	        inc     c
 245: 7755+12	288B  ED78    	        in      a, (c)
 246: 7767+10	288D  C1      	        pop     bc
 247: 7777+10	288E  C9      	        ret
 248:				
 249:				; write to configured VRAM port
 250:				; parameters:
 251:				;       A = value to write
 252:				                                        ; Z80 | Z180 cycles...
 253:     -	288F          	TmsRamOut:                              ; 17  | 16 (call)
 254: 7787+11	288F  C5      	        push    bc                      ; 11  | 11
 255: 7798+20	2890  ED4B00E4	        ld      bc, (TmsPort)           ; 20  | 18
 256: 7818+12	2894  ED79    	        out     (c), a                  ; 12  | 10
 257:     -	2896          	TmsRamOutDelay:
 258: 7830+8+5	2896  10FE    	        djnz    TmsRamOutDelay          ; 8   | 7  plus (13 | 9) * (iterations-1)
 259: 7838+10	2898  C1      	        pop     bc                      ; 10  | 9
 260: 7848+10	2899  C9      	        ret                             ; 10  | 9
 261:				
 262:				; read from configured VRAM port
 263:				; returns:
 264:				;       A = value read
 265:     -	289A          	TmsRamIn:
 266: 7858+11	289A  C5      	        push    bc
 267: 7869+20	289B  ED4B00E4	        ld      bc, (TmsPort)
 268:     -	289F          	TmsRamInDelay:
 269: 7889+8+5	289F  10FE    	        djnz    TmsRamInDelay
 270: 7897+12	28A1  ED78    	        in      a, (c)
 271: 7909+20	28A3  ED4B00E4	        ld      bc, (TmsPort)
 272:     -	28A7          	TmsRamInDelay2:
 273: 7929+8+5	28A7  10FE    	        djnz    TmsRamInDelay2
 274: 7937+10	28A9  C1      	        pop     bc
 275: 7947+10	28AA  C9      	        ret
 276:				
 277:				; ---------------------------------------------------------------------------
 278:				; register configuration routines
 279:				
 280:				; set the background color
 281:				;       A = requested color
 282:     -	28AB          	TmsBackground:
 283: 7957+7	28AB  E60F    	        and     0fh
 284: 7964+4	28AD  47      	        ld      b, a
 285: 7968+13	28AE  3A0EE4  	        ld      a, (TmsScreenColors)
 286: 7981+7	28B1  E6F0    	        and     0f0h
 287: 7988+4	28B3  B0      	        or      b
 288: 7992+13	28B4  320EE4  	        ld      (TmsScreenColors), a
 289: 8005+7	28B7  1E87    	        ld      e, TmsColorReg
 290: 8012+10	28B9  C37728  	        jp      TmsSetReg
 291:				
 292:				; set the sprite configuration
 293:				;       A = sprite options
 294:     -	28BC          	TmsSpriteConfig:
 295: 8022+7	28BC  E603    	        and     TmsSprite32|TmsSpriteMag
 296: 8029+4	28BE  47      	        ld      b, a
 297: 8033+13	28BF  3A02E4  	        ld      a, (TmsMode)
 298: 8046+7	28C2  E6FC    	        and     ~(TmsSprite32|TmsSpriteMag)
 299: 8053+4	28C4  B0      	        or      b
 300: 8057+13	28C5  3202E4  	        ld      (TmsMode), a
 301: 8070+7	28C8  1E81    	        ld      e, TmsCtrl1Reg
 302: 8077+10	28CA  C37728  	        jp      TmsSetReg
 303:				
 304:				
 305:				; enable vblank interrupts
 306:     -	28CD          	TmsIntEnable:
 307: 8087+13	28CD  3A02E4  	        ld      a, (TmsMode)
 308: 8100+7	28D0  F620    	        or      TmsIntEnableBit
 309: 8107+13	28D2  3202E4  	        ld      (TmsMode), a
 310: 8120+7	28D5  1E81    	        ld      e, TmsCtrl1Reg
 311: 8127+10	28D7  C37728  	        jp      TmsSetReg
 312:				
 313:				; disable vblank interrupts
 314:     -	28DA          	TmsIntDisable:
 315: 8137+13	28DA  3A02E4  	        ld      a, (TmsMode)
 316: 8150+7	28DD  E6DF    	        and     ~TmsIntEnableBit
 317: 8157+13	28DF  3202E4  	        ld      (TmsMode), a
 318: 8170+7	28E2  1E81    	        ld      e, TmsCtrl1Reg
 319: 8177+10	28E4  C37728  	        jp      TmsSetReg
 320:				
 321:				; ---------------------------------------------------------------------------
 322:				; initialization routines
 323:				
 324:     -	0080          	TmsBlankFlags:          equ     Tms16k
 325:     -	00C0          	TmsTileFlags:           equ     Tms16k | TmsDisplayEnable
 326:     -	00D0          	TmsTextFlags:           equ     Tms16k | TmsDisplayEnable | TmsM1
 327:     -	00C8          	TmsMulticolorFlags:     equ     Tms16k | TmsDisplayEnable | TmsM2
 328:     -	02C0          	TmsBitmapFlags:         equ     Tms16k | TmsDisplayEnable | TmsM3
 329:				
 330:				; reset registers and clear all 16KB of video memory
 331:     -	28E7          	TmsReset:
 332: 8187+10	28E7  218000  	        ld      hl, TmsBlankFlags       ; blank the screen with 16KB enabled
 333: 8197+16	28EA  2202E4  	        ld      (TmsMode), hl
 334: 8213+4	28ED  7D      	        ld      a, l
 335: 8217+7	28EE  1E81    	        ld      e, TmsCtrl1Reg
 336: 8224+17	28F0  CD7728  	        call    TmsSetReg
 337: 8241+4	28F3  7C      	        ld      a, h
 338: 8245+7	28F4  1E80    	        ld      e, TmsCtrl0Reg
 339: 8252+17	28F6  CD7728  	        call    TmsSetReg
 340: 8269+7	28F9  3E00    	        ld      a, TmsTransparent
 341: 8276+17	28FB  CDAB28  	        call    TmsBackground
 342: 8293+7	28FE  3E00    	        ld      a, TmsTransparent
 343: 8300+17	2900  CD5C2A  	        call    TmsTextColor
 344: 8317+10	2903  110000  	        ld      de, 0                   ; clear entire VRAM
 345: 8327+10	2906  010040  	        ld      bc, 4000h
 346: 8337+7	2909  3E00    	        ld      a, 0
 347: 8344+17	290B  CD4D2A  	        call    TmsFill
 348: 8361+10	290E  C9      	        ret
 349:				
 350:				; initialize for multicolor mode 
 351:     -	290F          	TmsMulticolor:
 352: 8371+17	290F  CDE728  	        call    TmsReset
 353: 8388+20	2912  ED5B04E4	        ld      de, (TmsNameAddr)
 354: 8408+17	2916  CD262A  	        call    TmsWriteAddr
 355: 8425+7	2919  1606    	        ld      d, 6                    ; name table has 6 sections
 356: 8432+7	291B  1E00    	        ld      e, 0                    ; lines in first section start at 0
 357:     -	291D          	TmsSectionLoop:
 358: 8439+7	291D  0E04    	        ld      c, 4                    ; each section has 4 identical lines
 359:     -	291F          	TmsLineLoop:
 360: 8446+7	291F  0620    	        ld      b, 32                   ; each line is 32 bytes long
 361: 8453+4	2921  7B      	        ld      a, e                    ; same starting value for each line in section
 362:     -	2922          	TmsByteLoop: 
 363: 8457+17	2922  CD8F28  	        call    TmsRamOut
 364: 8474+4	2925  3C      	        inc     a                       ; byte value
 365: 8478+8+5	2926  10FA    	        djnz    TmsByteLoop
 366: 8486+4	2928  0D      	        dec     c                       ; line counter
 367: 8490+10	2929  C21F29  	        jp      nz, TmsLineLoop
 368: 8500+4	292C  5F      	        ld      e, a                    ; next starting value = current + 32
 369: 8504+4	292D  15      	        dec     d                       ; section counter
 370: 8508+10	292E  C21D29  	        jp      nz, TmsSectionLoop
 371: 8518+10	2931  21C800  	        ld      hl, TmsMulticolorFlags
 372: 8528+16	2934  2202E4  	        ld      (TmsMode), hl
 373: 8544+10	2937  C35B29  	        jp      TmsInitNonBitmap
 374:				
 375:				; initialize for tiled graphics
 376:     -	293A          	TmsTile:
 377: 8554+17	293A  CDE728  	        call    TmsReset
 378: 8571+10	293D  21C000  	        ld      hl, TmsTileFlags
 379: 8581+16	2940  2202E4  	        ld      (TmsMode), hl
 380: 8597+10	2943  C35B29  	        jp      TmsInitNonBitmap
 381:				
 382:				; initialize for text mode
 383:				;       HL = address of font to load
 384:     -	2946          	TmsTextMode:
 385: 8607+11	2946  E5      	        push    hl
 386: 8618+17	2947  CDE728  	        call    TmsReset
 387: 8635+10	294A  E1      	        pop     hl
 388: 8645+20	294B  ED5B08E4	        ld      de, (TmsPatternAddr)    ; load font from address in hl
 389: 8665+10	294F  010008  	        ld      bc, TmsTextPatternLen
 390: 8675+17	2952  CD3E2A  	        call    TmsWrite
 391: 8692+10	2955  21D000  	        ld      hl, TmsTextFlags
 392: 8702+16	2958  2202E4  	        ld      (TmsMode), hl
 393:				        ; fallthrough to TmsInitNonBitmap
 394:				
 395:				; non-bitmap color and pattern table configuration
 396:     -	295B          	TmsInitNonBitmap:
 397:				        ; set up color table address (register = address / 400H)
 398: 8718+13	295B  3A06E4  	        ld      a, (TmsColorAddr)
 399: 8731+7	295E  E6C0    	        and     0c0h
 400: 8738+13	2960  3206E4  	        ld      (TmsColorAddr), a
 401: 8751+4	2963  57      	        ld      d, a
 402: 8755+13	2964  3A07E4  	        ld      a, (TmsColorAddr+1)
 403: 8768+7	2967  E63F    	        and     3fh
 404: 8775+13	2969  3207E4  	        ld      (TmsColorAddr+1), a
 405: 8788+8	296C  CB12    	        rl      d
 406: 8796+4	296E  17      	        rla
 407: 8800+8	296F  CB12    	        rl      d
 408: 8808+4	2971  17      	        rla
 409: 8812+7	2972  1E83    	        ld      e, TmsColorTableReg
 410: 8819+17	2974  CD7728  	        call    TmsSetReg
 411:				
 412:				        ; set up pattern table address (register = address / 800H)
 413: 8836+4	2977  AF      	        xor     a
 414: 8840+13	2978  3208E4  	        ld      (TmsPatternAddr), a
 415: 8853+13	297B  3A09E4  	        ld      a, (TmsPatternAddr+1) 
 416: 8866+7	297E  E638    	        and     38h
 417: 8873+13	2980  3209E4  	        ld      (TmsPatternAddr+1), a
 418: 8886+4	2983  0F      	        rrca
 419: 8890+4	2984  0F      	        rrca
 420: 8894+4	2985  0F      	        rrca
 421: 8898+7	2986  1E84    	        ld      e, TmsPatternReg
 422: 8905+17	2988  CD7728  	        call    TmsSetReg
 423: 8922+10	298B  C3D929  	        jp      TmsInitCommon
 424:				
 425:				; initialize for bitmapped graphics
 426:     -	298E          	TmsBitmap:
 427: 8932+17	298E  CDE728  	        call    TmsReset
 428: 8949+20	2991  ED5B04E4	        ld      de, (TmsNameAddr)       ; initialize name table with 3 sets
 429: 8969+17	2995  CD262A  	        call    TmsWriteAddr            ; of 256 bytes ranging from 00-FF
 430: 8986+7	2998  0603    	        ld      b, 3
 431: 8993+4	299A  AF      	        xor     a
 432:     -	299B          	TmsBitmapLoop:
 433: 8997+17	299B  CD8F28  	        call    TmsRamOut
 434: 9014+4	299E  3C      	        inc     a
 435: 9018+10	299F  C29B29  	        jp      nz, TmsBitmapLoop
 436: 9028+8+5	29A2  10F7    	        djnz    TmsBitmapLoop
 437: 9036+10	29A4  21C002  	        ld      hl, TmsBitmapFlags
 438: 9046+16	29A7  2202E4  	        ld      (TmsMode), hl
 439:				
 440:				        ; set up color table at 0H (register = 7FH) or 2000H (register = 0FFH)
 441: 9062+4	29AA  AF      	        xor     a
 442: 9066+13	29AB  3206E4  	        ld      (TmsColorAddr), a
 443: 9079+13	29AE  3208E4  	        ld      (TmsPatternAddr), a
 444: 9092+13	29B1  3A07E4  	        ld      a, (TmsColorAddr+1)
 445: 9105+7	29B4  E620    	        and     20h
 446: 9112+13	29B6  3207E4  	        ld      (TmsColorAddr+1), a
 447: 9125+7	29B9  3EFF    	        ld      a, 0ffh                 ; color table at 2000H
 448: 9132+10	29BB  C2C029  	        jp      nz, TmsColorTableHigh
 449: 9142+7	29BE  3E7F    	        ld      a, 7fh                  ; color table at 0H
 450:     -	29C0          	TmsColorTableHigh:
 451: 9149+7	29C0  1E83    	        ld      e, TmsColorTableReg
 452: 9156+17	29C2  CD7728  	        call    TmsSetReg
 453:				
 454:				        ; set up pattern table at 0H (register = 3) or 2000H (register = 7)
 455: 9173+13	29C5  3A09E4  	        ld      a, (TmsPatternAddr+1)
 456: 9186+7	29C8  E620    	        and     20h
 457: 9193+13	29CA  3209E4  	        ld      (TmsPatternAddr+1), a
 458: 9206+7	29CD  3E07    	        ld      a, 7                    ; pattern table at 2000H
 459: 9213+10	29CF  C2D429  	        jp      nz, TmsPatternTableHigh
 460: 9223+7	29D2  3E03    	        ld      a, 3                    ; pattern table at 0H
 461:     -	29D4          	TmsPatternTableHigh:
 462: 9230+7	29D4  1E84    	        ld      e, TmsPatternReg
 463: 9237+17	29D6  CD7728  	        call    TmsSetReg
 464:				        ; fall through to TmsInitCommon
 465:				
 466:				
 467:				; common initialization for all modes
 468:     -	29D9          	TmsInitCommon:
 469:				        ; set up name table address (register = address / 400H)
 470: 9254+4	29D9  AF      	        xor     a
 471: 9258+13	29DA  3204E4  	        ld      (TmsNameAddr), a
 472: 9271+13	29DD  3A05E4  	        ld      a, (TmsNameAddr+1)
 473: 9284+7	29E0  E63C    	        and     3ch
 474: 9291+13	29E2  3205E4  	        ld      (TmsNameAddr+1), a
 475: 9304+4	29E5  0F      	        rrca
 476: 9308+4	29E6  0F      	        rrca
 477: 9312+7	29E7  1E82    	        ld      e, TmsNameReg
 478: 9319+17	29E9  CD7728  	        call    TmsSetReg
 479:				
 480:				        ; set up sprite pattern table address (register = address / 80H)
 481: 9336+13	29EC  3A0CE4  	        ld      a, (TmsSpriteAttrAddr)
 482: 9349+7	29EF  E680    	        and     80h
 483: 9356+13	29F1  320CE4  	        ld      (TmsSpriteAttrAddr), a
 484: 9369+4	29F4  57      	        ld      d, a
 485: 9373+13	29F5  3A0DE4  	        ld      a, (TmsSpriteAttrAddr+1)
 486: 9386+7	29F8  E67F    	        and     7fh
 487: 9393+8	29FA  CB12    	        rl      d
 488: 9401+4	29FC  17      	        rla
 489: 9405+7	29FD  1E85    	        ld      e, TmsSpriteAttrReg
 490: 9412+17	29FF  CD7728  	        call    TmsSetReg
 491:				
 492:				        ; set up sprite attribute table address (register = address / 800H)
 493: 9429+4	2A02  AF      	        xor     a                       
 494: 9433+13	2A03  320AE4  	        ld      (TmsSpritePatternAddr), a
 495: 9446+13	2A06  3A0BE4  	        ld      a, (TmsSpritePatternAddr+1)
 496: 9459+7	2A09  E638    	        and     38h
 497: 9466+13	2A0B  320BE4  	        ld      (TmsSpritePatternAddr+1), a
 498: 9479+4	2A0E  0F      	        rrca
 499: 9483+4	2A0F  0F      	        rrca
 500: 9487+4	2A10  0F      	        rrca
 501: 9491+7	2A11  1E86    	        ld      e, TmsSpritePatternReg
 502: 9498+17	2A13  CD7728  	        call    TmsSetReg
 503:				
 504:				        ; set up control registers
 505: 9515+7	2A16  1E81    	        ld      e, TmsCtrl1Reg
 506: 9522+13	2A18  3A02E4  	        ld      a, (TmsMode)
 507: 9535+17	2A1B  CD7728  	        call    TmsSetReg
 508: 9552+13	2A1E  3A03E4  	        ld      a, (TmsMode+1)
 509: 9565+7	2A21  1E80    	        ld      e, TmsCtrl0Reg
 510: 9572+10	2A23  C37728  	        jp      TmsSetReg
 511:				
 512:				; ---------------------------------------------------------------------------
 513:				; memory access routines
 514:				
 515:				; set the next address of vram to write
 516:				;       DE = address
 517:     -	2A26          	TmsWriteAddr:
 518: 9582+4	2A26  7B      	        ld      a, e                    ; send lsb
 519: 9586+17	2A27  CD7B28  	        call    TmsRegOut
 520: 9603+4	2A2A  7A      	        ld      a, d                    ; mask off msb to max of 16KB
 521: 9607+7	2A2B  E63F    	        and     3fh
 522: 9614+7	2A2D  F640    	        or      TmsWriteBit             ; indicate that this is a write
 523: 9621+17	2A2F  CD7B28  	        call    TmsRegOut
 524: 9638+10	2A32  C9      	        ret
 525:				
 526:				; set the next address of vram to read
 527:				;       DE = address
 528:     -	2A33          	TmsReadAddr:
 529: 9648+4	2A33  7B      	        ld      a, e                    ; send lsb
 530: 9652+17	2A34  CD7B28  	        call    TmsRegOut
 531: 9669+4	2A37  7A      	        ld      a, d                    ; mask off msb to max of 16KB
 532: 9673+7	2A38  E63F    	        and     3Fh
 533: 9680+17	2A3A  CD7B28  	        call    TmsRegOut
 534: 9697+10	2A3D  C9      	        ret
 535:				
 536:				; copy bytes from ram to vram
 537:				;       HL = ram source address
 538:				;       DE = vram destination address
 539:				;       BC = byte count
 540:     -	2A3E          	TmsWrite:
 541: 9707+17	2A3E  CD262A  	        call    TmsWriteAddr
 542:     -	2A41          	TmsWriteLoop:
 543: 9724+7	2A41  7E      	        ld      a, (hl)
 544: 9731+17	2A42  CD8F28  	        call    TmsRamOut
 545: 9748+6	2A45  23      	        inc     hl
 546: 9754+6	2A46  0B      	        dec     bc
 547: 9760+4	2A47  78      	        ld      a, b
 548: 9764+4	2A48  B1      	        or      c
 549: 9768+10	2A49  C2412A  	        jp      nz, TmsWriteLoop
 550: 9778+10	2A4C  C9      	        ret
 551:				
 552:				; fill a section of memory with a single value
 553:				;       A = value to fill
 554:				;       DE = vram destination address
 555:				;       BC = byte count
 556:     -	2A4D          	TmsFill:
 557: 9788+11	2A4D  F5      	        push    af
 558: 9799+17	2A4E  CD262A  	        call    TmsWriteAddr
 559: 9816+10	2A51  F1      	        pop     af
 560:     -	2A52          	TmsFillLoop:
 561: 9826+17	2A52  CD8F28  	        call    TmsRamOut
 562: 9843+4	2A55  0D      	        dec     c
 563: 9847+10	2A56  C2522A  	        jp      nz, TmsFillLoop
 564: 9857+8+5	2A59  10F7    	        djnz    TmsFillLoop
 565: 9865+10	2A5B  C9      	        ret
 566:				
 567:				; ---------------------------------------------------------------------------
 568:				; text routines
 569:				; set text color
 570:				;       A = requested color
 571:     -	2A5C          	TmsTextColor:
 572: 9875+4	2A5C  87      	        add     a, a                    ; text color into high nybble
 573: 9879+4	2A5D  87      	        add     a, a
 574: 9883+4	2A5E  87      	        add     a, a
 575: 9887+4	2A5F  87      	        add     a, a
 576: 9891+4	2A60  47      	        ld      b, a                    ; save for later
 577: 9895+13	2A61  3A0EE4  	        ld      a, (TmsScreenColors)    ; get current colors
 578: 9908+7	2A64  E60F    	        and     0fh                     ; mask off old text color
 579: 9915+4	2A66  B0      	        or      b                       ; set new text color
 580: 9919+13	2A67  320EE4  	        ld      (TmsScreenColors), a
 581: 9932+7	2A6A  1E87    	        ld      e, TmsColorReg
 582: 9939+10	2A6C  C37728  	        jp      TmsSetReg               ; save it back
 583:				
 584:				; set the address to place text at X/Y coordinate
 585:				;       A = X
 586:				;       E = Y
 587:     -	2A6F          	TmsTextPos:
 588: 9949+7	2A6F  1600    	        ld      d, 0
 589: 9956+10	2A71  210000  	        ld      hl, 0
 590: 9966+11	2A74  19      	        add     hl, de                  ; Y x 1
 591: 9977+11	2A75  29      	        add     hl, hl                  ; Y x 2
 592: 9988+11	2A76  29      	        add     hl, hl                  ; Y x 4
 593: 9999+11	2A77  19      	        add     hl, de                  ; Y x 5
 594:10010+11	2A78  29      	        add     hl, hl                  ; Y x 10
 595:10021+11	2A79  29      	        add     hl, hl                  ; Y x 20
 596:10032+11	2A7A  29      	        add     hl, hl                  ; Y x 40
 597:10043+4	2A7B  5F      	        ld      e, a
 598:10047+11	2A7C  19      	        add     hl, de                  ; add X for final address
 599:10058+20	2A7D  ED5B04E4	        ld      de, (TmsNameAddr)       ; add name table base address
 600:10078+11	2A81  19      	        add     hl, de
 601:10089+4	2A82  EB      	        ex      de, hl
 602:10093+10	2A83  C3262A  	        jp      TmsWriteAddr
 603:				
 604:				; copy a null-terminated string to VRAM
 605:				;       HL = ram source address
 606:     -	2A86          	TmsStrOut:
 607:10103+7	2A86  7E      	        ld      a, (hl)
 608:10110+7	2A87  FE00    	        cp      0                       ; return when NULL is encountered
 609:10117+5+6	2A89  C8      	        ret     z
 610:10122+17	2A8A  CD8F28  	        call    TmsRamOut
 611:10139+6	2A8D  23      	        inc     hl
 612:10145+10	2A8E  C3862A  	        jp      TmsStrOut
 613:				
 614:				; repeat a character a certain number of times
 615:				;       A = character to output
 616:				;       B = count
 617:     -	2A91          	TmsRepeat:
 618:10155+17	2A91  CD8F28  	        call    TmsRamOut
 619:10172+8+5	2A94  10FB    	        djnz    TmsRepeat
 620:10180+10	2A96  C9      	        ret
 621:				
 622:				; output a character
 623:				;       A = character to output
 624:     -	288F          	TmsChrOut:      equ TmsRamOut
 625:				
 626:				; ---------------------------------------------------------------------------
 627:				; bitmap routines
 628:				
 629:     -	A02F          	TmsClearPixel:  equ 0A02Fh              ; cpl, and b
 630:     -	00B0          	TmsSetPixel:    equ 0B0h                ; nop, or b
 631:				
 632:				; set operation for TmsPlotPixel to perform
 633:				;       HL = pixel operation (TmsClearPixel, TmsSetPixel)
 634:     -	2A97          	TmsPixelOp:
 635:10190+16	2A97  22B82A  	        ld      (TmsPixelOpPlaceHolder), hl
 636:10206+10	2A9A  C9      	        ret
 637:				
 638:				; set or clear pixel at X, Y position
 639:				;       B = Y position
 640:				;       C = X position
 641:     -	2A9B          	TmsPlotPixel:
 642:10216+4	2A9B  78      	        ld      a, b                    ; bail out if Y coord > 191
 643:10220+7	2A9C  FEC0    	        cp      192
 644:10227+5+6	2A9E  D0      	        ret     nc
 645:10232+17	2A9F  CDDE2A  	        call    TmsXYAddr               ; get address in DE for X/Y coord in BC
 646:10249+4	2AA2  79      	        ld      a, c                    ; get lower 3 bits of X coord
 647:10253+7	2AA3  E607    	        and     7
 648:10260+7	2AA5  0600    	        ld      b, 0
 649:10267+4	2AA7  4F      	        ld      c, a
 650:10271+10	2AA8  21C22A  	        ld      hl, TmsMaskLookup       ; address of mask in table
 651:10281+11	2AAB  09      	        add     hl, bc
 652:10292+7	2AAC  46      	        ld      b, (hl)                 ; save mask in B
 653:10299+16	2AAD  2A08E4  	        ld      hl, (TmsPatternAddr)    ; get base address for pattern table
 654:10315+11	2AB0  19      	        add     hl, de
 655:10326+4	2AB1  EB      	        ex      de, hl
 656:10330+17	2AB2  CD332A  	        call    TmsReadAddr             ; set read within pattern table
 657:10347+17	2AB5  CD9A28  	        call    TmsRamIn
 658:     -	2AB8          	TmsPixelOpPlaceHolder:
 659:10364+4	2AB8  B0      	        or      b                       ; mask bit in previous byte
 660:10368+4	2AB9  00      	        nop                             ; place holder for 2 byte mask operation
 661:10372+11	2ABA  F5      	        push    af
 662:10383+17	2ABB  CD262A  	        call    TmsWriteAddr            ; set write address within pattern table
 663:10400+10	2ABE  F1      	        pop     af
 664:10410+10	2ABF  C38F28  	        jp      TmsRamOut
 665:				
 666:     -	2AC2          	TmsMaskLookup:
 667:     -	2AC2  80402010	        defb 80h, 40h, 20h, 10h, 8h, 4h, 2h, 1h
	              08040201
 668:				
 669:				; set the color for a block of pixels in bitmap mode
 670:				;       B = Y position
 671:				;       C = X position
 672:				;       A = foreground/background color to set
 673:     -	2ACA          	TmsPixelColor:
 674:10420+11	2ACA  F5      	        push    af
 675:10431+4	2ACB  78      	        ld      a, b                    ; bail out if Y coord > 191
 676:10435+7	2ACC  FEC0    	        cp      192
 677:10442+5+6	2ACE  D0      	        ret     nc
 678:10447+17	2ACF  CDDE2A  	        call    TmsXYAddr               ; get address in DE for X/Y coord in BC
 679:10464+16	2AD2  2A06E4  	        ld      hl, (TmsColorAddr)      ; add the color table base address
 680:10480+11	2AD5  19      	        add     hl, de
 681:10491+4	2AD6  EB      	        ex      de, hl
 682:10495+17	2AD7  CD262A  	        call    TmsWriteAddr            ; set write address within color table
 683:10512+10	2ADA  F1      	        pop     af
 684:10522+10	2ADB  C38F28  	        jp      TmsRamOut
 685:				
 686:				; calculate address byte containing X/Y coordinate
 687:				;       B = Y position
 688:				;       C = X position
 689:				;       returns address in DE
 690:     -	2ADE          	TmsXYAddr:
 691:10532+4	2ADE  78      	        ld      a, b                    ; d = (y / 8)
 692:10536+4	2ADF  0F      	        rrca
 693:10540+4	2AE0  0F      	        rrca
 694:10544+4	2AE1  0F      	        rrca
 695:10548+7	2AE2  E61F    	        and     1fh
 696:10555+4	2AE4  57      	        ld      d, a
 697:				
 698:10559+4	2AE5  79      	        ld      a, c                    ; e = (x & f8)
 699:10563+7	2AE6  E6F8    	        and     0f8h
 700:10570+4	2AE8  5F      	        ld      e, a
 701:				
 702:10574+4	2AE9  78      	        ld      a, b                    ; e += (y & 7)
 703:10578+7	2AEA  E607    	        and     7
 704:10585+4	2AEC  B3      	        or      e
 705:10589+4	2AED  5F      	        ld      e, a
**** functions/vdpterm.s ****
 277:10593+10	2AEE  C9      	        ret
 278:				;        .include "utility.s"                   ; BDOS utility routines
 279:				    .include "font1.s"
**** functions/font1.s ****
   1:     -	2AEF          	TmsFont:
   2:				    ; 6x8 bitmap font by Oleg Kosenkov
   3:				    ; Source: https://github.com/idispatch/raster-fonts/blob/master/font-6x8.c
   4:				
   5:				    ; code=0, hex=0x00, ascii="^@"
   6:     -	2AEF  00      	    defb 00000000b
   7:     -	2AF0  00      	    defb 00000000b
   8:     -	2AF1  00      	    defb 00000000b
   9:     -	2AF2  00      	    defb 00000000b
  10:     -	2AF3  00      	    defb 00000000b
  11:     -	2AF4  00      	    defb 00000000b
  12:     -	2AF5  00      	    defb 00000000b
  13:     -	2AF6  00      	    defb 00000000b
  14:				
  15:				    ; code=1, hex=0x01, ascii="^A"
  16:     -	2AF7  38      	    defb 00111000b
  17:     -	2AF8  44      	    defb 01000100b
  18:     -	2AF9  6C      	    defb 01101100b
  19:     -	2AFA  44      	    defb 01000100b
  20:     -	2AFB  54      	    defb 01010100b
  21:     -	2AFC  44      	    defb 01000100b
  22:     -	2AFD  38      	    defb 00111000b
  23:     -	2AFE  00      	    defb 00000000b
  24:				
  25:				    ; code=2, hex=0x02, ascii="^B"
  26:     -	2AFF  38      	    defb 00111000b
  27:     -	2B00  7C      	    defb 01111100b
  28:     -	2B01  54      	    defb 01010100b
  29:     -	2B02  7C      	    defb 01111100b
  30:     -	2B03  44      	    defb 01000100b
  31:     -	2B04  7C      	    defb 01111100b
  32:     -	2B05  38      	    defb 00111000b
  33:     -	2B06  00      	    defb 00000000b
  34:				
  35:				    ; code=3, hex=0x03, ascii="^C"
  36:     -	2B07  00      	    defb 00000000b
  37:     -	2B08  28      	    defb 00101000b
  38:     -	2B09  7C      	    defb 01111100b
  39:     -	2B0A  7C      	    defb 01111100b
  40:     -	2B0B  7C      	    defb 01111100b
  41:     -	2B0C  38      	    defb 00111000b
  42:     -	2B0D  10      	    defb 00010000b
  43:     -	2B0E  00      	    defb 00000000b
  44:				
  45:				    ; code=4, hex=0x04, ascii="^D"
  46:     -	2B0F  00      	    defb 00000000b
  47:     -	2B10  10      	    defb 00010000b
  48:     -	2B11  38      	    defb 00111000b
  49:     -	2B12  7C      	    defb 01111100b
  50:     -	2B13  7C      	    defb 01111100b
  51:     -	2B14  38      	    defb 00111000b
  52:     -	2B15  10      	    defb 00010000b
  53:     -	2B16  00      	    defb 00000000b
  54:				
  55:				    ; code=5, hex=0x05, ascii="^E"
  56:     -	2B17  10      	    defb 00010000b
  57:     -	2B18  38      	    defb 00111000b
  58:     -	2B19  38      	    defb 00111000b
  59:     -	2B1A  10      	    defb 00010000b
  60:     -	2B1B  7C      	    defb 01111100b
  61:     -	2B1C  7C      	    defb 01111100b
  62:     -	2B1D  10      	    defb 00010000b
  63:     -	2B1E  00      	    defb 00000000b
  64:				
  65:				    ; code=6, hex=0x06, ascii="^F"
  66:     -	2B1F  00      	    defb 00000000b
  67:     -	2B20  10      	    defb 00010000b
  68:     -	2B21  38      	    defb 00111000b
  69:     -	2B22  7C      	    defb 01111100b
  70:     -	2B23  7C      	    defb 01111100b
  71:     -	2B24  10      	    defb 00010000b
  72:     -	2B25  38      	    defb 00111000b
  73:     -	2B26  00      	    defb 00000000b
  74:				
  75:				    ; code=7, hex=0x07, ascii="^G"
  76:     -	2B27  00      	    defb 00000000b
  77:     -	2B28  00      	    defb 00000000b
  78:     -	2B29  00      	    defb 00000000b
  79:     -	2B2A  30      	    defb 00110000b
  80:     -	2B2B  30      	    defb 00110000b
  81:     -	2B2C  00      	    defb 00000000b
  82:     -	2B2D  00      	    defb 00000000b
  83:     -	2B2E  00      	    defb 00000000b
  84:				
  85:				    ; code=8, hex=0x08, ascii="^H"
  86:     -	2B2F  FC      	    defb 11111100b
  87:     -	2B30  FC      	    defb 11111100b
  88:     -	2B31  FC      	    defb 11111100b
  89:     -	2B32  CC      	    defb 11001100b
  90:     -	2B33  CC      	    defb 11001100b
  91:     -	2B34  FC      	    defb 11111100b
  92:     -	2B35  FC      	    defb 11111100b
  93:     -	2B36  FC      	    defb 11111100b
  94:				
  95:				    ; code=9, hex=0x09, ascii="^I"
  96:     -	2B37  00      	    defb 00000000b
  97:     -	2B38  00      	    defb 00000000b
  98:     -	2B39  78      	    defb 01111000b
  99:     -	2B3A  48      	    defb 01001000b
 100:     -	2B3B  48      	    defb 01001000b
 101:     -	2B3C  78      	    defb 01111000b
 102:     -	2B3D  00      	    defb 00000000b
 103:     -	2B3E  00      	    defb 00000000b
 104:				
 105:				    ; code=10, hex=0x0A, ascii="^J"
 106:     -	2B3F  FC      	    defb 11111100b
 107:     -	2B40  FC      	    defb 11111100b
 108:     -	2B41  84      	    defb 10000100b
 109:     -	2B42  B4      	    defb 10110100b
 110:     -	2B43  B4      	    defb 10110100b
 111:     -	2B44  84      	    defb 10000100b
 112:     -	2B45  FC      	    defb 11111100b
 113:     -	2B46  FC      	    defb 11111100b
 114:				
 115:				    ; code=11, hex=0x0b, ascii="^K"
 116:     -	2B47  00      	    defb 00000000b
 117:     -	2B48  1C      	    defb 00011100b
 118:     -	2B49  0C      	    defb 00001100b
 119:     -	2B4A  34      	    defb 00110100b
 120:     -	2B4B  48      	    defb 01001000b
 121:     -	2B4C  48      	    defb 01001000b
 122:     -	2B4D  30      	    defb 00110000b
 123:     -	2B4E  00      	    defb 00000000b
 124:				
 125:				    ; code=12, hex=0x0C, ascii="^L"
 126:     -	2B4F  38      	    defb 00111000b
 127:     -	2B50  44      	    defb 01000100b
 128:     -	2B51  44      	    defb 01000100b
 129:     -	2B52  38      	    defb 00111000b
 130:     -	2B53  10      	    defb 00010000b
 131:     -	2B54  38      	    defb 00111000b
 132:     -	2B55  10      	    defb 00010000b
 133:     -	2B56  00      	    defb 00000000b
 134:				
 135:				    ; code=13, hex=0x0D, ascii="^M"
 136:     -	2B57  10      	    defb 00010000b
 137:     -	2B58  18      	    defb 00011000b
 138:     -	2B59  14      	    defb 00010100b
 139:     -	2B5A  10      	    defb 00010000b
 140:     -	2B5B  30      	    defb 00110000b
 141:     -	2B5C  70      	    defb 01110000b
 142:     -	2B5D  60      	    defb 01100000b
 143:     -	2B5E  00      	    defb 00000000b
 144:				
 145:				    ; code=14, hex=0x0E, ascii="^N"
 146:     -	2B5F  0C      	    defb 00001100b
 147:     -	2B60  34      	    defb 00110100b
 148:     -	2B61  2C      	    defb 00101100b
 149:     -	2B62  34      	    defb 00110100b
 150:     -	2B63  2C      	    defb 00101100b
 151:     -	2B64  6C      	    defb 01101100b
 152:     -	2B65  60      	    defb 01100000b
 153:     -	2B66  00      	    defb 00000000b
 154:				
 155:				    ; code=15, hex=0x0F, ascii="^O"
 156:     -	2B67  00      	    defb 00000000b
 157:     -	2B68  54      	    defb 01010100b
 158:     -	2B69  38      	    defb 00111000b
 159:     -	2B6A  6C      	    defb 01101100b
 160:     -	2B6B  38      	    defb 00111000b
 161:     -	2B6C  54      	    defb 01010100b
 162:     -	2B6D  00      	    defb 00000000b
 163:     -	2B6E  00      	    defb 00000000b
 164:				
 165:				    ; code=16, hex=0x10, ascii="^P"
 166:     -	2B6F  20      	    defb 00100000b
 167:     -	2B70  30      	    defb 00110000b
 168:     -	2B71  38      	    defb 00111000b
 169:     -	2B72  3C      	    defb 00111100b
 170:     -	2B73  38      	    defb 00111000b
 171:     -	2B74  30      	    defb 00110000b
 172:     -	2B75  20      	    defb 00100000b
 173:     -	2B76  00      	    defb 00000000b
 174:				
 175:				    ; code=17, hex=0x11, ascii="^Q"
 176:     -	2B77  08      	    defb 00001000b
 177:     -	2B78  18      	    defb 00011000b
 178:     -	2B79  38      	    defb 00111000b
 179:     -	2B7A  78      	    defb 01111000b
 180:     -	2B7B  38      	    defb 00111000b
 181:     -	2B7C  18      	    defb 00011000b
 182:     -	2B7D  08      	    defb 00001000b
 183:     -	2B7E  00      	    defb 00000000b
 184:				
 185:				    ; code=18, hex=0x12, ascii="^R"
 186:     -	2B7F  10      	    defb 00010000b
 187:     -	2B80  38      	    defb 00111000b
 188:     -	2B81  7C      	    defb 01111100b
 189:     -	2B82  10      	    defb 00010000b
 190:     -	2B83  7C      	    defb 01111100b
 191:     -	2B84  38      	    defb 00111000b
 192:     -	2B85  10      	    defb 00010000b
 193:     -	2B86  00      	    defb 00000000b
 194:				
 195:				    ; code=19, hex=0x13, ascii="^S"
 196:     -	2B87  28      	    defb 00101000b
 197:     -	2B88  28      	    defb 00101000b
 198:     -	2B89  28      	    defb 00101000b
 199:     -	2B8A  28      	    defb 00101000b
 200:     -	2B8B  28      	    defb 00101000b
 201:     -	2B8C  00      	    defb 00000000b
 202:     -	2B8D  28      	    defb 00101000b
 203:     -	2B8E  00      	    defb 00000000b
 204:				
 205:				    ; code=20, hex=0x14, ascii="^T"
 206:     -	2B8F  3C      	    defb 00111100b
 207:     -	2B90  54      	    defb 01010100b
 208:     -	2B91  54      	    defb 01010100b
 209:     -	2B92  34      	    defb 00110100b
 210:     -	2B93  14      	    defb 00010100b
 211:     -	2B94  14      	    defb 00010100b
 212:     -	2B95  14      	    defb 00010100b
 213:     -	2B96  00      	    defb 00000000b
 214:				
 215:				    ; code=21, hex=0x15, ascii="^U"
 216:     -	2B97  38      	    defb 00111000b
 217:     -	2B98  44      	    defb 01000100b
 218:     -	2B99  30      	    defb 00110000b
 219:     -	2B9A  28      	    defb 00101000b
 220:     -	2B9B  18      	    defb 00011000b
 221:     -	2B9C  44      	    defb 01000100b
 222:     -	2B9D  38      	    defb 00111000b
 223:     -	2B9E  00      	    defb 00000000b
 224:				
 225:				    ; code=22, hex=0x16, ascii="^V"
 226:     -	2B9F  00      	    defb 00000000b
 227:     -	2BA0  00      	    defb 00000000b
 228:     -	2BA1  00      	    defb 00000000b
 229:     -	2BA2  00      	    defb 00000000b
 230:     -	2BA3  00      	    defb 00000000b
 231:     -	2BA4  78      	    defb 01111000b
 232:     -	2BA5  78      	    defb 01111000b
 233:     -	2BA6  00      	    defb 00000000b
 234:				
 235:				    ; code=23, hex=0x17, ascii="^W"
 236:     -	2BA7  10      	    defb 00010000b
 237:     -	2BA8  38      	    defb 00111000b
 238:     -	2BA9  7C      	    defb 01111100b
 239:     -	2BAA  10      	    defb 00010000b
 240:     -	2BAB  7C      	    defb 01111100b
 241:     -	2BAC  38      	    defb 00111000b
 242:     -	2BAD  10      	    defb 00010000b
 243:     -	2BAE  38      	    defb 00111000b
 244:				
 245:				    ; code=24, hex=0x18, ascii="^X"
 246:     -	2BAF  10      	    defb 00010000b
 247:     -	2BB0  38      	    defb 00111000b
 248:     -	2BB1  7C      	    defb 01111100b
 249:     -	2BB2  10      	    defb 00010000b
 250:     -	2BB3  10      	    defb 00010000b
 251:     -	2BB4  10      	    defb 00010000b
 252:     -	2BB5  10      	    defb 00010000b
 253:     -	2BB6  00      	    defb 00000000b
 254:				
 255:				    ; code=25, hex=0x19, ascii="^Y"
 256:     -	2BB7  10      	    defb 00010000b
 257:     -	2BB8  10      	    defb 00010000b
 258:     -	2BB9  10      	    defb 00010000b
 259:     -	2BBA  10      	    defb 00010000b
 260:     -	2BBB  7C      	    defb 01111100b
 261:     -	2BBC  38      	    defb 00111000b
 262:     -	2BBD  10      	    defb 00010000b
 263:     -	2BBE  00      	    defb 00000000b
 264:				
 265:				    ; code=26, hex=0x1A, ascii="^Z"
 266:     -	2BBF  00      	    defb 00000000b
 267:     -	2BC0  10      	    defb 00010000b
 268:     -	2BC1  18      	    defb 00011000b
 269:     -	2BC2  7C      	    defb 01111100b
 270:     -	2BC3  18      	    defb 00011000b
 271:     -	2BC4  10      	    defb 00010000b
 272:     -	2BC5  00      	    defb 00000000b
 273:     -	2BC6  00      	    defb 00000000b
 274:				
 275:				    ; code=27, hex=0x1B, ascii="^["
 276:     -	2BC7  00      	    defb 00000000b
 277:     -	2BC8  10      	    defb 00010000b
 278:     -	2BC9  30      	    defb 00110000b
 279:     -	2BCA  7C      	    defb 01111100b
 280:     -	2BCB  30      	    defb 00110000b
 281:     -	2BCC  10      	    defb 00010000b
 282:     -	2BCD  00      	    defb 00000000b
 283:     -	2BCE  00      	    defb 00000000b
 284:				
 285:				    ; code=28, hex=0x1C, ascii="^\"
 286:     -	2BCF  00      	    defb 00000000b
 287:     -	2BD0  00      	    defb 00000000b
 288:     -	2BD1  00      	    defb 00000000b
 289:     -	2BD2  40      	    defb 01000000b
 290:     -	2BD3  40      	    defb 01000000b
 291:     -	2BD4  40      	    defb 01000000b
 292:     -	2BD5  7C      	    defb 01111100b
 293:     -	2BD6  00      	    defb 00000000b
 294:				
 295:				    ; code=29, hex=0x1D, ascii="^]"
 296:     -	2BD7  00      	    defb 00000000b
 297:     -	2BD8  28      	    defb 00101000b
 298:     -	2BD9  28      	    defb 00101000b
 299:     -	2BDA  7C      	    defb 01111100b
 300:     -	2BDB  28      	    defb 00101000b
 301:     -	2BDC  28      	    defb 00101000b
 302:     -	2BDD  00      	    defb 00000000b
 303:     -	2BDE  00      	    defb 00000000b
 304:				
 305:				    ; code=30, hex=0x1E, ascii="^^"
 306:     -	2BDF  10      	    defb 00010000b
 307:     -	2BE0  10      	    defb 00010000b
 308:     -	2BE1  38      	    defb 00111000b
 309:     -	2BE2  38      	    defb 00111000b
 310:     -	2BE3  7C      	    defb 01111100b
 311:     -	2BE4  7C      	    defb 01111100b
 312:     -	2BE5  00      	    defb 00000000b
 313:     -	2BE6  00      	    defb 00000000b
 314:				
 315:				    ; code=31, hex=0x1F, ascii="^_"
 316:     -	2BE7  7C      	    defb 01111100b
 317:     -	2BE8  7C      	    defb 01111100b
 318:     -	2BE9  38      	    defb 00111000b
 319:     -	2BEA  38      	    defb 00111000b
 320:     -	2BEB  10      	    defb 00010000b
 321:     -	2BEC  10      	    defb 00010000b
 322:     -	2BED  00      	    defb 00000000b
 323:     -	2BEE  00      	    defb 00000000b
 324:				
 325:				    ; code=32, hex=0x20, ascii=" "
 326:     -	2BEF  00      	    defb 00000000b
 327:     -	2BF0  00      	    defb 00000000b
 328:     -	2BF1  00      	    defb 00000000b
 329:     -	2BF2  00      	    defb 00000000b
 330:     -	2BF3  00      	    defb 00000000b
 331:     -	2BF4  00      	    defb 00000000b
 332:     -	2BF5  00      	    defb 00000000b
 333:     -	2BF6  00      	    defb 00000000b
 334:				
 335:				    ; code=33, hex=0x21, ascii="!"
 336:     -	2BF7  10      	    defb 00010000b
 337:     -	2BF8  38      	    defb 00111000b
 338:     -	2BF9  38      	    defb 00111000b
 339:     -	2BFA  10      	    defb 00010000b
 340:     -	2BFB  10      	    defb 00010000b
 341:     -	2BFC  00      	    defb 00000000b
 342:     -	2BFD  10      	    defb 00010000b
 343:     -	2BFE  00      	    defb 00000000b
 344:				
 345:				    ; code=34, hex=0x22, ascii="""
 346:     -	2BFF  6C      	    defb 01101100b
 347:     -	2C00  6C      	    defb 01101100b
 348:     -	2C01  48      	    defb 01001000b
 349:     -	2C02  00      	    defb 00000000b
 350:     -	2C03  00      	    defb 00000000b
 351:     -	2C04  00      	    defb 00000000b
 352:     -	2C05  00      	    defb 00000000b
 353:     -	2C06  00      	    defb 00000000b
 354:				
 355:				    ; code=35, hex=0x23, ascii="#"
 356:     -	2C07  00      	    defb 00000000b
 357:     -	2C08  28      	    defb 00101000b
 358:     -	2C09  7C      	    defb 01111100b
 359:     -	2C0A  28      	    defb 00101000b
 360:     -	2C0B  28      	    defb 00101000b
 361:     -	2C0C  7C      	    defb 01111100b
 362:     -	2C0D  28      	    defb 00101000b
 363:     -	2C0E  00      	    defb 00000000b
 364:				
 365:				    ; code=36, hex=0x24, ascii="$"
 366:     -	2C0F  20      	    defb 00100000b
 367:     -	2C10  38      	    defb 00111000b
 368:     -	2C11  40      	    defb 01000000b
 369:     -	2C12  30      	    defb 00110000b
 370:     -	2C13  08      	    defb 00001000b
 371:     -	2C14  70      	    defb 01110000b
 372:     -	2C15  10      	    defb 00010000b
 373:     -	2C16  00      	    defb 00000000b
 374:				
 375:				    ; code=37, hex=0x25, ascii=""
 376:     -	2C17  64      	    defb 01100100b
 377:     -	2C18  64      	    defb 01100100b
 378:     -	2C19  08      	    defb 00001000b
 379:     -	2C1A  10      	    defb 00010000b
 380:     -	2C1B  20      	    defb 00100000b
 381:     -	2C1C  4C      	    defb 01001100b
 382:     -	2C1D  4C      	    defb 01001100b
 383:     -	2C1E  00      	    defb 00000000b
 384:				
 385:				    ; code=38, hex=0x26, ascii="&"
 386:     -	2C1F  20      	    defb 00100000b
 387:     -	2C20  50      	    defb 01010000b
 388:     -	2C21  50      	    defb 01010000b
 389:     -	2C22  20      	    defb 00100000b
 390:     -	2C23  54      	    defb 01010100b
 391:     -	2C24  48      	    defb 01001000b
 392:     -	2C25  34      	    defb 00110100b
 393:     -	2C26  00      	    defb 00000000b
 394:				
 395:				    ; code=39, hex=0x27, ascii="'"
 396:     -	2C27  30      	    defb 00110000b
 397:     -	2C28  30      	    defb 00110000b
 398:     -	2C29  20      	    defb 00100000b
 399:     -	2C2A  00      	    defb 00000000b
 400:     -	2C2B  00      	    defb 00000000b
 401:     -	2C2C  00      	    defb 00000000b
 402:     -	2C2D  00      	    defb 00000000b
 403:     -	2C2E  00      	    defb 00000000b
 404:				
 405:				    ; code=40, hex=0x28, ascii="("
 406:     -	2C2F  10      	    defb 00010000b
 407:     -	2C30  20      	    defb 00100000b
 408:     -	2C31  20      	    defb 00100000b
 409:     -	2C32  20      	    defb 00100000b
 410:     -	2C33  20      	    defb 00100000b
 411:     -	2C34  20      	    defb 00100000b
 412:     -	2C35  10      	    defb 00010000b
 413:     -	2C36  00      	    defb 00000000b
 414:				
 415:				    ; code=41, hex=0x29, ascii=")"
 416:     -	2C37  20      	    defb 00100000b
 417:     -	2C38  10      	    defb 00010000b
 418:     -	2C39  10      	    defb 00010000b
 419:     -	2C3A  10      	    defb 00010000b
 420:     -	2C3B  10      	    defb 00010000b
 421:     -	2C3C  10      	    defb 00010000b
 422:     -	2C3D  20      	    defb 00100000b
 423:     -	2C3E  00      	    defb 00000000b
 424:				
 425:				    ; code=42, hex=0x2A, ascii="*"
 426:     -	2C3F  00      	    defb 00000000b
 427:     -	2C40  28      	    defb 00101000b
 428:     -	2C41  38      	    defb 00111000b
 429:     -	2C42  7C      	    defb 01111100b
 430:     -	2C43  38      	    defb 00111000b
 431:     -	2C44  28      	    defb 00101000b
 432:     -	2C45  00      	    defb 00000000b
 433:     -	2C46  00      	    defb 00000000b
 434:				
 435:				    ; code=43, hex=0x2B, ascii="+"
 436:     -	2C47  00      	    defb 00000000b
 437:     -	2C48  10      	    defb 00010000b
 438:     -	2C49  10      	    defb 00010000b
 439:     -	2C4A  7C      	    defb 01111100b
 440:     -	2C4B  10      	    defb 00010000b
 441:     -	2C4C  10      	    defb 00010000b
 442:     -	2C4D  00      	    defb 00000000b
 443:     -	2C4E  00      	    defb 00000000b
 444:				
 445:				    ; code=44, hex=0x2C, ascii=","
 446:     -	2C4F  00      	    defb 00000000b
 447:     -	2C50  00      	    defb 00000000b
 448:     -	2C51  00      	    defb 00000000b
 449:     -	2C52  00      	    defb 00000000b
 450:     -	2C53  00      	    defb 00000000b
 451:     -	2C54  30      	    defb 00110000b
 452:     -	2C55  30      	    defb 00110000b
 453:     -	2C56  20      	    defb 00100000b
 454:				
 455:				    ; code=45, hex=0x2D, ascii="-"
 456:     -	2C57  00      	    defb 00000000b
 457:     -	2C58  00      	    defb 00000000b
 458:     -	2C59  00      	    defb 00000000b
 459:     -	2C5A  7C      	    defb 01111100b
 460:     -	2C5B  00      	    defb 00000000b
 461:     -	2C5C  00      	    defb 00000000b
 462:     -	2C5D  00      	    defb 00000000b
 463:     -	2C5E  00      	    defb 00000000b
 464:				
 465:				    ; code=46, hex=0x2E, ascii="."
 466:     -	2C5F  00      	    defb 00000000b
 467:     -	2C60  00      	    defb 00000000b
 468:     -	2C61  00      	    defb 00000000b
 469:     -	2C62  00      	    defb 00000000b
 470:     -	2C63  00      	    defb 00000000b
 471:     -	2C64  30      	    defb 00110000b
 472:     -	2C65  30      	    defb 00110000b
 473:     -	2C66  00      	    defb 00000000b
 474:				
 475:				    ; code=47, hex=0x2F, ascii="/"
 476:     -	2C67  00      	    defb 00000000b
 477:     -	2C68  04      	    defb 00000100b
 478:     -	2C69  08      	    defb 00001000b
 479:     -	2C6A  10      	    defb 00010000b
 480:     -	2C6B  20      	    defb 00100000b
 481:     -	2C6C  40      	    defb 01000000b
 482:     -	2C6D  00      	    defb 00000000b
 483:     -	2C6E  00      	    defb 00000000b
 484:				
 485:				    ; code=48, hex=0x30, ascii="0"
 486:     -	2C6F  38      	    defb 00111000b
 487:     -	2C70  44      	    defb 01000100b
 488:     -	2C71  4C      	    defb 01001100b
 489:     -	2C72  54      	    defb 01010100b
 490:     -	2C73  64      	    defb 01100100b
 491:     -	2C74  44      	    defb 01000100b
 492:     -	2C75  38      	    defb 00111000b
 493:     -	2C76  00      	    defb 00000000b
 494:				
 495:				    ; code=49, hex=0x31, ascii="1"
 496:     -	2C77  10      	    defb 00010000b
 497:     -	2C78  30      	    defb 00110000b
 498:     -	2C79  10      	    defb 00010000b
 499:     -	2C7A  10      	    defb 00010000b
 500:     -	2C7B  10      	    defb 00010000b
 501:     -	2C7C  10      	    defb 00010000b
 502:     -	2C7D  38      	    defb 00111000b
 503:     -	2C7E  00      	    defb 00000000b
 504:				
 505:				    ; code=50, hex=0x32, ascii="2"
 506:     -	2C7F  38      	    defb 00111000b
 507:     -	2C80  44      	    defb 01000100b
 508:     -	2C81  04      	    defb 00000100b
 509:     -	2C82  18      	    defb 00011000b
 510:     -	2C83  20      	    defb 00100000b
 511:     -	2C84  40      	    defb 01000000b
 512:     -	2C85  7C      	    defb 01111100b
 513:     -	2C86  00      	    defb 00000000b
 514:				
 515:				    ; code=51, hex=0x33, ascii="3"
 516:     -	2C87  38      	    defb 00111000b
 517:     -	2C88  44      	    defb 01000100b
 518:     -	2C89  04      	    defb 00000100b
 519:     -	2C8A  38      	    defb 00111000b
 520:     -	2C8B  04      	    defb 00000100b
 521:     -	2C8C  44      	    defb 01000100b
 522:     -	2C8D  38      	    defb 00111000b
 523:     -	2C8E  00      	    defb 00000000b
 524:				
 525:				    ; code=52, hex=0x34, ascii="4"
 526:     -	2C8F  08      	    defb 00001000b
 527:     -	2C90  18      	    defb 00011000b
 528:     -	2C91  28      	    defb 00101000b
 529:     -	2C92  48      	    defb 01001000b
 530:     -	2C93  7C      	    defb 01111100b
 531:     -	2C94  08      	    defb 00001000b
 532:     -	2C95  08      	    defb 00001000b
 533:     -	2C96  00      	    defb 00000000b
 534:				
 535:				    ; code=53, hex=0x35, ascii="5"
 536:     -	2C97  7C      	    defb 01111100b
 537:     -	2C98  40      	    defb 01000000b
 538:     -	2C99  40      	    defb 01000000b
 539:     -	2C9A  78      	    defb 01111000b
 540:     -	2C9B  04      	    defb 00000100b
 541:     -	2C9C  44      	    defb 01000100b
 542:     -	2C9D  38      	    defb 00111000b
 543:     -	2C9E  00      	    defb 00000000b
 544:				
 545:				    ; code=54, hex=0x36, ascii="6"
 546:     -	2C9F  18      	    defb 00011000b
 547:     -	2CA0  20      	    defb 00100000b
 548:     -	2CA1  40      	    defb 01000000b
 549:     -	2CA2  78      	    defb 01111000b
 550:     -	2CA3  44      	    defb 01000100b
 551:     -	2CA4  44      	    defb 01000100b
 552:     -	2CA5  38      	    defb 00111000b
 553:     -	2CA6  00      	    defb 00000000b
 554:				
 555:				    ; code=55, hex=0x37, ascii="7"
 556:     -	2CA7  7C      	    defb 01111100b
 557:     -	2CA8  04      	    defb 00000100b
 558:     -	2CA9  08      	    defb 00001000b
 559:     -	2CAA  10      	    defb 00010000b
 560:     -	2CAB  20      	    defb 00100000b
 561:     -	2CAC  20      	    defb 00100000b
 562:     -	2CAD  20      	    defb 00100000b
 563:     -	2CAE  00      	    defb 00000000b
 564:				
 565:				    ; code=56, hex=0x38, ascii="8"
 566:     -	2CAF  38      	    defb 00111000b
 567:     -	2CB0  44      	    defb 01000100b
 568:     -	2CB1  44      	    defb 01000100b
 569:     -	2CB2  38      	    defb 00111000b
 570:     -	2CB3  44      	    defb 01000100b
 571:     -	2CB4  44      	    defb 01000100b
 572:     -	2CB5  38      	    defb 00111000b
 573:     -	2CB6  00      	    defb 00000000b
 574:				
 575:				    ; code=57, hex=0x39, ascii="9"
 576:     -	2CB7  38      	    defb 00111000b
 577:     -	2CB8  44      	    defb 01000100b
 578:     -	2CB9  44      	    defb 01000100b
 579:     -	2CBA  3C      	    defb 00111100b
 580:     -	2CBB  04      	    defb 00000100b
 581:     -	2CBC  08      	    defb 00001000b
 582:     -	2CBD  30      	    defb 00110000b
 583:     -	2CBE  00      	    defb 00000000b
 584:				
 585:				    ; code=58, hex=0x3A, ascii=":"
 586:     -	2CBF  00      	    defb 00000000b
 587:     -	2CC0  00      	    defb 00000000b
 588:     -	2CC1  30      	    defb 00110000b
 589:     -	2CC2  30      	    defb 00110000b
 590:     -	2CC3  00      	    defb 00000000b
 591:     -	2CC4  30      	    defb 00110000b
 592:     -	2CC5  30      	    defb 00110000b
 593:     -	2CC6  00      	    defb 00000000b
 594:				
 595:				    ; code=59, hex=0x3B, ascii=";"
 596:     -	2CC7  00      	    defb 00000000b
 597:     -	2CC8  00      	    defb 00000000b
 598:     -	2CC9  30      	    defb 00110000b
 599:     -	2CCA  30      	    defb 00110000b
 600:     -	2CCB  00      	    defb 00000000b
 601:     -	2CCC  30      	    defb 00110000b
 602:     -	2CCD  30      	    defb 00110000b
 603:     -	2CCE  20      	    defb 00100000b
 604:				
 605:				    ; code=60, hex=0x3C, ascii="<"
 606:     -	2CCF  08      	    defb 00001000b
 607:     -	2CD0  10      	    defb 00010000b
 608:     -	2CD1  20      	    defb 00100000b
 609:     -	2CD2  40      	    defb 01000000b
 610:     -	2CD3  20      	    defb 00100000b
 611:     -	2CD4  10      	    defb 00010000b
 612:     -	2CD5  08      	    defb 00001000b
 613:     -	2CD6  00      	    defb 00000000b
 614:				
 615:				    ; code=61, hex=0x3D, ascii="="
 616:     -	2CD7  00      	    defb 00000000b
 617:     -	2CD8  00      	    defb 00000000b
 618:     -	2CD9  7C      	    defb 01111100b
 619:     -	2CDA  00      	    defb 00000000b
 620:     -	2CDB  00      	    defb 00000000b
 621:     -	2CDC  7C      	    defb 01111100b
 622:     -	2CDD  00      	    defb 00000000b
 623:     -	2CDE  00      	    defb 00000000b
 624:				
 625:				    ; code=62, hex=0x3E, ascii=">"
 626:     -	2CDF  20      	    defb 00100000b
 627:     -	2CE0  10      	    defb 00010000b
 628:     -	2CE1  08      	    defb 00001000b
 629:     -	2CE2  04      	    defb 00000100b
 630:     -	2CE3  08      	    defb 00001000b
 631:     -	2CE4  10      	    defb 00010000b
 632:     -	2CE5  20      	    defb 00100000b
 633:     -	2CE6  00      	    defb 00000000b
 634:				
 635:				    ; code=63, hex=0x3F, ascii="?"
 636:     -	2CE7  38      	    defb 00111000b
 637:     -	2CE8  44      	    defb 01000100b
 638:     -	2CE9  04      	    defb 00000100b
 639:     -	2CEA  18      	    defb 00011000b
 640:     -	2CEB  10      	    defb 00010000b
 641:     -	2CEC  00      	    defb 00000000b
 642:     -	2CED  10      	    defb 00010000b
 643:     -	2CEE  00      	    defb 00000000b
 644:				
 645:				    ; code=64, hex=0x40, ascii="@"
 646:     -	2CEF  38      	    defb 00111000b
 647:     -	2CF0  44      	    defb 01000100b
 648:     -	2CF1  5C      	    defb 01011100b
 649:     -	2CF2  54      	    defb 01010100b
 650:     -	2CF3  5C      	    defb 01011100b
 651:     -	2CF4  40      	    defb 01000000b
 652:     -	2CF5  38      	    defb 00111000b
 653:     -	2CF6  00      	    defb 00000000b
 654:				
 655:				    ; code=65, hex=0x41, ascii="A"
 656:     -	2CF7  38      	    defb 00111000b
 657:     -	2CF8  44      	    defb 01000100b
 658:     -	2CF9  44      	    defb 01000100b
 659:     -	2CFA  44      	    defb 01000100b
 660:     -	2CFB  7C      	    defb 01111100b
 661:     -	2CFC  44      	    defb 01000100b
 662:     -	2CFD  44      	    defb 01000100b
 663:     -	2CFE  00      	    defb 00000000b
 664:				
 665:				    ; code=66, hex=0x42, ascii="B"
 666:     -	2CFF  78      	    defb 01111000b
 667:     -	2D00  44      	    defb 01000100b
 668:     -	2D01  44      	    defb 01000100b
 669:     -	2D02  78      	    defb 01111000b
 670:     -	2D03  44      	    defb 01000100b
 671:     -	2D04  44      	    defb 01000100b
 672:     -	2D05  78      	    defb 01111000b
 673:     -	2D06  00      	    defb 00000000b
 674:				
 675:				    ; code=67, hex=0x43, ascii="C"
 676:     -	2D07  38      	    defb 00111000b
 677:     -	2D08  44      	    defb 01000100b
 678:     -	2D09  40      	    defb 01000000b
 679:     -	2D0A  40      	    defb 01000000b
 680:     -	2D0B  40      	    defb 01000000b
 681:     -	2D0C  44      	    defb 01000100b
 682:     -	2D0D  38      	    defb 00111000b
 683:     -	2D0E  00      	    defb 00000000b
 684:				
 685:				    ; code=68, hex=0x44, ascii="D"
 686:     -	2D0F  78      	    defb 01111000b
 687:     -	2D10  44      	    defb 01000100b
 688:     -	2D11  44      	    defb 01000100b
 689:     -	2D12  44      	    defb 01000100b
 690:     -	2D13  44      	    defb 01000100b
 691:     -	2D14  44      	    defb 01000100b
 692:     -	2D15  78      	    defb 01111000b
 693:     -	2D16  00      	    defb 00000000b
 694:				
 695:				    ; code=69, hex=0x45, ascii="E"
 696:     -	2D17  7C      	    defb 01111100b
 697:     -	2D18  40      	    defb 01000000b
 698:     -	2D19  40      	    defb 01000000b
 699:     -	2D1A  78      	    defb 01111000b
 700:     -	2D1B  40      	    defb 01000000b
 701:     -	2D1C  40      	    defb 01000000b
 702:     -	2D1D  7C      	    defb 01111100b
 703:     -	2D1E  00      	    defb 00000000b
 704:				
 705:				    ; code=70, hex=0x46, ascii="F"
 706:     -	2D1F  7C      	    defb 01111100b
 707:     -	2D20  40      	    defb 01000000b
 708:     -	2D21  40      	    defb 01000000b
 709:     -	2D22  78      	    defb 01111000b
 710:     -	2D23  40      	    defb 01000000b
 711:     -	2D24  40      	    defb 01000000b
 712:     -	2D25  40      	    defb 01000000b
 713:     -	2D26  00      	    defb 00000000b
 714:				
 715:				    ; code=71, hex=0x47, ascii="G"
 716:     -	2D27  38      	    defb 00111000b
 717:     -	2D28  44      	    defb 01000100b
 718:     -	2D29  40      	    defb 01000000b
 719:     -	2D2A  5C      	    defb 01011100b
 720:     -	2D2B  44      	    defb 01000100b
 721:     -	2D2C  44      	    defb 01000100b
 722:     -	2D2D  3C      	    defb 00111100b
 723:     -	2D2E  00      	    defb 00000000b
 724:				
 725:				    ; code=72, hex=0x48, ascii="H"
 726:     -	2D2F  44      	    defb 01000100b
 727:     -	2D30  44      	    defb 01000100b
 728:     -	2D31  44      	    defb 01000100b
 729:     -	2D32  7C      	    defb 01111100b
 730:     -	2D33  44      	    defb 01000100b
 731:     -	2D34  44      	    defb 01000100b
 732:     -	2D35  44      	    defb 01000100b
 733:     -	2D36  00      	    defb 00000000b
 734:				
 735:				    ; code=73, hex=0x49, ascii="I"
 736:     -	2D37  38      	    defb 00111000b
 737:     -	2D38  10      	    defb 00010000b
 738:     -	2D39  10      	    defb 00010000b
 739:     -	2D3A  10      	    defb 00010000b
 740:     -	2D3B  10      	    defb 00010000b
 741:     -	2D3C  10      	    defb 00010000b
 742:     -	2D3D  38      	    defb 00111000b
 743:     -	2D3E  00      	    defb 00000000b
 744:				
 745:				    ; code=74, hex=0x4A, ascii="J"
 746:     -	2D3F  04      	    defb 00000100b
 747:     -	2D40  04      	    defb 00000100b
 748:     -	2D41  04      	    defb 00000100b
 749:     -	2D42  04      	    defb 00000100b
 750:     -	2D43  44      	    defb 01000100b
 751:     -	2D44  44      	    defb 01000100b
 752:     -	2D45  38      	    defb 00111000b
 753:     -	2D46  00      	    defb 00000000b
 754:				
 755:				    ; code=75, hex=0x4B, ascii="K"
 756:     -	2D47  44      	    defb 01000100b
 757:     -	2D48  48      	    defb 01001000b
 758:     -	2D49  50      	    defb 01010000b
 759:     -	2D4A  60      	    defb 01100000b
 760:     -	2D4B  50      	    defb 01010000b
 761:     -	2D4C  48      	    defb 01001000b
 762:     -	2D4D  44      	    defb 01000100b
 763:     -	2D4E  00      	    defb 00000000b
 764:				
 765:				    ; code=76, hex=0x4C, ascii="L"
 766:     -	2D4F  40      	    defb 01000000b
 767:     -	2D50  40      	    defb 01000000b
 768:     -	2D51  40      	    defb 01000000b
 769:     -	2D52  40      	    defb 01000000b
 770:     -	2D53  40      	    defb 01000000b
 771:     -	2D54  40      	    defb 01000000b
 772:     -	2D55  7C      	    defb 01111100b
 773:     -	2D56  00      	    defb 00000000b
 774:				
 775:				    ; code=77, hex=0x4D, ascii="M"
 776:     -	2D57  44      	    defb 01000100b
 777:     -	2D58  6C      	    defb 01101100b
 778:     -	2D59  54      	    defb 01010100b
 779:     -	2D5A  44      	    defb 01000100b
 780:     -	2D5B  44      	    defb 01000100b
 781:     -	2D5C  44      	    defb 01000100b
 782:     -	2D5D  44      	    defb 01000100b
 783:     -	2D5E  00      	    defb 00000000b
 784:				
 785:				    ; code=78, hex=0x4E, ascii="N"
 786:     -	2D5F  44      	    defb 01000100b
 787:     -	2D60  64      	    defb 01100100b
 788:     -	2D61  54      	    defb 01010100b
 789:     -	2D62  4C      	    defb 01001100b
 790:     -	2D63  44      	    defb 01000100b
 791:     -	2D64  44      	    defb 01000100b
 792:     -	2D65  44      	    defb 01000100b
 793:     -	2D66  00      	    defb 00000000b
 794:				
 795:				    ; code=79, hex=0x4F, ascii="O"
 796:     -	2D67  38      	    defb 00111000b
 797:     -	2D68  44      	    defb 01000100b
 798:     -	2D69  44      	    defb 01000100b
 799:     -	2D6A  44      	    defb 01000100b
 800:     -	2D6B  44      	    defb 01000100b
 801:     -	2D6C  44      	    defb 01000100b
 802:     -	2D6D  38      	    defb 00111000b
 803:     -	2D6E  00      	    defb 00000000b
 804:				
 805:				    ; code=80, hex=0x50, ascii="P"
 806:     -	2D6F  78      	    defb 01111000b
 807:     -	2D70  44      	    defb 01000100b
 808:     -	2D71  44      	    defb 01000100b
 809:     -	2D72  78      	    defb 01111000b
 810:     -	2D73  40      	    defb 01000000b
 811:     -	2D74  40      	    defb 01000000b
 812:     -	2D75  40      	    defb 01000000b
 813:     -	2D76  00      	    defb 00000000b
 814:				
 815:				    ; code=81, hex=0x51, ascii="Q"
 816:     -	2D77  38      	    defb 00111000b
 817:     -	2D78  44      	    defb 01000100b
 818:     -	2D79  44      	    defb 01000100b
 819:     -	2D7A  44      	    defb 01000100b
 820:     -	2D7B  54      	    defb 01010100b
 821:     -	2D7C  48      	    defb 01001000b
 822:     -	2D7D  34      	    defb 00110100b
 823:     -	2D7E  00      	    defb 00000000b
 824:				
 825:				    ; code=82, hex=0x52, ascii="R"
 826:     -	2D7F  78      	    defb 01111000b
 827:     -	2D80  44      	    defb 01000100b
 828:     -	2D81  44      	    defb 01000100b
 829:     -	2D82  78      	    defb 01111000b
 830:     -	2D83  48      	    defb 01001000b
 831:     -	2D84  44      	    defb 01000100b
 832:     -	2D85  44      	    defb 01000100b
 833:     -	2D86  00      	    defb 00000000b
 834:				
 835:				    ; code=83, hex=0x53, ascii="S"
 836:     -	2D87  38      	    defb 00111000b
 837:     -	2D88  44      	    defb 01000100b
 838:     -	2D89  40      	    defb 01000000b
 839:     -	2D8A  38      	    defb 00111000b
 840:     -	2D8B  04      	    defb 00000100b
 841:     -	2D8C  44      	    defb 01000100b
 842:     -	2D8D  38      	    defb 00111000b
 843:     -	2D8E  00      	    defb 00000000b
 844:				
 845:				    ; code=84, hex=0x54, ascii="T"
 846:     -	2D8F  7C      	    defb 01111100b
 847:     -	2D90  10      	    defb 00010000b
 848:     -	2D91  10      	    defb 00010000b
 849:     -	2D92  10      	    defb 00010000b
 850:     -	2D93  10      	    defb 00010000b
 851:     -	2D94  10      	    defb 00010000b
 852:     -	2D95  10      	    defb 00010000b
 853:     -	2D96  00      	    defb 00000000b
 854:				
 855:				    ; code=85, hex=0x55, ascii="U"
 856:     -	2D97  44      	    defb 01000100b
 857:     -	2D98  44      	    defb 01000100b
 858:     -	2D99  44      	    defb 01000100b
 859:     -	2D9A  44      	    defb 01000100b
 860:     -	2D9B  44      	    defb 01000100b
 861:     -	2D9C  44      	    defb 01000100b
 862:     -	2D9D  38      	    defb 00111000b
 863:     -	2D9E  00      	    defb 00000000b
 864:				
 865:				    ; code=86, hex=0x56, ascii="V"
 866:     -	2D9F  44      	    defb 01000100b
 867:     -	2DA0  44      	    defb 01000100b
 868:     -	2DA1  44      	    defb 01000100b
 869:     -	2DA2  44      	    defb 01000100b
 870:     -	2DA3  44      	    defb 01000100b
 871:     -	2DA4  28      	    defb 00101000b
 872:     -	2DA5  10      	    defb 00010000b
 873:     -	2DA6  00      	    defb 00000000b
 874:				
 875:				    ; code=87, hex=0x57, ascii="W"
 876:     -	2DA7  44      	    defb 01000100b
 877:     -	2DA8  44      	    defb 01000100b
 878:     -	2DA9  54      	    defb 01010100b
 879:     -	2DAA  54      	    defb 01010100b
 880:     -	2DAB  54      	    defb 01010100b
 881:     -	2DAC  54      	    defb 01010100b
 882:     -	2DAD  28      	    defb 00101000b
 883:     -	2DAE  00      	    defb 00000000b
 884:				
 885:				    ; code=88, hex=0x58, ascii="X"
 886:     -	2DAF  44      	    defb 01000100b
 887:     -	2DB0  44      	    defb 01000100b
 888:     -	2DB1  28      	    defb 00101000b
 889:     -	2DB2  10      	    defb 00010000b
 890:     -	2DB3  28      	    defb 00101000b
 891:     -	2DB4  44      	    defb 01000100b
 892:     -	2DB5  44      	    defb 01000100b
 893:     -	2DB6  00      	    defb 00000000b
 894:				
 895:				    ; code=89, hex=0x59, ascii="Y"
 896:     -	2DB7  44      	    defb 01000100b
 897:     -	2DB8  44      	    defb 01000100b
 898:     -	2DB9  44      	    defb 01000100b
 899:     -	2DBA  28      	    defb 00101000b
 900:     -	2DBB  10      	    defb 00010000b
 901:     -	2DBC  10      	    defb 00010000b
 902:     -	2DBD  10      	    defb 00010000b
 903:     -	2DBE  00      	    defb 00000000b
 904:				
 905:				    ; code=90, hex=0x5A, ascii="Z"
 906:     -	2DBF  78      	    defb 01111000b
 907:     -	2DC0  08      	    defb 00001000b
 908:     -	2DC1  10      	    defb 00010000b
 909:     -	2DC2  20      	    defb 00100000b
 910:     -	2DC3  40      	    defb 01000000b
 911:     -	2DC4  40      	    defb 01000000b
 912:     -	2DC5  78      	    defb 01111000b
 913:     -	2DC6  00      	    defb 00000000b
 914:				
 915:				    ; code=91, hex=0x5B, ascii="["
 916:     -	2DC7  38      	    defb 00111000b
 917:     -	2DC8  20      	    defb 00100000b
 918:     -	2DC9  20      	    defb 00100000b
 919:     -	2DCA  20      	    defb 00100000b
 920:     -	2DCB  20      	    defb 00100000b
 921:     -	2DCC  20      	    defb 00100000b
 922:     -	2DCD  38      	    defb 00111000b
 923:     -	2DCE  00      	    defb 00000000b
 924:				
 925:				    ; code=92, hex=0x5C, ascii="\"
 926:     -	2DCF  00      	    defb 00000000b
 927:     -	2DD0  40      	    defb 01000000b
 928:     -	2DD1  20      	    defb 00100000b
 929:     -	2DD2  10      	    defb 00010000b
 930:     -	2DD3  08      	    defb 00001000b
 931:     -	2DD4  04      	    defb 00000100b
 932:     -	2DD5  00      	    defb 00000000b
 933:     -	2DD6  00      	    defb 00000000b
 934:				
 935:				    ; code=93, hex=0x5D, ascii="]"
 936:     -	2DD7  38      	    defb 00111000b
 937:     -	2DD8  08      	    defb 00001000b
 938:     -	2DD9  08      	    defb 00001000b
 939:     -	2DDA  08      	    defb 00001000b
 940:     -	2DDB  08      	    defb 00001000b
 941:     -	2DDC  08      	    defb 00001000b
 942:     -	2DDD  38      	    defb 00111000b
 943:     -	2DDE  00      	    defb 00000000b
 944:				
 945:				    ; code=94, hex=0x5E, ascii="^"
 946:     -	2DDF  10      	    defb 00010000b
 947:     -	2DE0  28      	    defb 00101000b
 948:     -	2DE1  44      	    defb 01000100b
 949:     -	2DE2  00      	    defb 00000000b
 950:     -	2DE3  00      	    defb 00000000b
 951:     -	2DE4  00      	    defb 00000000b
 952:     -	2DE5  00      	    defb 00000000b
 953:     -	2DE6  00      	    defb 00000000b
 954:				
 955:				    ; code=95, hex=0x5F, ascii="_"
 956:     -	2DE7  00      	    defb 00000000b
 957:     -	2DE8  00      	    defb 00000000b
 958:     -	2DE9  00      	    defb 00000000b
 959:     -	2DEA  00      	    defb 00000000b
 960:     -	2DEB  00      	    defb 00000000b
 961:     -	2DEC  00      	    defb 00000000b
 962:     -	2DED  00      	    defb 00000000b
 963:     -	2DEE  FC      	    defb 11111100b
 964:				
 965:				    ; code=96, hex=0x60, ascii="`"
 966:     -	2DEF  30      	    defb 00110000b
 967:     -	2DF0  30      	    defb 00110000b
 968:     -	2DF1  10      	    defb 00010000b
 969:     -	2DF2  00      	    defb 00000000b
 970:     -	2DF3  00      	    defb 00000000b
 971:     -	2DF4  00      	    defb 00000000b
 972:     -	2DF5  00      	    defb 00000000b
 973:     -	2DF6  00      	    defb 00000000b
 974:				
 975:				    ; code=97, hex=0x61, ascii="a"
 976:     -	2DF7  00      	    defb 00000000b
 977:     -	2DF8  00      	    defb 00000000b
 978:     -	2DF9  38      	    defb 00111000b
 979:     -	2DFA  04      	    defb 00000100b
 980:     -	2DFB  3C      	    defb 00111100b
 981:     -	2DFC  44      	    defb 01000100b
 982:     -	2DFD  3C      	    defb 00111100b
 983:     -	2DFE  00      	    defb 00000000b
 984:				
 985:				    ; code=98, hex=0x62, ascii="b"
 986:     -	2DFF  40      	    defb 01000000b
 987:     -	2E00  40      	    defb 01000000b
 988:     -	2E01  78      	    defb 01111000b
 989:     -	2E02  44      	    defb 01000100b
 990:     -	2E03  44      	    defb 01000100b
 991:     -	2E04  44      	    defb 01000100b
 992:     -	2E05  78      	    defb 01111000b
 993:     -	2E06  00      	    defb 00000000b
 994:				
 995:				    ; code=99, hex=0x63, ascii="c"
 996:     -	2E07  00      	    defb 00000000b
 997:     -	2E08  00      	    defb 00000000b
 998:     -	2E09  38      	    defb 00111000b
 999:     -	2E0A  44      	    defb 01000100b
1000:     -	2E0B  40      	    defb 01000000b
1001:     -	2E0C  44      	    defb 01000100b
1002:     -	2E0D  38      	    defb 00111000b
1003:     -	2E0E  00      	    defb 00000000b
1004:				
1005:				    ; code=100, hex=0x64, ascii="d"
1006:     -	2E0F  04      	    defb 00000100b
1007:     -	2E10  04      	    defb 00000100b
1008:     -	2E11  3C      	    defb 00111100b
1009:     -	2E12  44      	    defb 01000100b
1010:     -	2E13  44      	    defb 01000100b
1011:     -	2E14  44      	    defb 01000100b
1012:     -	2E15  3C      	    defb 00111100b
1013:     -	2E16  00      	    defb 00000000b
1014:				
1015:				    ; code=101, hex=0x65, ascii="e"
1016:     -	2E17  00      	    defb 00000000b
1017:     -	2E18  00      	    defb 00000000b
1018:     -	2E19  38      	    defb 00111000b
1019:     -	2E1A  44      	    defb 01000100b
1020:     -	2E1B  78      	    defb 01111000b
1021:     -	2E1C  40      	    defb 01000000b
1022:     -	2E1D  38      	    defb 00111000b
1023:     -	2E1E  00      	    defb 00000000b
1024:				
1025:				    ; code=102, hex=0x66, ascii="f"
1026:     -	2E1F  18      	    defb 00011000b
1027:     -	2E20  20      	    defb 00100000b
1028:     -	2E21  20      	    defb 00100000b
1029:     -	2E22  78      	    defb 01111000b
1030:     -	2E23  20      	    defb 00100000b
1031:     -	2E24  20      	    defb 00100000b
1032:     -	2E25  20      	    defb 00100000b
1033:     -	2E26  00      	    defb 00000000b
1034:				
1035:				    ; code=103, hex=0x67, ascii="g"
1036:     -	2E27  00      	    defb 00000000b
1037:     -	2E28  00      	    defb 00000000b
1038:     -	2E29  3C      	    defb 00111100b
1039:     -	2E2A  44      	    defb 01000100b
1040:     -	2E2B  44      	    defb 01000100b
1041:     -	2E2C  3C      	    defb 00111100b
1042:     -	2E2D  04      	    defb 00000100b
1043:     -	2E2E  38      	    defb 00111000b
1044:				
1045:				    ; code=104, hex=0x68, ascii="h"
1046:     -	2E2F  40      	    defb 01000000b
1047:     -	2E30  40      	    defb 01000000b
1048:     -	2E31  70      	    defb 01110000b
1049:     -	2E32  48      	    defb 01001000b
1050:     -	2E33  48      	    defb 01001000b
1051:     -	2E34  48      	    defb 01001000b
1052:     -	2E35  48      	    defb 01001000b
1053:     -	2E36  00      	    defb 00000000b
1054:				
1055:				    ; code=105, hex=0x69, ascii="i"
1056:     -	2E37  10      	    defb 00010000b
1057:     -	2E38  00      	    defb 00000000b
1058:     -	2E39  10      	    defb 00010000b
1059:     -	2E3A  10      	    defb 00010000b
1060:     -	2E3B  10      	    defb 00010000b
1061:     -	2E3C  10      	    defb 00010000b
1062:     -	2E3D  18      	    defb 00011000b
1063:     -	2E3E  00      	    defb 00000000b
1064:				
1065:				    ; code=106, hex=0x6A, ascii="j"
1066:     -	2E3F  08      	    defb 00001000b
1067:     -	2E40  00      	    defb 00000000b
1068:     -	2E41  18      	    defb 00011000b
1069:     -	2E42  08      	    defb 00001000b
1070:     -	2E43  08      	    defb 00001000b
1071:     -	2E44  08      	    defb 00001000b
1072:     -	2E45  48      	    defb 01001000b
1073:     -	2E46  30      	    defb 00110000b
1074:				
1075:				    ; code=107, hex=0x6B, ascii="k"
1076:     -	2E47  40      	    defb 01000000b
1077:     -	2E48  40      	    defb 01000000b
1078:     -	2E49  48      	    defb 01001000b
1079:     -	2E4A  50      	    defb 01010000b
1080:     -	2E4B  60      	    defb 01100000b
1081:     -	2E4C  50      	    defb 01010000b
1082:     -	2E4D  48      	    defb 01001000b
1083:     -	2E4E  00      	    defb 00000000b
1084:				
1085:				    ; code=108, hex=0x6C, ascii="l"
1086:     -	2E4F  10      	    defb 00010000b
1087:     -	2E50  10      	    defb 00010000b
1088:     -	2E51  10      	    defb 00010000b
1089:     -	2E52  10      	    defb 00010000b
1090:     -	2E53  10      	    defb 00010000b
1091:     -	2E54  10      	    defb 00010000b
1092:     -	2E55  18      	    defb 00011000b
1093:     -	2E56  00      	    defb 00000000b
1094:				
1095:				    ; code=109, hex=0x6D, ascii="m"
1096:     -	2E57  00      	    defb 00000000b
1097:     -	2E58  00      	    defb 00000000b
1098:     -	2E59  68      	    defb 01101000b
1099:     -	2E5A  54      	    defb 01010100b
1100:     -	2E5B  54      	    defb 01010100b
1101:     -	2E5C  44      	    defb 01000100b
1102:     -	2E5D  44      	    defb 01000100b
1103:     -	2E5E  00      	    defb 00000000b
1104:				
1105:				    ; code=110, hex=0x6E, ascii="n"
1106:     -	2E5F  00      	    defb 00000000b
1107:     -	2E60  00      	    defb 00000000b
1108:     -	2E61  70      	    defb 01110000b
1109:     -	2E62  48      	    defb 01001000b
1110:     -	2E63  48      	    defb 01001000b
1111:     -	2E64  48      	    defb 01001000b
1112:     -	2E65  48      	    defb 01001000b
1113:     -	2E66  00      	    defb 00000000b
1114:				
1115:				    ; code=111, hex=0x6F, ascii="o"
1116:     -	2E67  00      	    defb 00000000b
1117:     -	2E68  00      	    defb 00000000b
1118:     -	2E69  38      	    defb 00111000b
1119:     -	2E6A  44      	    defb 01000100b
1120:     -	2E6B  44      	    defb 01000100b
1121:     -	2E6C  44      	    defb 01000100b
1122:     -	2E6D  38      	    defb 00111000b
1123:     -	2E6E  00      	    defb 00000000b
1124:				
1125:				    ; code=112, hex=0x70, ascii="p"
1126:     -	2E6F  00      	    defb 00000000b
1127:     -	2E70  00      	    defb 00000000b
1128:     -	2E71  78      	    defb 01111000b
1129:     -	2E72  44      	    defb 01000100b
1130:     -	2E73  44      	    defb 01000100b
1131:     -	2E74  44      	    defb 01000100b
1132:     -	2E75  78      	    defb 01111000b
1133:     -	2E76  40      	    defb 01000000b
1134:				
1135:				    ; code=113, hex=0x71, ascii="q"
1136:     -	2E77  00      	    defb 00000000b
1137:     -	2E78  00      	    defb 00000000b
1138:     -	2E79  3C      	    defb 00111100b
1139:     -	2E7A  44      	    defb 01000100b
1140:     -	2E7B  44      	    defb 01000100b
1141:     -	2E7C  44      	    defb 01000100b
1142:     -	2E7D  3C      	    defb 00111100b
1143:     -	2E7E  04      	    defb 00000100b
1144:				
1145:				    ; code=114, hex=0x72, ascii="r"
1146:     -	2E7F  00      	    defb 00000000b
1147:     -	2E80  00      	    defb 00000000b
1148:     -	2E81  58      	    defb 01011000b
1149:     -	2E82  24      	    defb 00100100b
1150:     -	2E83  20      	    defb 00100000b
1151:     -	2E84  20      	    defb 00100000b
1152:     -	2E85  70      	    defb 01110000b
1153:     -	2E86  00      	    defb 00000000b
1154:				
1155:				    ; code=115, hex=0x73, ascii="s"
1156:     -	2E87  00      	    defb 00000000b
1157:     -	2E88  00      	    defb 00000000b
1158:     -	2E89  38      	    defb 00111000b
1159:     -	2E8A  40      	    defb 01000000b
1160:     -	2E8B  38      	    defb 00111000b
1161:     -	2E8C  04      	    defb 00000100b
1162:     -	2E8D  38      	    defb 00111000b
1163:     -	2E8E  00      	    defb 00000000b
1164:				
1165:				    ; code=116, hex=0x74, ascii="t"
1166:     -	2E8F  00      	    defb 00000000b
1167:     -	2E90  20      	    defb 00100000b
1168:     -	2E91  78      	    defb 01111000b
1169:     -	2E92  20      	    defb 00100000b
1170:     -	2E93  20      	    defb 00100000b
1171:     -	2E94  28      	    defb 00101000b
1172:     -	2E95  10      	    defb 00010000b
1173:     -	2E96  00      	    defb 00000000b
1174:				
1175:				    ; code=117, hex=0x75, ascii="u"
1176:     -	2E97  00      	    defb 00000000b
1177:     -	2E98  00      	    defb 00000000b
1178:     -	2E99  48      	    defb 01001000b
1179:     -	2E9A  48      	    defb 01001000b
1180:     -	2E9B  48      	    defb 01001000b
1181:     -	2E9C  58      	    defb 01011000b
1182:     -	2E9D  28      	    defb 00101000b
1183:     -	2E9E  00      	    defb 00000000b
1184:				
1185:				    ; code=118, hex=0x76, ascii="v"
1186:     -	2E9F  00      	    defb 00000000b
1187:     -	2EA0  00      	    defb 00000000b
1188:     -	2EA1  44      	    defb 01000100b
1189:     -	2EA2  44      	    defb 01000100b
1190:     -	2EA3  44      	    defb 01000100b
1191:     -	2EA4  28      	    defb 00101000b
1192:     -	2EA5  10      	    defb 00010000b
1193:     -	2EA6  00      	    defb 00000000b
1194:				
1195:				    ; code=119, hex=0x77, ascii="w"
1196:     -	2EA7  00      	    defb 00000000b
1197:     -	2EA8  00      	    defb 00000000b
1198:     -	2EA9  44      	    defb 01000100b
1199:     -	2EAA  44      	    defb 01000100b
1200:     -	2EAB  54      	    defb 01010100b
1201:     -	2EAC  7C      	    defb 01111100b
1202:     -	2EAD  28      	    defb 00101000b
1203:     -	2EAE  00      	    defb 00000000b
1204:				
1205:				    ; code=120, hex=0x78, ascii="x"
1206:     -	2EAF  00      	    defb 00000000b
1207:     -	2EB0  00      	    defb 00000000b
1208:     -	2EB1  48      	    defb 01001000b
1209:     -	2EB2  48      	    defb 01001000b
1210:     -	2EB3  30      	    defb 00110000b
1211:     -	2EB4  48      	    defb 01001000b
1212:     -	2EB5  48      	    defb 01001000b
1213:     -	2EB6  00      	    defb 00000000b
1214:				
1215:				    ; code=121, hex=0x79, ascii="y"
1216:     -	2EB7  00      	    defb 00000000b
1217:     -	2EB8  00      	    defb 00000000b
1218:     -	2EB9  48      	    defb 01001000b
1219:     -	2EBA  48      	    defb 01001000b
1220:     -	2EBB  48      	    defb 01001000b
1221:     -	2EBC  38      	    defb 00111000b
1222:     -	2EBD  10      	    defb 00010000b
1223:     -	2EBE  60      	    defb 01100000b
1224:				
1225:				    ; code=122, hex=0x7A, ascii="z"
1226:     -	2EBF  00      	    defb 00000000b
1227:     -	2EC0  00      	    defb 00000000b
1228:     -	2EC1  78      	    defb 01111000b
1229:     -	2EC2  08      	    defb 00001000b
1230:     -	2EC3  30      	    defb 00110000b
1231:     -	2EC4  40      	    defb 01000000b
1232:     -	2EC5  78      	    defb 01111000b
1233:     -	2EC6  00      	    defb 00000000b
1234:				
1235:				    ; code=123, hex=0x7B, ascii="{"
1236:     -	2EC7  18      	    defb 00011000b
1237:     -	2EC8  20      	    defb 00100000b
1238:     -	2EC9  20      	    defb 00100000b
1239:     -	2ECA  60      	    defb 01100000b
1240:     -	2ECB  20      	    defb 00100000b
1241:     -	2ECC  20      	    defb 00100000b
1242:     -	2ECD  18      	    defb 00011000b
1243:     -	2ECE  00      	    defb 00000000b
1244:				
1245:				    ; code=124, hex=0x7C, ascii="|"
1246:     -	2ECF  10      	    defb 00010000b
1247:     -	2ED0  10      	    defb 00010000b
1248:     -	2ED1  10      	    defb 00010000b
1249:     -	2ED2  00      	    defb 00000000b
1250:     -	2ED3  10      	    defb 00010000b
1251:     -	2ED4  10      	    defb 00010000b
1252:     -	2ED5  10      	    defb 00010000b
1253:     -	2ED6  00      	    defb 00000000b
1254:				
1255:				    ; code=125, hex=0x7D, ascii="}"
1256:     -	2ED7  30      	    defb 00110000b
1257:     -	2ED8  08      	    defb 00001000b
1258:     -	2ED9  08      	    defb 00001000b
1259:     -	2EDA  0C      	    defb 00001100b
1260:     -	2EDB  08      	    defb 00001000b
1261:     -	2EDC  08      	    defb 00001000b
1262:     -	2EDD  30      	    defb 00110000b
1263:     -	2EDE  00      	    defb 00000000b
1264:				
1265:				    ; code=126, hex=0x7E, ascii="~"
1266:     -	2EDF  28      	    defb 00101000b
1267:     -	2EE0  50      	    defb 01010000b
1268:     -	2EE1  00      	    defb 00000000b
1269:     -	2EE2  00      	    defb 00000000b
1270:     -	2EE3  00      	    defb 00000000b
1271:     -	2EE4  00      	    defb 00000000b
1272:     -	2EE5  00      	    defb 00000000b
1273:     -	2EE6  00      	    defb 00000000b
1274:				
1275:				    ; code=127, hex=0x7F, ascii="^?"
1276:     -	2EE7  10      	    defb 00010000b
1277:     -	2EE8  38      	    defb 00111000b
1278:     -	2EE9  6C      	    defb 01101100b
1279:     -	2EEA  44      	    defb 01000100b
1280:     -	2EEB  44      	    defb 01000100b
1281:     -	2EEC  7C      	    defb 01111100b
1282:     -	2EED  00      	    defb 00000000b
1283:     -	2EEE  00      	    defb 00000000b
1284:				
1285:				    ; code=128, hex=0x80, ascii="!^@"
1286:     -	2EEF  38      	    defb 00111000b
1287:     -	2EF0  44      	    defb 01000100b
1288:     -	2EF1  40      	    defb 01000000b
1289:     -	2EF2  40      	    defb 01000000b
1290:     -	2EF3  44      	    defb 01000100b
1291:     -	2EF4  38      	    defb 00111000b
1292:     -	2EF5  10      	    defb 00010000b
1293:     -	2EF6  30      	    defb 00110000b
1294:				
1295:				    ; code=129, hex=0x81, ascii="!^A"
1296:     -	2EF7  48      	    defb 01001000b
1297:     -	2EF8  00      	    defb 00000000b
1298:     -	2EF9  48      	    defb 01001000b
1299:     -	2EFA  48      	    defb 01001000b
1300:     -	2EFB  48      	    defb 01001000b
1301:     -	2EFC  58      	    defb 01011000b
1302:     -	2EFD  28      	    defb 00101000b
1303:     -	2EFE  00      	    defb 00000000b
1304:				
1305:				    ; code=130, hex=0x82, ascii="!^B"
1306:     -	2EFF  0C      	    defb 00001100b
1307:     -	2F00  00      	    defb 00000000b
1308:     -	2F01  38      	    defb 00111000b
1309:     -	2F02  44      	    defb 01000100b
1310:     -	2F03  78      	    defb 01111000b
1311:     -	2F04  40      	    defb 01000000b
1312:     -	2F05  38      	    defb 00111000b
1313:     -	2F06  00      	    defb 00000000b
1314:				
1315:				    ; code=131, hex=0x83, ascii="!^C"
1316:     -	2F07  38      	    defb 00111000b
1317:     -	2F08  00      	    defb 00000000b
1318:     -	2F09  38      	    defb 00111000b
1319:     -	2F0A  04      	    defb 00000100b
1320:     -	2F0B  3C      	    defb 00111100b
1321:     -	2F0C  44      	    defb 01000100b
1322:     -	2F0D  3C      	    defb 00111100b
1323:     -	2F0E  00      	    defb 00000000b
1324:				
1325:				    ; code=132, hex=0x84, ascii="!^D"
1326:     -	2F0F  28      	    defb 00101000b
1327:     -	2F10  00      	    defb 00000000b
1328:     -	2F11  38      	    defb 00111000b
1329:     -	2F12  04      	    defb 00000100b
1330:     -	2F13  3C      	    defb 00111100b
1331:     -	2F14  44      	    defb 01000100b
1332:     -	2F15  3C      	    defb 00111100b
1333:     -	2F16  00      	    defb 00000000b
1334:				
1335:				    ; code=133, hex=0x85, ascii="!^E"
1336:     -	2F17  30      	    defb 00110000b
1337:     -	2F18  00      	    defb 00000000b
1338:     -	2F19  38      	    defb 00111000b
1339:     -	2F1A  04      	    defb 00000100b
1340:     -	2F1B  3C      	    defb 00111100b
1341:     -	2F1C  44      	    defb 01000100b
1342:     -	2F1D  3C      	    defb 00111100b
1343:     -	2F1E  00      	    defb 00000000b
1344:				
1345:				    ; code=134, hex=0x86, ascii="!^F"
1346:     -	2F1F  38      	    defb 00111000b
1347:     -	2F20  28      	    defb 00101000b
1348:     -	2F21  38      	    defb 00111000b
1349:     -	2F22  04      	    defb 00000100b
1350:     -	2F23  3C      	    defb 00111100b
1351:     -	2F24  44      	    defb 01000100b
1352:     -	2F25  3C      	    defb 00111100b
1353:     -	2F26  00      	    defb 00000000b
1354:				
1355:				    ; code=135, hex=0x87, ascii="!^G"
1356:     -	2F27  00      	    defb 00000000b
1357:     -	2F28  38      	    defb 00111000b
1358:     -	2F29  44      	    defb 01000100b
1359:     -	2F2A  40      	    defb 01000000b
1360:     -	2F2B  44      	    defb 01000100b
1361:     -	2F2C  38      	    defb 00111000b
1362:     -	2F2D  10      	    defb 00010000b
1363:     -	2F2E  30      	    defb 00110000b
1364:				
1365:				    ; code=136, hex=0x88, ascii="!^H"
1366:     -	2F2F  38      	    defb 00111000b
1367:     -	2F30  00      	    defb 00000000b
1368:     -	2F31  38      	    defb 00111000b
1369:     -	2F32  44      	    defb 01000100b
1370:     -	2F33  78      	    defb 01111000b
1371:     -	2F34  40      	    defb 01000000b
1372:     -	2F35  38      	    defb 00111000b
1373:     -	2F36  00      	    defb 00000000b
1374:				
1375:				    ; code=137, hex=0x89, ascii="!^I"
1376:     -	2F37  28      	    defb 00101000b
1377:     -	2F38  00      	    defb 00000000b
1378:     -	2F39  38      	    defb 00111000b
1379:     -	2F3A  44      	    defb 01000100b
1380:     -	2F3B  78      	    defb 01111000b
1381:     -	2F3C  40      	    defb 01000000b
1382:     -	2F3D  38      	    defb 00111000b
1383:     -	2F3E  00      	    defb 00000000b
1384:				
1385:				    ; code=138, hex=0x8A, ascii="!^J"
1386:     -	2F3F  30      	    defb 00110000b
1387:     -	2F40  00      	    defb 00000000b
1388:     -	2F41  38      	    defb 00111000b
1389:     -	2F42  44      	    defb 01000100b
1390:     -	2F43  78      	    defb 01111000b
1391:     -	2F44  40      	    defb 01000000b
1392:     -	2F45  38      	    defb 00111000b
1393:     -	2F46  00      	    defb 00000000b
1394:				
1395:				    ; code=139, hex=0x8B, ascii="!^K"
1396:     -	2F47  28      	    defb 00101000b
1397:     -	2F48  00      	    defb 00000000b
1398:     -	2F49  10      	    defb 00010000b
1399:     -	2F4A  10      	    defb 00010000b
1400:     -	2F4B  10      	    defb 00010000b
1401:     -	2F4C  10      	    defb 00010000b
1402:     -	2F4D  18      	    defb 00011000b
1403:     -	2F4E  00      	    defb 00000000b
1404:				
1405:				    ; code=140, hex=0x8C, ascii="!^L"
1406:     -	2F4F  10      	    defb 00010000b
1407:     -	2F50  28      	    defb 00101000b
1408:     -	2F51  00      	    defb 00000000b
1409:     -	2F52  10      	    defb 00010000b
1410:     -	2F53  10      	    defb 00010000b
1411:     -	2F54  10      	    defb 00010000b
1412:     -	2F55  18      	    defb 00011000b
1413:     -	2F56  00      	    defb 00000000b
1414:				
1415:				    ; code=141, hex=0x8D, ascii="!^M"
1416:     -	2F57  20      	    defb 00100000b
1417:     -	2F58  00      	    defb 00000000b
1418:     -	2F59  10      	    defb 00010000b
1419:     -	2F5A  10      	    defb 00010000b
1420:     -	2F5B  10      	    defb 00010000b
1421:     -	2F5C  10      	    defb 00010000b
1422:     -	2F5D  18      	    defb 00011000b
1423:     -	2F5E  00      	    defb 00000000b
1424:				
1425:				    ; code=142, hex=0x8E, ascii="!^N"
1426:     -	2F5F  28      	    defb 00101000b
1427:     -	2F60  00      	    defb 00000000b
1428:     -	2F61  10      	    defb 00010000b
1429:     -	2F62  28      	    defb 00101000b
1430:     -	2F63  44      	    defb 01000100b
1431:     -	2F64  7C      	    defb 01111100b
1432:     -	2F65  44      	    defb 01000100b
1433:     -	2F66  00      	    defb 00000000b
1434:				
1435:				    ; code=143, hex=0x8F, ascii="!^O"
1436:     -	2F67  38      	    defb 00111000b
1437:     -	2F68  28      	    defb 00101000b
1438:     -	2F69  38      	    defb 00111000b
1439:     -	2F6A  6C      	    defb 01101100b
1440:     -	2F6B  44      	    defb 01000100b
1441:     -	2F6C  7C      	    defb 01111100b
1442:     -	2F6D  44      	    defb 01000100b
1443:     -	2F6E  00      	    defb 00000000b
1444:				
1445:				    ; code=144, hex=0x90, ascii="!^P"
1446:     -	2F6F  0C      	    defb 00001100b
1447:     -	2F70  00      	    defb 00000000b
1448:     -	2F71  7C      	    defb 01111100b
1449:     -	2F72  40      	    defb 01000000b
1450:     -	2F73  78      	    defb 01111000b
1451:     -	2F74  40      	    defb 01000000b
1452:     -	2F75  7C      	    defb 01111100b
1453:     -	2F76  00      	    defb 00000000b
1454:				
1455:				    ; code=145, hex=0x91, ascii="!^Q"
1456:     -	2F77  00      	    defb 00000000b
1457:     -	2F78  00      	    defb 00000000b
1458:     -	2F79  78      	    defb 01111000b
1459:     -	2F7A  14      	    defb 00010100b
1460:     -	2F7B  7C      	    defb 01111100b
1461:     -	2F7C  50      	    defb 01010000b
1462:     -	2F7D  3C      	    defb 00111100b
1463:     -	2F7E  00      	    defb 00000000b
1464:				
1465:				    ; code=146, hex=0x92, ascii="!^R"
1466:     -	2F7F  3C      	    defb 00111100b
1467:     -	2F80  50      	    defb 01010000b
1468:     -	2F81  50      	    defb 01010000b
1469:     -	2F82  7C      	    defb 01111100b
1470:     -	2F83  50      	    defb 01010000b
1471:     -	2F84  50      	    defb 01010000b
1472:     -	2F85  5C      	    defb 01011100b
1473:     -	2F86  00      	    defb 00000000b
1474:				
1475:				    ; code=147, hex=0x93, ascii="!^S"
1476:     -	2F87  38      	    defb 00111000b
1477:     -	2F88  00      	    defb 00000000b
1478:     -	2F89  30      	    defb 00110000b
1479:     -	2F8A  48      	    defb 01001000b
1480:     -	2F8B  48      	    defb 01001000b
1481:     -	2F8C  48      	    defb 01001000b
1482:     -	2F8D  30      	    defb 00110000b
1483:     -	2F8E  00      	    defb 00000000b
1484:				
1485:				    ; code=148, hex=0x94, ascii="!^T"
1486:     -	2F8F  28      	    defb 00101000b
1487:     -	2F90  00      	    defb 00000000b
1488:     -	2F91  30      	    defb 00110000b
1489:     -	2F92  48      	    defb 01001000b
1490:     -	2F93  48      	    defb 01001000b
1491:     -	2F94  48      	    defb 01001000b
1492:     -	2F95  30      	    defb 00110000b
1493:     -	2F96  00      	    defb 00000000b
1494:				
1495:				    ; code=149, hex=0x95, ascii="!^U"
1496:     -	2F97  60      	    defb 01100000b
1497:     -	2F98  00      	    defb 00000000b
1498:     -	2F99  30      	    defb 00110000b
1499:     -	2F9A  48      	    defb 01001000b
1500:     -	2F9B  48      	    defb 01001000b
1501:     -	2F9C  48      	    defb 01001000b
1502:     -	2F9D  30      	    defb 00110000b
1503:     -	2F9E  00      	    defb 00000000b
1504:				
1505:				    ; code=150, hex=0x96, ascii="!^V"
1506:     -	2F9F  38      	    defb 00111000b
1507:     -	2FA0  00      	    defb 00000000b
1508:     -	2FA1  48      	    defb 01001000b
1509:     -	2FA2  48      	    defb 01001000b
1510:     -	2FA3  48      	    defb 01001000b
1511:     -	2FA4  58      	    defb 01011000b
1512:     -	2FA5  28      	    defb 00101000b
1513:     -	2FA6  00      	    defb 00000000b
1514:				
1515:				    ; code=151, hex=0x97, ascii="!^W"
1516:     -	2FA7  60      	    defb 01100000b
1517:     -	2FA8  00      	    defb 00000000b
1518:     -	2FA9  48      	    defb 01001000b
1519:     -	2FAA  48      	    defb 01001000b
1520:     -	2FAB  48      	    defb 01001000b
1521:     -	2FAC  58      	    defb 01011000b
1522:     -	2FAD  28      	    defb 00101000b
1523:     -	2FAE  00      	    defb 00000000b
1524:				
1525:				    ; code=152, hex=0x98, ascii="!^X"
1526:     -	2FAF  28      	    defb 00101000b
1527:     -	2FB0  00      	    defb 00000000b
1528:     -	2FB1  48      	    defb 01001000b
1529:     -	2FB2  48      	    defb 01001000b
1530:     -	2FB3  48      	    defb 01001000b
1531:     -	2FB4  38      	    defb 00111000b
1532:     -	2FB5  10      	    defb 00010000b
1533:     -	2FB6  60      	    defb 01100000b
1534:				
1535:				    ; code=153, hex=0x99, ascii="!^Y"
1536:     -	2FB7  48      	    defb 01001000b
1537:     -	2FB8  30      	    defb 00110000b
1538:     -	2FB9  48      	    defb 01001000b
1539:     -	2FBA  48      	    defb 01001000b
1540:     -	2FBB  48      	    defb 01001000b
1541:     -	2FBC  48      	    defb 01001000b
1542:     -	2FBD  30      	    defb 00110000b
1543:     -	2FBE  00      	    defb 00000000b
1544:				
1545:				    ; code=154, hex=0x9A, ascii="!^Z"
1546:     -	2FBF  28      	    defb 00101000b
1547:     -	2FC0  00      	    defb 00000000b
1548:     -	2FC1  48      	    defb 01001000b
1549:     -	2FC2  48      	    defb 01001000b
1550:     -	2FC3  48      	    defb 01001000b
1551:     -	2FC4  48      	    defb 01001000b
1552:     -	2FC5  30      	    defb 00110000b
1553:     -	2FC6  00      	    defb 00000000b
1554:				
1555:				    ; code=155, hex=0x9B, ascii="!^["
1556:     -	2FC7  00      	    defb 00000000b
1557:     -	2FC8  10      	    defb 00010000b
1558:     -	2FC9  38      	    defb 00111000b
1559:     -	2FCA  40      	    defb 01000000b
1560:     -	2FCB  40      	    defb 01000000b
1561:     -	2FCC  38      	    defb 00111000b
1562:     -	2FCD  10      	    defb 00010000b
1563:     -	2FCE  00      	    defb 00000000b
1564:				
1565:				    ; code=156, hex=0x9C, ascii="!^\"
1566:     -	2FCF  18      	    defb 00011000b
1567:     -	2FD0  24      	    defb 00100100b
1568:     -	2FD1  20      	    defb 00100000b
1569:     -	2FD2  78      	    defb 01111000b
1570:     -	2FD3  20      	    defb 00100000b
1571:     -	2FD4  24      	    defb 00100100b
1572:     -	2FD5  5C      	    defb 01011100b
1573:     -	2FD6  00      	    defb 00000000b
1574:				
1575:				    ; code=157, hex=0x9D, ascii="!^]"
1576:     -	2FD7  44      	    defb 01000100b
1577:     -	2FD8  28      	    defb 00101000b
1578:     -	2FD9  10      	    defb 00010000b
1579:     -	2FDA  7C      	    defb 01111100b
1580:     -	2FDB  10      	    defb 00010000b
1581:     -	2FDC  7C      	    defb 01111100b
1582:     -	2FDD  10      	    defb 00010000b
1583:     -	2FDE  00      	    defb 00000000b
1584:				
1585:				    ; code=158, hex=0x9E, ascii="!^^"
1586:     -	2FDF  60      	    defb 01100000b
1587:     -	2FE0  50      	    defb 01010000b
1588:     -	2FE1  50      	    defb 01010000b
1589:     -	2FE2  68      	    defb 01101000b
1590:     -	2FE3  5C      	    defb 01011100b
1591:     -	2FE4  48      	    defb 01001000b
1592:     -	2FE5  48      	    defb 01001000b
1593:     -	2FE6  00      	    defb 00000000b
1594:				
1595:				    ; code=159, hex=0x9F, ascii="!^_"
1596:     -	2FE7  08      	    defb 00001000b
1597:     -	2FE8  14      	    defb 00010100b
1598:     -	2FE9  10      	    defb 00010000b
1599:     -	2FEA  38      	    defb 00111000b
1600:     -	2FEB  10      	    defb 00010000b
1601:     -	2FEC  10      	    defb 00010000b
1602:     -	2FED  50      	    defb 01010000b
1603:     -	2FEE  20      	    defb 00100000b
1604:				
1605:				    ; code=160, hex=0xA0, ascii="! "
1606:     -	2FEF  18      	    defb 00011000b
1607:     -	2FF0  00      	    defb 00000000b
1608:     -	2FF1  38      	    defb 00111000b
1609:     -	2FF2  04      	    defb 00000100b
1610:     -	2FF3  3C      	    defb 00111100b
1611:     -	2FF4  44      	    defb 01000100b
1612:     -	2FF5  3C      	    defb 00111100b
1613:     -	2FF6  00      	    defb 00000000b
1614:				
1615:				    ; code=161, hex=0xA1, ascii="!!"
1616:     -	2FF7  18      	    defb 00011000b
1617:     -	2FF8  00      	    defb 00000000b
1618:     -	2FF9  10      	    defb 00010000b
1619:     -	2FFA  10      	    defb 00010000b
1620:     -	2FFB  10      	    defb 00010000b
1621:     -	2FFC  10      	    defb 00010000b
1622:     -	2FFD  18      	    defb 00011000b
1623:     -	2FFE  00      	    defb 00000000b
1624:				
1625:				    ; code=162, hex=0xA2, ascii="!""
1626:     -	2FFF  18      	    defb 00011000b
1627:     -	3000  00      	    defb 00000000b
1628:     -	3001  30      	    defb 00110000b
1629:     -	3002  48      	    defb 01001000b
1630:     -	3003  48      	    defb 01001000b
1631:     -	3004  48      	    defb 01001000b
1632:     -	3005  30      	    defb 00110000b
1633:     -	3006  00      	    defb 00000000b
1634:				
1635:				    ; code=163, hex=0xA3, ascii="!#"
1636:     -	3007  18      	    defb 00011000b
1637:     -	3008  00      	    defb 00000000b
1638:     -	3009  48      	    defb 01001000b
1639:     -	300A  48      	    defb 01001000b
1640:     -	300B  48      	    defb 01001000b
1641:     -	300C  58      	    defb 01011000b
1642:     -	300D  28      	    defb 00101000b
1643:     -	300E  00      	    defb 00000000b
1644:				
1645:				    ; code=164, hex=0xA4, ascii="!$"
1646:     -	300F  28      	    defb 00101000b
1647:     -	3010  50      	    defb 01010000b
1648:     -	3011  00      	    defb 00000000b
1649:     -	3012  70      	    defb 01110000b
1650:     -	3013  48      	    defb 01001000b
1651:     -	3014  48      	    defb 01001000b
1652:     -	3015  48      	    defb 01001000b
1653:     -	3016  00      	    defb 00000000b
1654:				
1655:				    ; code=165, hex=0xA5, ascii="!"
1656:     -	3017  28      	    defb 00101000b
1657:     -	3018  50      	    defb 01010000b
1658:     -	3019  00      	    defb 00000000b
1659:     -	301A  48      	    defb 01001000b
1660:     -	301B  68      	    defb 01101000b
1661:     -	301C  58      	    defb 01011000b
1662:     -	301D  48      	    defb 01001000b
1663:     -	301E  00      	    defb 00000000b
1664:				
1665:				    ; code=166, hex=0xA6, ascii="!&"
1666:     -	301F  38      	    defb 00111000b
1667:     -	3020  04      	    defb 00000100b
1668:     -	3021  3C      	    defb 00111100b
1669:     -	3022  44      	    defb 01000100b
1670:     -	3023  3C      	    defb 00111100b
1671:     -	3024  00      	    defb 00000000b
1672:     -	3025  3C      	    defb 00111100b
1673:     -	3026  00      	    defb 00000000b
1674:				
1675:				    ; code=167, hex=0xA7, ascii="!'"
1676:     -	3027  30      	    defb 00110000b
1677:     -	3028  48      	    defb 01001000b
1678:     -	3029  48      	    defb 01001000b
1679:     -	302A  48      	    defb 01001000b
1680:     -	302B  30      	    defb 00110000b
1681:     -	302C  00      	    defb 00000000b
1682:     -	302D  78      	    defb 01111000b
1683:     -	302E  00      	    defb 00000000b
1684:				
1685:				    ; code=168, hex=0xA8, ascii="!("
1686:     -	302F  10      	    defb 00010000b
1687:     -	3030  00      	    defb 00000000b
1688:     -	3031  10      	    defb 00010000b
1689:     -	3032  30      	    defb 00110000b
1690:     -	3033  40      	    defb 01000000b
1691:     -	3034  44      	    defb 01000100b
1692:     -	3035  38      	    defb 00111000b
1693:     -	3036  00      	    defb 00000000b
1694:				
1695:				    ; code=169, hex=0xA9, ascii="!)"
1696:     -	3037  00      	    defb 00000000b
1697:     -	3038  00      	    defb 00000000b
1698:     -	3039  7C      	    defb 01111100b
1699:     -	303A  40      	    defb 01000000b
1700:     -	303B  40      	    defb 01000000b
1701:     -	303C  40      	    defb 01000000b
1702:     -	303D  00      	    defb 00000000b
1703:     -	303E  00      	    defb 00000000b
1704:				
1705:				    ; code=170, hex=0xAA, ascii="!*"
1706:     -	303F  00      	    defb 00000000b
1707:     -	3040  00      	    defb 00000000b
1708:     -	3041  FC      	    defb 11111100b
1709:     -	3042  04      	    defb 00000100b
1710:     -	3043  04      	    defb 00000100b
1711:     -	3044  00      	    defb 00000000b
1712:     -	3045  00      	    defb 00000000b
1713:     -	3046  00      	    defb 00000000b
1714:				
1715:				    ; code=171, hex=0xAB, ascii="!+"
1716:     -	3047  40      	    defb 01000000b
1717:     -	3048  48      	    defb 01001000b
1718:     -	3049  50      	    defb 01010000b
1719:     -	304A  38      	    defb 00111000b
1720:     -	304B  44      	    defb 01000100b
1721:     -	304C  08      	    defb 00001000b
1722:     -	304D  1C      	    defb 00011100b
1723:     -	304E  00      	    defb 00000000b
1724:				
1725:				    ; code=172, hex=0xAC, ascii="!,"
1726:     -	304F  40      	    defb 01000000b
1727:     -	3050  48      	    defb 01001000b
1728:     -	3051  50      	    defb 01010000b
1729:     -	3052  2C      	    defb 00101100b
1730:     -	3053  54      	    defb 01010100b
1731:     -	3054  1C      	    defb 00011100b
1732:     -	3055  04      	    defb 00000100b
1733:     -	3056  00      	    defb 00000000b
1734:				
1735:				    ; code=173, hex=0xAD, ascii="!-"
1736:     -	3057  10      	    defb 00010000b
1737:     -	3058  00      	    defb 00000000b
1738:     -	3059  10      	    defb 00010000b
1739:     -	305A  10      	    defb 00010000b
1740:     -	305B  38      	    defb 00111000b
1741:     -	305C  38      	    defb 00111000b
1742:     -	305D  10      	    defb 00010000b
1743:     -	305E  00      	    defb 00000000b
1744:				
1745:				    ; code=174, hex=0xAE, ascii="!."
1746:     -	305F  00      	    defb 00000000b
1747:     -	3060  00      	    defb 00000000b
1748:     -	3061  24      	    defb 00100100b
1749:     -	3062  48      	    defb 01001000b
1750:     -	3063  24      	    defb 00100100b
1751:     -	3064  00      	    defb 00000000b
1752:     -	3065  00      	    defb 00000000b
1753:     -	3066  00      	    defb 00000000b
1754:				
1755:				    ; code=175, hex=0xAF, ascii="!/"
1756:     -	3067  00      	    defb 00000000b
1757:     -	3068  00      	    defb 00000000b
1758:     -	3069  48      	    defb 01001000b
1759:     -	306A  24      	    defb 00100100b
1760:     -	306B  48      	    defb 01001000b
1761:     -	306C  00      	    defb 00000000b
1762:     -	306D  00      	    defb 00000000b
1763:     -	306E  00      	    defb 00000000b
1764:				
1765:				    ; code=176, hex=0xB0, ascii="!0"
1766:     -	306F  54      	    defb 01010100b
1767:     -	3070  00      	    defb 00000000b
1768:     -	3071  A8      	    defb 10101000b
1769:     -	3072  00      	    defb 00000000b
1770:     -	3073  54      	    defb 01010100b
1771:     -	3074  00      	    defb 00000000b
1772:     -	3075  A8      	    defb 10101000b
1773:     -	3076  00      	    defb 00000000b
1774:				
1775:				    ; code=177, hex=0xB1, ascii="!1"
1776:     -	3077  54      	    defb 01010100b
1777:     -	3078  A8      	    defb 10101000b
1778:     -	3079  54      	    defb 01010100b
1779:     -	307A  A8      	    defb 10101000b
1780:     -	307B  54      	    defb 01010100b
1781:     -	307C  A8      	    defb 10101000b
1782:     -	307D  54      	    defb 01010100b
1783:     -	307E  A8      	    defb 10101000b
1784:				
1785:				    ; code=178, hex=0xB2, ascii="!2"
1786:     -	307F  A8      	    defb 10101000b
1787:     -	3080  FC      	    defb 11111100b
1788:     -	3081  54      	    defb 01010100b
1789:     -	3082  FC      	    defb 11111100b
1790:     -	3083  A8      	    defb 10101000b
1791:     -	3084  FC      	    defb 11111100b
1792:     -	3085  54      	    defb 01010100b
1793:     -	3086  FC      	    defb 11111100b
1794:				
1795:				    ; code=179, hex=0xB3, ascii="!3"
1796:     -	3087  10      	    defb 00010000b
1797:     -	3088  10      	    defb 00010000b
1798:     -	3089  10      	    defb 00010000b
1799:     -	308A  10      	    defb 00010000b
1800:     -	308B  10      	    defb 00010000b
1801:     -	308C  10      	    defb 00010000b
1802:     -	308D  10      	    defb 00010000b
1803:     -	308E  10      	    defb 00010000b
1804:				
1805:				    ; code=180, hex=0xB4, ascii="!4"
1806:     -	308F  10      	    defb 00010000b
1807:     -	3090  10      	    defb 00010000b
1808:     -	3091  10      	    defb 00010000b
1809:     -	3092  F0      	    defb 11110000b
1810:     -	3093  10      	    defb 00010000b
1811:     -	3094  10      	    defb 00010000b
1812:     -	3095  10      	    defb 00010000b
1813:     -	3096  10      	    defb 00010000b
1814:				
1815:				    ; code=181, hex=0xB5, ascii="!5"
1816:     -	3097  10      	    defb 00010000b
1817:     -	3098  F0      	    defb 11110000b
1818:     -	3099  10      	    defb 00010000b
1819:     -	309A  F0      	    defb 11110000b
1820:     -	309B  10      	    defb 00010000b
1821:     -	309C  10      	    defb 00010000b
1822:     -	309D  10      	    defb 00010000b
1823:     -	309E  10      	    defb 00010000b
1824:				
1825:				    ; code=182, hex=0xB6, ascii="!6"
1826:     -	309F  50      	    defb 01010000b
1827:     -	30A0  50      	    defb 01010000b
1828:     -	30A1  50      	    defb 01010000b
1829:     -	30A2  D0      	    defb 11010000b
1830:     -	30A3  50      	    defb 01010000b
1831:     -	30A4  50      	    defb 01010000b
1832:     -	30A5  50      	    defb 01010000b
1833:     -	30A6  50      	    defb 01010000b
1834:				
1835:				    ; code=183, hex=0xB7, ascii="!7"
1836:     -	30A7  00      	    defb 00000000b
1837:     -	30A8  00      	    defb 00000000b
1838:     -	30A9  00      	    defb 00000000b
1839:     -	30AA  F0      	    defb 11110000b
1840:     -	30AB  50      	    defb 01010000b
1841:     -	30AC  50      	    defb 01010000b
1842:     -	30AD  50      	    defb 01010000b
1843:     -	30AE  50      	    defb 01010000b
1844:				
1845:				    ; code=184, hex=0xB8, ascii="!8"
1846:     -	30AF  00      	    defb 00000000b
1847:     -	30B0  F0      	    defb 11110000b
1848:     -	30B1  10      	    defb 00010000b
1849:     -	30B2  F0      	    defb 11110000b
1850:     -	30B3  10      	    defb 00010000b
1851:     -	30B4  10      	    defb 00010000b
1852:     -	30B5  10      	    defb 00010000b
1853:     -	30B6  10      	    defb 00010000b
1854:				
1855:				    ; code=185, hex=0xB9, ascii="!9"
1856:     -	30B7  50      	    defb 01010000b
1857:     -	30B8  D0      	    defb 11010000b
1858:     -	30B9  10      	    defb 00010000b
1859:     -	30BA  D0      	    defb 11010000b
1860:     -	30BB  50      	    defb 01010000b
1861:     -	30BC  50      	    defb 01010000b
1862:     -	30BD  50      	    defb 01010000b
1863:     -	30BE  50      	    defb 01010000b
1864:				
1865:				    ; code=186, hex=0xBA, ascii="!:"
1866:     -	30BF  50      	    defb 01010000b
1867:     -	30C0  50      	    defb 01010000b
1868:     -	30C1  50      	    defb 01010000b
1869:     -	30C2  50      	    defb 01010000b
1870:     -	30C3  50      	    defb 01010000b
1871:     -	30C4  50      	    defb 01010000b
1872:     -	30C5  50      	    defb 01010000b
1873:     -	30C6  50      	    defb 01010000b
1874:				
1875:				    ; code=187, hex=0xBB, ascii="!;"
1876:     -	30C7  00      	    defb 00000000b
1877:     -	30C8  F0      	    defb 11110000b
1878:     -	30C9  10      	    defb 00010000b
1879:     -	30CA  D0      	    defb 11010000b
1880:     -	30CB  50      	    defb 01010000b
1881:     -	30CC  50      	    defb 01010000b
1882:     -	30CD  50      	    defb 01010000b
1883:     -	30CE  50      	    defb 01010000b
1884:				
1885:				    ; code=188, hex=0xBC, ascii="!<"
1886:     -	30CF  50      	    defb 01010000b
1887:     -	30D0  D0      	    defb 11010000b
1888:     -	30D1  10      	    defb 00010000b
1889:     -	30D2  F0      	    defb 11110000b
1890:     -	30D3  00      	    defb 00000000b
1891:     -	30D4  00      	    defb 00000000b
1892:     -	30D5  00      	    defb 00000000b
1893:     -	30D6  00      	    defb 00000000b
1894:				
1895:				    ; code=189, hex=0xBD, ascii="!="
1896:     -	30D7  50      	    defb 01010000b
1897:     -	30D8  50      	    defb 01010000b
1898:     -	30D9  50      	    defb 01010000b
1899:     -	30DA  F0      	    defb 11110000b
1900:     -	30DB  00      	    defb 00000000b
1901:     -	30DC  00      	    defb 00000000b
1902:     -	30DD  00      	    defb 00000000b
1903:     -	30DE  00      	    defb 00000000b
1904:				
1905:				    ; code=190, hex=0xBE, ascii="!>"
1906:     -	30DF  10      	    defb 00010000b
1907:     -	30E0  F0      	    defb 11110000b
1908:     -	30E1  10      	    defb 00010000b
1909:     -	30E2  F0      	    defb 11110000b
1910:     -	30E3  00      	    defb 00000000b
1911:     -	30E4  00      	    defb 00000000b
1912:     -	30E5  00      	    defb 00000000b
1913:     -	30E6  00      	    defb 00000000b
1914:				
1915:				    ; code=191, hex=0xBF, ascii="!?"
1916:     -	30E7  00      	    defb 00000000b
1917:     -	30E8  00      	    defb 00000000b
1918:     -	30E9  00      	    defb 00000000b
1919:     -	30EA  F0      	    defb 11110000b
1920:     -	30EB  10      	    defb 00010000b
1921:     -	30EC  10      	    defb 00010000b
1922:     -	30ED  10      	    defb 00010000b
1923:     -	30EE  10      	    defb 00010000b
1924:				
1925:				    ; code=192, hex=0xC0, ascii="!@"
1926:     -	30EF  10      	    defb 00010000b
1927:     -	30F0  10      	    defb 00010000b
1928:     -	30F1  10      	    defb 00010000b
1929:     -	30F2  1C      	    defb 00011100b
1930:     -	30F3  00      	    defb 00000000b
1931:     -	30F4  00      	    defb 00000000b
1932:     -	30F5  00      	    defb 00000000b
1933:     -	30F6  00      	    defb 00000000b
1934:				
1935:				    ; code=193, hex=0xC1, ascii="!A"
1936:     -	30F7  10      	    defb 00010000b
1937:     -	30F8  10      	    defb 00010000b
1938:     -	30F9  10      	    defb 00010000b
1939:     -	30FA  FC      	    defb 11111100b
1940:     -	30FB  00      	    defb 00000000b
1941:     -	30FC  00      	    defb 00000000b
1942:     -	30FD  00      	    defb 00000000b
1943:     -	30FE  00      	    defb 00000000b
1944:				
1945:				    ; code=194, hex=0xC2, ascii="!B"
1946:     -	30FF  00      	    defb 00000000b
1947:     -	3100  00      	    defb 00000000b
1948:     -	3101  00      	    defb 00000000b
1949:     -	3102  FC      	    defb 11111100b
1950:     -	3103  10      	    defb 00010000b
1951:     -	3104  10      	    defb 00010000b
1952:     -	3105  10      	    defb 00010000b
1953:     -	3106  10      	    defb 00010000b
1954:				
1955:				    ; code=195, hex=0xC3, ascii="!C"
1956:     -	3107  10      	    defb 00010000b
1957:     -	3108  10      	    defb 00010000b
1958:     -	3109  10      	    defb 00010000b
1959:     -	310A  1C      	    defb 00011100b
1960:     -	310B  10      	    defb 00010000b
1961:     -	310C  10      	    defb 00010000b
1962:     -	310D  10      	    defb 00010000b
1963:     -	310E  10      	    defb 00010000b
1964:				
1965:				    ; code=196, hex=0xC4, ascii="!D"
1966:     -	310F  00      	    defb 00000000b
1967:     -	3110  00      	    defb 00000000b
1968:     -	3111  00      	    defb 00000000b
1969:     -	3112  FC      	    defb 11111100b
1970:     -	3113  00      	    defb 00000000b
1971:     -	3114  00      	    defb 00000000b
1972:     -	3115  00      	    defb 00000000b
1973:     -	3116  00      	    defb 00000000b
1974:				
1975:				    ; code=197, hex=0xC5, ascii="!E"
1976:     -	3117  10      	    defb 00010000b
1977:     -	3118  10      	    defb 00010000b
1978:     -	3119  10      	    defb 00010000b
1979:     -	311A  FC      	    defb 11111100b
1980:     -	311B  10      	    defb 00010000b
1981:     -	311C  10      	    defb 00010000b
1982:     -	311D  10      	    defb 00010000b
1983:     -	311E  10      	    defb 00010000b
1984:				
1985:				    ; code=198, hex=0xC6, ascii="!F"
1986:     -	311F  10      	    defb 00010000b
1987:     -	3120  1C      	    defb 00011100b
1988:     -	3121  10      	    defb 00010000b
1989:     -	3122  1C      	    defb 00011100b
1990:     -	3123  10      	    defb 00010000b
1991:     -	3124  10      	    defb 00010000b
1992:     -	3125  10      	    defb 00010000b
1993:     -	3126  10      	    defb 00010000b
1994:				
1995:				    ; code=199, hex=0xC7, ascii="!G"
1996:     -	3127  50      	    defb 01010000b
1997:     -	3128  50      	    defb 01010000b
1998:     -	3129  50      	    defb 01010000b
1999:     -	312A  5C      	    defb 01011100b
2000:     -	312B  50      	    defb 01010000b
2001:     -	312C  50      	    defb 01010000b
2002:     -	312D  50      	    defb 01010000b
2003:     -	312E  50      	    defb 01010000b
2004:				
2005:				    ; code=200, hex=0xC8, ascii="!H"
2006:     -	312F  50      	    defb 01010000b
2007:     -	3130  5C      	    defb 01011100b
2008:     -	3131  40      	    defb 01000000b
2009:     -	3132  7C      	    defb 01111100b
2010:     -	3133  00      	    defb 00000000b
2011:     -	3134  00      	    defb 00000000b
2012:     -	3135  00      	    defb 00000000b
2013:     -	3136  00      	    defb 00000000b
2014:				
2015:				    ; code=201, hex=0xC9, ascii="!I"
2016:     -	3137  00      	    defb 00000000b
2017:     -	3138  7C      	    defb 01111100b
2018:     -	3139  40      	    defb 01000000b
2019:     -	313A  5C      	    defb 01011100b
2020:     -	313B  50      	    defb 01010000b
2021:     -	313C  50      	    defb 01010000b
2022:     -	313D  50      	    defb 01010000b
2023:     -	313E  50      	    defb 01010000b
2024:				
2025:				    ; code=202, hex=0xCA, ascii="!J"
2026:     -	313F  50      	    defb 01010000b
2027:     -	3140  DC      	    defb 11011100b
2028:     -	3141  00      	    defb 00000000b
2029:     -	3142  FC      	    defb 11111100b
2030:     -	3143  00      	    defb 00000000b
2031:     -	3144  00      	    defb 00000000b
2032:     -	3145  00      	    defb 00000000b
2033:     -	3146  00      	    defb 00000000b
2034:				
2035:				    ; code=203, hex=0xCB, ascii="!K"
2036:     -	3147  00      	    defb 00000000b
2037:     -	3148  FC      	    defb 11111100b
2038:     -	3149  00      	    defb 00000000b
2039:     -	314A  DC      	    defb 11011100b
2040:     -	314B  50      	    defb 01010000b
2041:     -	314C  50      	    defb 01010000b
2042:     -	314D  50      	    defb 01010000b
2043:     -	314E  50      	    defb 01010000b
2044:				
2045:				    ; code=204, hex=0xCC, ascii="!L"
2046:     -	314F  50      	    defb 01010000b
2047:     -	3150  5C      	    defb 01011100b
2048:     -	3151  40      	    defb 01000000b
2049:     -	3152  5C      	    defb 01011100b
2050:     -	3153  50      	    defb 01010000b
2051:     -	3154  50      	    defb 01010000b
2052:     -	3155  50      	    defb 01010000b
2053:     -	3156  50      	    defb 01010000b
2054:				
2055:				    ; code=205, hex=0xCD, ascii="!M"
2056:     -	3157  00      	    defb 00000000b
2057:     -	3158  FC      	    defb 11111100b
2058:     -	3159  00      	    defb 00000000b
2059:     -	315A  FC      	    defb 11111100b
2060:     -	315B  00      	    defb 00000000b
2061:     -	315C  00      	    defb 00000000b
2062:     -	315D  00      	    defb 00000000b
2063:     -	315E  00      	    defb 00000000b
2064:				
2065:				    ; code=206, hex=0xCE, ascii="!N"
2066:     -	315F  50      	    defb 01010000b
2067:     -	3160  DC      	    defb 11011100b
2068:     -	3161  00      	    defb 00000000b
2069:     -	3162  DC      	    defb 11011100b
2070:     -	3163  50      	    defb 01010000b
2071:     -	3164  50      	    defb 01010000b
2072:     -	3165  50      	    defb 01010000b
2073:     -	3166  50      	    defb 01010000b
2074:				
2075:				    ; code=207, hex=0xCF, ascii="!O"
2076:     -	3167  10      	    defb 00010000b
2077:     -	3168  FC      	    defb 11111100b
2078:     -	3169  00      	    defb 00000000b
2079:     -	316A  FC      	    defb 11111100b
2080:     -	316B  00      	    defb 00000000b
2081:     -	316C  00      	    defb 00000000b
2082:     -	316D  00      	    defb 00000000b
2083:     -	316E  00      	    defb 00000000b
2084:				
2085:				    ; code=208, hex=0xD0, ascii="!P"
2086:     -	316F  50      	    defb 01010000b
2087:     -	3170  50      	    defb 01010000b
2088:     -	3171  50      	    defb 01010000b
2089:     -	3172  FC      	    defb 11111100b
2090:     -	3173  00      	    defb 00000000b
2091:     -	3174  00      	    defb 00000000b
2092:     -	3175  00      	    defb 00000000b
2093:     -	3176  00      	    defb 00000000b
2094:				
2095:				    ; code=209, hex=0xD1, ascii="!Q"
2096:     -	3177  00      	    defb 00000000b
2097:     -	3178  FC      	    defb 11111100b
2098:     -	3179  00      	    defb 00000000b
2099:     -	317A  FC      	    defb 11111100b
2100:     -	317B  10      	    defb 00010000b
2101:     -	317C  10      	    defb 00010000b
2102:     -	317D  10      	    defb 00010000b
2103:     -	317E  10      	    defb 00010000b
2104:				
2105:				    ; code=210, hex=0xD2, ascii="!R"
2106:     -	317F  00      	    defb 00000000b
2107:     -	3180  00      	    defb 00000000b
2108:     -	3181  00      	    defb 00000000b
2109:     -	3182  FC      	    defb 11111100b
2110:     -	3183  50      	    defb 01010000b
2111:     -	3184  50      	    defb 01010000b
2112:     -	3185  50      	    defb 01010000b
2113:     -	3186  50      	    defb 01010000b
2114:				
2115:				    ; code=211, hex=0xD3, ascii="!S"
2116:     -	3187  50      	    defb 01010000b
2117:     -	3188  50      	    defb 01010000b
2118:     -	3189  50      	    defb 01010000b
2119:     -	318A  7C      	    defb 01111100b
2120:     -	318B  00      	    defb 00000000b
2121:     -	318C  00      	    defb 00000000b
2122:     -	318D  00      	    defb 00000000b
2123:     -	318E  00      	    defb 00000000b
2124:				
2125:				    ; code=212, hex=0xD4, ascii="!T"
2126:     -	318F  10      	    defb 00010000b
2127:     -	3190  1C      	    defb 00011100b
2128:     -	3191  10      	    defb 00010000b
2129:     -	3192  1C      	    defb 00011100b
2130:     -	3193  00      	    defb 00000000b
2131:     -	3194  00      	    defb 00000000b
2132:     -	3195  00      	    defb 00000000b
2133:     -	3196  00      	    defb 00000000b
2134:				
2135:				    ; code=213, hex=0xD5, ascii="!U"
2136:     -	3197  00      	    defb 00000000b
2137:     -	3198  1C      	    defb 00011100b
2138:     -	3199  10      	    defb 00010000b
2139:     -	319A  1C      	    defb 00011100b
2140:     -	319B  10      	    defb 00010000b
2141:     -	319C  10      	    defb 00010000b
2142:     -	319D  10      	    defb 00010000b
2143:     -	319E  10      	    defb 00010000b
2144:				
2145:				    ; code=214, hex=0xD6, ascii="!V"
2146:     -	319F  00      	    defb 00000000b
2147:     -	31A0  00      	    defb 00000000b
2148:     -	31A1  00      	    defb 00000000b
2149:     -	31A2  7C      	    defb 01111100b
2150:     -	31A3  50      	    defb 01010000b
2151:     -	31A4  50      	    defb 01010000b
2152:     -	31A5  50      	    defb 01010000b
2153:     -	31A6  50      	    defb 01010000b
2154:				
2155:				    ; code=215, hex=0xD7, ascii="!W"
2156:     -	31A7  50      	    defb 01010000b
2157:     -	31A8  50      	    defb 01010000b
2158:     -	31A9  50      	    defb 01010000b
2159:     -	31AA  DC      	    defb 11011100b
2160:     -	31AB  50      	    defb 01010000b
2161:     -	31AC  50      	    defb 01010000b
2162:     -	31AD  50      	    defb 01010000b
2163:     -	31AE  50      	    defb 01010000b
2164:				
2165:				    ; code=216, hex=0xD8, ascii="!X"
2166:     -	31AF  10      	    defb 00010000b
2167:     -	31B0  FC      	    defb 11111100b
2168:     -	31B1  00      	    defb 00000000b
2169:     -	31B2  FC      	    defb 11111100b
2170:     -	31B3  10      	    defb 00010000b
2171:     -	31B4  10      	    defb 00010000b
2172:     -	31B5  10      	    defb 00010000b
2173:     -	31B6  10      	    defb 00010000b
2174:				
2175:				    ; code=217, hex=0xD9, ascii="!Y"
2176:     -	31B7  10      	    defb 00010000b
2177:     -	31B8  10      	    defb 00010000b
2178:     -	31B9  10      	    defb 00010000b
2179:     -	31BA  F0      	    defb 11110000b
2180:     -	31BB  00      	    defb 00000000b
2181:     -	31BC  00      	    defb 00000000b
2182:     -	31BD  00      	    defb 00000000b
2183:     -	31BE  00      	    defb 00000000b
2184:				
2185:				    ; code=218, hex=0xDA, ascii="!Z"
2186:     -	31BF  00      	    defb 00000000b
2187:     -	31C0  00      	    defb 00000000b
2188:     -	31C1  00      	    defb 00000000b
2189:     -	31C2  1C      	    defb 00011100b
2190:     -	31C3  10      	    defb 00010000b
2191:     -	31C4  10      	    defb 00010000b
2192:     -	31C5  10      	    defb 00010000b
2193:     -	31C6  10      	    defb 00010000b
2194:				
2195:				    ; code=219, hex=0xDB, ascii="!["
2196:     -	31C7  FC      	    defb 11111100b
2197:     -	31C8  FC      	    defb 11111100b
2198:     -	31C9  FC      	    defb 11111100b
2199:     -	31CA  FC      	    defb 11111100b
2200:     -	31CB  FC      	    defb 11111100b
2201:     -	31CC  FC      	    defb 11111100b
2202:     -	31CD  FC      	    defb 11111100b
2203:     -	31CE  FC      	    defb 11111100b
2204:				
2205:				    ; code=220, hex=0xDC, ascii="!\"
2206:     -	31CF  00      	    defb 00000000b
2207:     -	31D0  00      	    defb 00000000b
2208:     -	31D1  00      	    defb 00000000b
2209:     -	31D2  00      	    defb 00000000b
2210:     -	31D3  FC      	    defb 11111100b
2211:     -	31D4  FC      	    defb 11111100b
2212:     -	31D5  FC      	    defb 11111100b
2213:     -	31D6  FC      	    defb 11111100b
2214:				
2215:				    ; code=221, hex=0xDD, ascii="!]"
2216:     -	31D7  E0      	    defb 11100000b
2217:     -	31D8  E0      	    defb 11100000b
2218:     -	31D9  E0      	    defb 11100000b
2219:     -	31DA  E0      	    defb 11100000b
2220:     -	31DB  E0      	    defb 11100000b
2221:     -	31DC  E0      	    defb 11100000b
2222:     -	31DD  E0      	    defb 11100000b
2223:     -	31DE  E0      	    defb 11100000b
2224:				
2225:				    ; code=222, hex=0xDE, ascii="!^"
2226:     -	31DF  1C      	    defb 00011100b
2227:     -	31E0  1C      	    defb 00011100b
2228:     -	31E1  1C      	    defb 00011100b
2229:     -	31E2  1C      	    defb 00011100b
2230:     -	31E3  1C      	    defb 00011100b
2231:     -	31E4  1C      	    defb 00011100b
2232:     -	31E5  1C      	    defb 00011100b
2233:     -	31E6  1C      	    defb 00011100b
2234:				
2235:				    ; code=223, hex=0xDF, ascii="!_"
2236:     -	31E7  FC      	    defb 11111100b
2237:     -	31E8  FC      	    defb 11111100b
2238:     -	31E9  FC      	    defb 11111100b
2239:     -	31EA  FC      	    defb 11111100b
2240:     -	31EB  00      	    defb 00000000b
2241:     -	31EC  00      	    defb 00000000b
2242:     -	31ED  00      	    defb 00000000b
2243:     -	31EE  00      	    defb 00000000b
2244:				
2245:				    ; code=224, hex=0xE0, ascii="!`"
2246:     -	31EF  00      	    defb 00000000b
2247:     -	31F0  00      	    defb 00000000b
2248:     -	31F1  34      	    defb 00110100b
2249:     -	31F2  48      	    defb 01001000b
2250:     -	31F3  48      	    defb 01001000b
2251:     -	31F4  34      	    defb 00110100b
2252:     -	31F5  00      	    defb 00000000b
2253:     -	31F6  00      	    defb 00000000b
2254:				
2255:				    ; code=225, hex=0xE1, ascii="!a"
2256:     -	31F7  00      	    defb 00000000b
2257:     -	31F8  70      	    defb 01110000b
2258:     -	31F9  48      	    defb 01001000b
2259:     -	31FA  70      	    defb 01110000b
2260:     -	31FB  48      	    defb 01001000b
2261:     -	31FC  48      	    defb 01001000b
2262:     -	31FD  70      	    defb 01110000b
2263:     -	31FE  40      	    defb 01000000b
2264:				
2265:				    ; code=226, hex=0xE2, ascii="!b"
2266:     -	31FF  78      	    defb 01111000b
2267:     -	3200  48      	    defb 01001000b
2268:     -	3201  40      	    defb 01000000b
2269:     -	3202  40      	    defb 01000000b
2270:     -	3203  40      	    defb 01000000b
2271:     -	3204  40      	    defb 01000000b
2272:     -	3205  40      	    defb 01000000b
2273:     -	3206  00      	    defb 00000000b
2274:				
2275:				    ; code=227, hex=0xE3, ascii="!c"
2276:     -	3207  00      	    defb 00000000b
2277:     -	3208  7C      	    defb 01111100b
2278:     -	3209  28      	    defb 00101000b
2279:     -	320A  28      	    defb 00101000b
2280:     -	320B  28      	    defb 00101000b
2281:     -	320C  28      	    defb 00101000b
2282:     -	320D  28      	    defb 00101000b
2283:     -	320E  00      	    defb 00000000b
2284:				
2285:				    ; code=228, hex=0xE4, ascii="!d"
2286:     -	320F  78      	    defb 01111000b
2287:     -	3210  48      	    defb 01001000b
2288:     -	3211  20      	    defb 00100000b
2289:     -	3212  10      	    defb 00010000b
2290:     -	3213  20      	    defb 00100000b
2291:     -	3214  48      	    defb 01001000b
2292:     -	3215  78      	    defb 01111000b
2293:     -	3216  00      	    defb 00000000b
2294:				
2295:				    ; code=229, hex=0xE5, ascii="!e"
2296:     -	3217  00      	    defb 00000000b
2297:     -	3218  00      	    defb 00000000b
2298:     -	3219  3C      	    defb 00111100b
2299:     -	321A  48      	    defb 01001000b
2300:     -	321B  48      	    defb 01001000b
2301:     -	321C  30      	    defb 00110000b
2302:     -	321D  00      	    defb 00000000b
2303:     -	321E  00      	    defb 00000000b
2304:				
2305:				    ; code=230, hex=0xE6, ascii="!f"
2306:     -	321F  00      	    defb 00000000b
2307:     -	3220  00      	    defb 00000000b
2308:     -	3221  48      	    defb 01001000b
2309:     -	3222  48      	    defb 01001000b
2310:     -	3223  48      	    defb 01001000b
2311:     -	3224  70      	    defb 01110000b
2312:     -	3225  40      	    defb 01000000b
2313:     -	3226  40      	    defb 01000000b
2314:				
2315:				    ; code=231, hex=0xE7, ascii="!g"
2316:     -	3227  00      	    defb 00000000b
2317:     -	3228  00      	    defb 00000000b
2318:     -	3229  28      	    defb 00101000b
2319:     -	322A  50      	    defb 01010000b
2320:     -	322B  10      	    defb 00010000b
2321:     -	322C  10      	    defb 00010000b
2322:     -	322D  10      	    defb 00010000b
2323:     -	322E  00      	    defb 00000000b
2324:				
2325:				    ; code=232, hex=0xE8, ascii="!h"
2326:     -	322F  38      	    defb 00111000b
2327:     -	3230  10      	    defb 00010000b
2328:     -	3231  38      	    defb 00111000b
2329:     -	3232  44      	    defb 01000100b
2330:     -	3233  38      	    defb 00111000b
2331:     -	3234  10      	    defb 00010000b
2332:     -	3235  38      	    defb 00111000b
2333:     -	3236  00      	    defb 00000000b
2334:				
2335:				    ; code=233, hex=0xE9, ascii="!i"
2336:     -	3237  30      	    defb 00110000b
2337:     -	3238  48      	    defb 01001000b
2338:     -	3239  48      	    defb 01001000b
2339:     -	323A  78      	    defb 01111000b
2340:     -	323B  48      	    defb 01001000b
2341:     -	323C  48      	    defb 01001000b
2342:     -	323D  30      	    defb 00110000b
2343:     -	323E  00      	    defb 00000000b
2344:				
2345:				    ; code=234, hex=0xEA, ascii="!j"
2346:     -	323F  00      	    defb 00000000b
2347:     -	3240  38      	    defb 00111000b
2348:     -	3241  44      	    defb 01000100b
2349:     -	3242  44      	    defb 01000100b
2350:     -	3243  28      	    defb 00101000b
2351:     -	3244  28      	    defb 00101000b
2352:     -	3245  6C      	    defb 01101100b
2353:     -	3246  00      	    defb 00000000b
2354:				
2355:				    ; code=235, hex=0xEB, ascii="!k"
2356:     -	3247  30      	    defb 00110000b
2357:     -	3248  40      	    defb 01000000b
2358:     -	3249  20      	    defb 00100000b
2359:     -	324A  10      	    defb 00010000b
2360:     -	324B  38      	    defb 00111000b
2361:     -	324C  48      	    defb 01001000b
2362:     -	324D  30      	    defb 00110000b
2363:     -	324E  00      	    defb 00000000b
2364:				
2365:				    ; code=236, hex=0xEC, ascii="!l"
2366:     -	324F  00      	    defb 00000000b
2367:     -	3250  00      	    defb 00000000b
2368:     -	3251  28      	    defb 00101000b
2369:     -	3252  54      	    defb 01010100b
2370:     -	3253  54      	    defb 01010100b
2371:     -	3254  28      	    defb 00101000b
2372:     -	3255  00      	    defb 00000000b
2373:     -	3256  00      	    defb 00000000b
2374:				
2375:				    ; code=237, hex=0xED, ascii="!m"
2376:     -	3257  00      	    defb 00000000b
2377:     -	3258  10      	    defb 00010000b
2378:     -	3259  38      	    defb 00111000b
2379:     -	325A  54      	    defb 01010100b
2380:     -	325B  54      	    defb 01010100b
2381:     -	325C  38      	    defb 00111000b
2382:     -	325D  10      	    defb 00010000b
2383:     -	325E  00      	    defb 00000000b
2384:				
2385:				    ; code=238, hex=0xEE, ascii="!n"
2386:     -	325F  00      	    defb 00000000b
2387:     -	3260  38      	    defb 00111000b
2388:     -	3261  40      	    defb 01000000b
2389:     -	3262  78      	    defb 01111000b
2390:     -	3263  40      	    defb 01000000b
2391:     -	3264  38      	    defb 00111000b
2392:     -	3265  00      	    defb 00000000b
2393:     -	3266  00      	    defb 00000000b
2394:				
2395:				    ; code=239, hex=0xEF, ascii="!o"
2396:     -	3267  00      	    defb 00000000b
2397:     -	3268  30      	    defb 00110000b
2398:     -	3269  48      	    defb 01001000b
2399:     -	326A  48      	    defb 01001000b
2400:     -	326B  48      	    defb 01001000b
2401:     -	326C  48      	    defb 01001000b
2402:     -	326D  00      	    defb 00000000b
2403:     -	326E  00      	    defb 00000000b
2404:				
2405:				    ; code=240, hex=0xF0, ascii="!p"
2406:     -	326F  00      	    defb 00000000b
2407:     -	3270  78      	    defb 01111000b
2408:     -	3271  00      	    defb 00000000b
2409:     -	3272  78      	    defb 01111000b
2410:     -	3273  00      	    defb 00000000b
2411:     -	3274  78      	    defb 01111000b
2412:     -	3275  00      	    defb 00000000b
2413:     -	3276  00      	    defb 00000000b
2414:				
2415:				    ; code=241, hex=0xF1, ascii="!q"
2416:     -	3277  00      	    defb 00000000b
2417:     -	3278  10      	    defb 00010000b
2418:     -	3279  38      	    defb 00111000b
2419:     -	327A  10      	    defb 00010000b
2420:     -	327B  00      	    defb 00000000b
2421:     -	327C  38      	    defb 00111000b
2422:     -	327D  00      	    defb 00000000b
2423:     -	327E  00      	    defb 00000000b
2424:				
2425:				    ; code=242, hex=0xF2, ascii="!r"
2426:     -	327F  40      	    defb 01000000b
2427:     -	3280  30      	    defb 00110000b
2428:     -	3281  08      	    defb 00001000b
2429:     -	3282  30      	    defb 00110000b
2430:     -	3283  40      	    defb 01000000b
2431:     -	3284  00      	    defb 00000000b
2432:     -	3285  78      	    defb 01111000b
2433:     -	3286  00      	    defb 00000000b
2434:				
2435:				    ; code=243, hex=0xF3, ascii="!s"
2436:     -	3287  08      	    defb 00001000b
2437:     -	3288  30      	    defb 00110000b
2438:     -	3289  40      	    defb 01000000b
2439:     -	328A  30      	    defb 00110000b
2440:     -	328B  08      	    defb 00001000b
2441:     -	328C  00      	    defb 00000000b
2442:     -	328D  78      	    defb 01111000b
2443:     -	328E  00      	    defb 00000000b
2444:				
2445:				    ; code=244, hex=0xF4, ascii="!t"
2446:     -	328F  00      	    defb 00000000b
2447:     -	3290  08      	    defb 00001000b
2448:     -	3291  14      	    defb 00010100b
2449:     -	3292  10      	    defb 00010000b
2450:     -	3293  10      	    defb 00010000b
2451:     -	3294  10      	    defb 00010000b
2452:     -	3295  10      	    defb 00010000b
2453:     -	3296  10      	    defb 00010000b
2454:				
2455:				    ; code=245, hex=0xF5, ascii="!u"
2456:     -	3297  10      	    defb 00010000b
2457:     -	3298  10      	    defb 00010000b
2458:     -	3299  10      	    defb 00010000b
2459:     -	329A  10      	    defb 00010000b
2460:     -	329B  10      	    defb 00010000b
2461:     -	329C  50      	    defb 01010000b
2462:     -	329D  20      	    defb 00100000b
2463:     -	329E  00      	    defb 00000000b
2464:				
2465:				    ; code=246, hex=0xF6, ascii="!v"
2466:     -	329F  00      	    defb 00000000b
2467:     -	32A0  10      	    defb 00010000b
2468:     -	32A1  00      	    defb 00000000b
2469:     -	32A2  7C      	    defb 01111100b
2470:     -	32A3  00      	    defb 00000000b
2471:     -	32A4  10      	    defb 00010000b
2472:     -	32A5  00      	    defb 00000000b
2473:     -	32A6  00      	    defb 00000000b
2474:				
2475:				    ; code=247, hex=0xF7, ascii="!w"
2476:     -	32A7  00      	    defb 00000000b
2477:     -	32A8  28      	    defb 00101000b
2478:     -	32A9  50      	    defb 01010000b
2479:     -	32AA  00      	    defb 00000000b
2480:     -	32AB  28      	    defb 00101000b
2481:     -	32AC  50      	    defb 01010000b
2482:     -	32AD  00      	    defb 00000000b
2483:     -	32AE  00      	    defb 00000000b
2484:				
2485:				    ; code=248, hex=0xF8, ascii="!x"
2486:     -	32AF  30      	    defb 00110000b
2487:     -	32B0  48      	    defb 01001000b
2488:     -	32B1  48      	    defb 01001000b
2489:     -	32B2  30      	    defb 00110000b
2490:     -	32B3  00      	    defb 00000000b
2491:     -	32B4  00      	    defb 00000000b
2492:     -	32B5  00      	    defb 00000000b
2493:     -	32B6  00      	    defb 00000000b
2494:				
2495:				    ; code=249, hex=0xF9, ascii="!y"
2496:     -	32B7  00      	    defb 00000000b
2497:     -	32B8  00      	    defb 00000000b
2498:     -	32B9  00      	    defb 00000000b
2499:     -	32BA  30      	    defb 00110000b
2500:     -	32BB  30      	    defb 00110000b
2501:     -	32BC  00      	    defb 00000000b
2502:     -	32BD  00      	    defb 00000000b
2503:     -	32BE  00      	    defb 00000000b
2504:				
2505:				    ; code=250, hex=0xFA, ascii="!z"
2506:     -	32BF  00      	    defb 00000000b
2507:     -	32C0  00      	    defb 00000000b
2508:     -	32C1  00      	    defb 00000000b
2509:     -	32C2  20      	    defb 00100000b
2510:     -	32C3  00      	    defb 00000000b
2511:     -	32C4  00      	    defb 00000000b
2512:     -	32C5  00      	    defb 00000000b
2513:     -	32C6  00      	    defb 00000000b
2514:				
2515:				    ; code=251, hex=0xFB, ascii="!{"
2516:     -	32C7  00      	    defb 00000000b
2517:     -	32C8  1C      	    defb 00011100b
2518:     -	32C9  10      	    defb 00010000b
2519:     -	32CA  10      	    defb 00010000b
2520:     -	32CB  50      	    defb 01010000b
2521:     -	32CC  50      	    defb 01010000b
2522:     -	32CD  20      	    defb 00100000b
2523:     -	32CE  00      	    defb 00000000b
2524:				
2525:				    ; code=252, hex=0xFC, ascii="!|"
2526:     -	32CF  50      	    defb 01010000b
2527:     -	32D0  28      	    defb 00101000b
2528:     -	32D1  28      	    defb 00101000b
2529:     -	32D2  28      	    defb 00101000b
2530:     -	32D3  00      	    defb 00000000b
2531:     -	32D4  00      	    defb 00000000b
2532:     -	32D5  00      	    defb 00000000b
2533:     -	32D6  00      	    defb 00000000b
2534:				
2535:				    ; code=253, hex=0xFD, ascii="!}"
2536:     -	32D7  60      	    defb 01100000b
2537:     -	32D8  10      	    defb 00010000b
2538:     -	32D9  20      	    defb 00100000b
2539:     -	32DA  70      	    defb 01110000b
2540:     -	32DB  00      	    defb 00000000b
2541:     -	32DC  00      	    defb 00000000b
2542:     -	32DD  00      	    defb 00000000b
2543:     -	32DE  00      	    defb 00000000b
2544:				
2545:				    ; code=254, hex=0xFE, ascii="!~"
2546:     -	32DF  00      	    defb 00000000b
2547:     -	32E0  00      	    defb 00000000b
2548:     -	32E1  78      	    defb 01111000b
2549:     -	32E2  78      	    defb 01111000b
2550:     -	32E3  78      	    defb 01111000b
2551:     -	32E4  78      	    defb 01111000b
2552:     -	32E5  00      	    defb 00000000b
2553:     -	32E6  00      	    defb 00000000b
2554:				
2555:				    ; code=255, hex=0xFF, ascii="!^"
2556:     -	32E7  00      	    defb 00000000b
2557:     -	32E8  00      	    defb 00000000b
2558:     -	32E9  00      	    defb 00000000b
2559:     -	32EA  00      	    defb 00000000b
2560:     -	32EB  00      	    defb 00000000b
2561:     -	32EC  00      	    defb 00000000b
2562:     -	32ED  00      	    defb 00000000b
**** functions/vdpterm.s ****
 280:     -	32EE  00      	    defb 00000000b
 281:				    
 282:				
 283:     -	32EF          	TermClear:
 284:10603+10	32EF  010038  	    ld bc, 0x3800
 285:     -	32F2          	TermClearLoop:
 286:10613+4	32F2  79      	    ld a,c          ; setup VDP addressh
 287:10617+11	32F3  D381    	    out (0x81),a
 288:10628+4	32F5  78      	    ld a,b
 289:10632+7	32F6  E63F    	    and 3fh         
 290:10639+7	32F8  F640    	    or 40h          ; write bit
 291:10646+11	32FA  D381    	    out (0x81),a
 292:10657+7	32FC  3E20    	    ld a, ' '
 293:10664+11	32FE  D380    	    out (0x80),a
 294:10675+17	3300  CD1209  	    call VDPWait
 295:10692+6	3303  03      	    inc bc
 296:				
 297:10698+4	3304  60      	    ld h,b
 298:10702+4	3305  69      	    ld l,c
 299:10706+10	3306  11C03B  	    ld de, 0x3800 + 960   ; buffer end
 300:10716+15	3309  ED52    	    sbc hl, de
 301:10731+10	330B  C2F232  	    jp nz, TermClearLoop
 302:				
 303:10741+4	330E  AF      	    xor a
 304:10745+13	330F  32E040  	    ld (TermCurrentX), a
 305:10758+13	3312  32E140  	    ld (TermCurrentY), a
 306:				
 307:10771+17	3315  CDE207  	    call TermSetCursor
 308:				
**** main.asm ****
 449:10788+10	3318  C9      	    ret
 450:				;.include "ide.s"
 451:				;Strings
 452:     -	3319          	MSG_CLEAR:
 453:     -	3319  1B5B324A	    db 27, '[2J', 27, '[H',0
	              1B5B4800
 454:				



Statistics:

     4	passes
     0	jr promotions
   254	symbols
  5063	bytes



Symbol Table:

ARR_COMMANDS     1D4      468
AY0_WRITE_REG    1A4      420
A_RTS_OFF        1AC      428
A_RTS_ON         1B5      437
CMD_CALL         31E      798
CMD_CALL_TRICK   32F      815
CMD_CLEAR        2EE      750
CMD_CRS_SPEED  =E000      57344
CMD_EXEC         30C      780
CMD_HELP         2C4      708
CMD_HEXDUMP      2F8      760
CMD_IOGET        330      816
CMD_IOSET        369      873
CMD_MGET         3B9      953
CMD_MSET         395      917
CMD_NOT_IMPLEMENTED  3F8      1016
CMD_VERSION      2D9      729
CMP_STRING_START  75D      1885
CMP_STRING_START_CONTINUE  765      1893
CMP_STRING_START_MATCHED  762      1890
CONSOLE_CURSOR   18A      394
CONSOLE_CURSOR_OFF  192      402
CONSOLE_INIT     14A      330
CONSOLE_PRINTSTR  11A      282
CONSOLE_PRINTSTR_EXIT  12D      301
CONSOLE_PRINTSTR_LOOP  11C      284
CONSOLE_PROMPT   5F1      1521
CONSOLE_PROMPT_LOOP  628      1576
CONSOLE_PROMPT_LOOP_1  650      1616
CONSOLE_PROMPT_LOOP_1B  67C      1660
CONSOLE_PROMPT_LOOP_2  6A3      1699
CONSOLE_PROMPT_LOOP_3  6A3      1699
CONSOLE_READ_CHAR  130      304
CONSOLE_TX_WAIT  13E      318
DELAY            5DF      1503
DELAY_LOOP       5E9      1513
DHEX_TO_BYTE     784      1924
DHEX_TO_BYTE_FAILED  79C      1948
HEX_TO_BIN       76A      1898
HEX_TO_BIN_2     778      1912
HEX_TO_INVALID_2  77F      1919
INT_VEC         03        3
IO_AY0_ADDR    =40        64
IO_AY0_DATA    =41        65
IO_AY1_ADDR    =42        66
IO_AY1_DATA    =43        67
IO_CTC0_C0     =00        0
IO_CTC0_C1     =01        1
IO_CTC0_C2     =02        2
IO_CTC0_C3     =03        3
IO_REG0        =20        32
IO_RTC_AMPM    =25        37
IO_RTC_CTR_D   =2D        45
IO_RTC_CTR_E   =2E        46
IO_RTC_CTR_F   =2F        47
IO_RTC_DAY0    =26        38
IO_RTC_DAY1    =27        39
IO_RTC_HOUR    =24        36
IO_RTC_MIN0    =22        34
IO_RTC_MIN1    =23        35
IO_RTC_MON0    =28        40
IO_RTC_MON1    =29        41
IO_RTC_SEC0    =20        32
IO_RTC_SEC1    =21        33
IO_RTC_WEEK    =2C        44
IO_RTC_YEAR1   =2B        43
IO_RTC_YERR0   =2A        42
IO_SIO0A_C     =12        18
IO_SIO0A_D     =10        16
IO_SIO0B_C     =13        19
IO_SIO0B_D     =11        17
MEM_CURSOR_STATE=4000      16384
MEM_LAST_CHAR  =4001      16385
MEM_PROMPT_SIZE=4003      16387
MEM_PROMPT_START=4005      16389
MOD_COMMANDS     1D4      468
MSG_CLEAR       3319      13081
MSG_CMD_HELP     479      1145
MSG_CMD_VER      4F3      1267
MSG_CRSR_0       196      406
MSG_CRSR_1       19D      413
MSG_HEXDUMP_HEADER  6C0      1728
MSG_NOT_IMPLEMENTED  574      1396
MSG_SYS_VER      3FF      1023
PARSE_CMD        286      646
PARSE_CMD_CMP_STRING_START  2B7      695
PARSE_CMD_CMP_STRING_START_CONTINUE  2BF      703
PARSE_CMD_CMP_STRING_START_MATCHED  2BC      700
PARSE_CMD_NO_MATCH  2B0      688
PARSE_CMD_START  289      649
PARSE_CMD_START_EXEC  2AD      685
PARSE_CMD_START_FOUND  2A9      681
PARSE_CMD_START_NOT_FOUND  2A0      672
PRINT_A_HEX      6A6      1702
PRINT_HEXDUMP    6E1      1761
PRINT_HEXDUMP_LOOP1  728      1832
PRINT_HEXDUMP_SOL  6EC      1772
PROG_MEM_START =4000      16384
PROG_ROM_START = 100      256
RX_CHA_AVAILABLE  1BE      446
SPEC_RX_CONDITON  5DC      1500
START_ROM      =00        0
STRCONV_BYTES_TO_HEX  100      256
STRCONV_BYTES_TO_HEX_1  10F      271
STRCONV_BYTES_TO_HEX_2  119      281
STR_NOTFOUND     26B      619
TX_EMP           13B      315
TermClear       32EF      13039
TermClearLoop   32F2      13042
TermCurrentX    40E0      16608
TermCurrentY    40E1      16609
TermCursorEnabled 40E3      16611
TermCursorState 40E2      16610
TermInit         7A4      1956
TermInit_copy_loop  7AD      1965
TermPrintChar    7FE      2046
TermPrintCharDone  89C      2204
TermPrintCharSPCR  892      2194
TermPrintCharSPDelete  83F      2111
TermPrintCharSPDeleteWrap  858      2136
TermPrintCharSPLF  872      2162
TermPrintCharSPLFScroll  884      2180
TermPrintCharWrap  829      2089
TermPrintStr     7ED      2029
TermPrintStr_EXIT  7FB      2043
TermPrintStr_LOOP  7EF      2031
TermScroll       8A1      2209
TermScrollClearLine  8EA      2282
TermScrollClearLineLoop  8ED      2285
TermScrollLine   8AC      2220
TermSetCursor    7E2      2018
TermVarMemoryLocation=40E0      16608
TermVarTemplate  7A0      1952
TermVarTemplateEnd 40E4      16612
TitleMessage     917      2327
Tms16k         =80        128
TmsBackground   28AB      10411
TmsBitmap       298E      10638
TmsBitmapColorLen= 800      2048
TmsBitmapFlags = 2C0      704
TmsBitmapLoop   299B      10651
TmsBitmapPatternLen=1800      6144
TmsBlack       =01        1
TmsBlankFlags  =80        128
TmsByteLoop     2922      10530
TmsChrOut      =288F      10383
TmsClearPixel  =A02F      41007
TmsColorAddr    E406      58374
TmsColorReg    =87        135
TmsColorTableHigh 29C0      10688
TmsColorTableReg=83        131
TmsCtrl0Reg    =80        128
TmsCtrl1Reg    =81        129
TmsCyan        =07        7
TmsDarkBlue    =04        4
TmsDarkGreen   =0C        12
TmsDarkRed     =06        6
TmsDarkYellow  =0A        10
TmsDisplayEnable=40        64
TmsExtVideo    = 100      256
TmsFill         2A4D      10829
TmsFillLoop     2A52      10834
TmsFont         2AEF      10991
TmsGray        =0E        14
TmsInitCommon   29D9      10713
TmsInitNonBitmap 295B      10587
TmsIntDisable   28DA      10458
TmsIntEnable    28CD      10445
TmsIntEnableBit=20        32
TmsLightBlue   =05        5
TmsLightGreen  =03        3
TmsLightRed    =09        9
TmsLightYellow =0B        11
TmsLineLoop     291F      10527
TmsM1          =10        16
TmsM2          =08        8
TmsM3          = 200      512
TmsMagenta     =0D        13
TmsMaskLookup   2AC2      10946
TmsMediumGreen =02        2
TmsMediumRed   =08        8
TmsMode         E402      58370
TmsMulticolor   290F      10511
TmsMulticolorFlags=C8        200
TmsMulticolorPatternLen= 600      1536
TmsNameAddr     E404      58372
TmsNameReg     =82        130
TmsNumPorts    =03        3
TmsPatternAddr  E408      58376
TmsPatternReg  =84        132
TmsPatternTableHigh 29D4      10708
TmsPixelColor   2ACA      10954
TmsPixelOp      2A97      10903
TmsPixelOpPlaceHolder 2AB8      10936
TmsPlotPixel    2A9B      10907
TmsPort         E400      58368
TmsPorts        2874      10356
TmsProbe        2850      10320
TmsProbeFailed  286F      10351
TmsProbeNext    2855      10325
TmsProbeWait    2865      10341
TmsRamIn        289A      10394
TmsRamInDelay   289F      10399
TmsRamInDelay2  28A7      10407
TmsRamOut       288F      10383
TmsRamOutDelay  2896      10390
TmsReadAddr     2A33      10803
TmsRegIn        2885      10373
TmsRegOut       287B      10363
TmsRepeat       2A91      10897
TmsReset        28E7      10471
TmsScreenColors E40E      58382
TmsSectionLoop  291D      10525
TmsSetPixel    =B0        176
TmsSetReg       2877      10359
TmsSetWait      284A      10314
TmsSprite32    =02        2
TmsSpriteAttrAddr E40C      58380
TmsSpriteAttrReg=85        133
TmsSpriteConfig 28BC      10428
TmsSpriteMag   =01        1
TmsSpritePatternAddr E40A      58378
TmsSpritePatternReg=86        134
TmsStrOut       2A86      10886
TmsSubs          990      2448
TmsTextColor    2A5C      10844
TmsTextFlags   =D0        208
TmsTextMode     2946      10566
TmsTextNameLen = 3C0      960
TmsTextPatternLen= 800      2048
TmsTextPos      2A6F      10863
TmsTile         293A      10554
TmsTileColorLen=20        32
TmsTileFlags   =C0        192
TmsTileNameLen = 300      768
TmsTilePatternLen= 800      2048
TmsTransparent =00        0
TmsWait         E401      58369
TmsWaits        2847      10311
TmsWhite       =0F        15
TmsWrite        2A3E      10814
TmsWriteAddr    2A26      10790
TmsWriteBit    =40        64
TmsWriteLoop    2A41      10817
TmsXYAddr       2ADE      10974
VAR_CONSOLE_BAUD=10        16
VDPTextBufferEnd=3B98      15256
VDPTextBufferStart=00        0
VDPWait          912      2322
init            00        0
init_console     590      1424
init_led         58C      1420
init_sound       596      1430
setup_vars      2800      10240
